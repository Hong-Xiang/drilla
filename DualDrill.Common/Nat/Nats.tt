<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace DualDrill.Common.Nat;

<# int[] values = [1, 2, 3, 4, 8, 16, 32, 64, 128, 256]; #>

<# foreach(var v in values) { 
   var typeName = $"N{v}";
#>
public sealed partial class <#= typeName #> : INat<<#= typeName #>>
{
	public static int Value => <#= v #>;
	public static <#= typeName #> Instance { get; } = new();	

	public T Accept<T>(INatVisitor<T> visitor) => visitor.Visit<<#= typeName #>>();
}

<# } #>

public static partial class Nat {
	public static INat FromValue(int value) {
		return value switch {
<# foreach(var v in values) { #>
			<#= v #> => N<#= v #>.Instance,
<# } #>
			_ => throw new NotSupportedException($"Convert {value} to INat is not supported")
		};
	}
}
