//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Runtime.CompilerServices;
using System.Runtime.Intrinsics;
using static DualDrill.Mathematics.DMath;

namespace DualDrill.Mathematics;

// 16-bit scalar vec types

public partial struct vec3i16 {
	internal Vector64<short> Data;

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	internal static Vector64<short> CreateData(short x, short y, short z) {
		return Vector64.Create(x, y, z, default(short));
	}

	public short x {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[0];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value, Data[1], Data[2]);
		}
	}
	public short y {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[1];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(Data[0], value, Data[2]);
		}
	}
	public short z {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[2];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(Data[0], Data[1], value);
		}
	}

	public vec2i16 xx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, x);


	}
	public vec2i16 xy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, y);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.x, value.y, z);
		}

	}
	public vec2i16 xz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, z);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.x, y, value.y);
		}

	}
	public vec2i16 yx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, x);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.y, value.x, z);
		}

	}
	public vec2i16 yy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, y);


	}
	public vec2i16 yz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, z);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(x, value.x, value.y);
		}

	}
	public vec2i16 zx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, x);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.y, y, value.x);
		}

	}
	public vec2i16 zy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, y);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(x, value.y, value.x);
		}

	}
	public vec2i16 zz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, z);


	}

	public vec3i16 xxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, x);
	}
	public vec3i16 xxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, y);
	}
	public vec3i16 xxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, z);
	}
	public vec3i16 xyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, x);
	}
	public vec3i16 xyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, y);
	}
	public vec3i16 xyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, z);
	}
	public vec3i16 xzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, x);
	}
	public vec3i16 xzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, y);
	}
	public vec3i16 xzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, z);
	}
	public vec3i16 yxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, x);
	}
	public vec3i16 yxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, y);
	}
	public vec3i16 yxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, z);
	}
	public vec3i16 yyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, x);
	}
	public vec3i16 yyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, y);
	}
	public vec3i16 yyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, z);
	}
	public vec3i16 yzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, x);
	}
	public vec3i16 yzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, y);
	}
	public vec3i16 yzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, z);
	}
	public vec3i16 zxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, x);
	}
	public vec3i16 zxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, y);
	}
	public vec3i16 zxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, z);
	}
	public vec3i16 zyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, x);
	}
	public vec3i16 zyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, y);
	}
	public vec3i16 zyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, z);
	}
	public vec3i16 zzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, x);
	}
	public vec3i16 zzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, y);
	}
	public vec3i16 zzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, z);
	}

	public vec4i16 xxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, x);
	}
	public vec4i16 xxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, y);
	}
	public vec4i16 xxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, z);
	}
	public vec4i16 xxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, x);
	}
	public vec4i16 xxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, y);
	}
	public vec4i16 xxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, z);
	}
	public vec4i16 xxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, x);
	}
	public vec4i16 xxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, y);
	}
	public vec4i16 xxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, z);
	}
	public vec4i16 xyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, x);
	}
	public vec4i16 xyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, y);
	}
	public vec4i16 xyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, z);
	}
	public vec4i16 xyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, x);
	}
	public vec4i16 xyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, y);
	}
	public vec4i16 xyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, z);
	}
	public vec4i16 xyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, x);
	}
	public vec4i16 xyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, y);
	}
	public vec4i16 xyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, z);
	}
	public vec4i16 xzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, x);
	}
	public vec4i16 xzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, y);
	}
	public vec4i16 xzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, z);
	}
	public vec4i16 xzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, x);
	}
	public vec4i16 xzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, y);
	}
	public vec4i16 xzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, z);
	}
	public vec4i16 xzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, x);
	}
	public vec4i16 xzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, y);
	}
	public vec4i16 xzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, z);
	}
	public vec4i16 yxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, x);
	}
	public vec4i16 yxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, y);
	}
	public vec4i16 yxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, z);
	}
	public vec4i16 yxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, x);
	}
	public vec4i16 yxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, y);
	}
	public vec4i16 yxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, z);
	}
	public vec4i16 yxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, x);
	}
	public vec4i16 yxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, y);
	}
	public vec4i16 yxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, z);
	}
	public vec4i16 yyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, x);
	}
	public vec4i16 yyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, y);
	}
	public vec4i16 yyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, z);
	}
	public vec4i16 yyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, x);
	}
	public vec4i16 yyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, y);
	}
	public vec4i16 yyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, z);
	}
	public vec4i16 yyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, x);
	}
	public vec4i16 yyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, y);
	}
	public vec4i16 yyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, z);
	}
	public vec4i16 yzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, x);
	}
	public vec4i16 yzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, y);
	}
	public vec4i16 yzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, z);
	}
	public vec4i16 yzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, x);
	}
	public vec4i16 yzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, y);
	}
	public vec4i16 yzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, z);
	}
	public vec4i16 yzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, x);
	}
	public vec4i16 yzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, y);
	}
	public vec4i16 yzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, z);
	}
	public vec4i16 zxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, x);
	}
	public vec4i16 zxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, y);
	}
	public vec4i16 zxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, z);
	}
	public vec4i16 zxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, x);
	}
	public vec4i16 zxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, y);
	}
	public vec4i16 zxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, z);
	}
	public vec4i16 zxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, x);
	}
	public vec4i16 zxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, y);
	}
	public vec4i16 zxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, z);
	}
	public vec4i16 zyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, x);
	}
	public vec4i16 zyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, y);
	}
	public vec4i16 zyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, z);
	}
	public vec4i16 zyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, x);
	}
	public vec4i16 zyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, y);
	}
	public vec4i16 zyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, z);
	}
	public vec4i16 zyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, x);
	}
	public vec4i16 zyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, y);
	}
	public vec4i16 zyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, z);
	}
	public vec4i16 zzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, x);
	}
	public vec4i16 zzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, y);
	}
	public vec4i16 zzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, z);
	}
	public vec4i16 zzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, x);
	}
	public vec4i16 zzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, y);
	}
	public vec4i16 zzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, z);
	}
	public vec4i16 zzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, x);
	}
	public vec4i16 zzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, y);
	}
	public vec4i16 zzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, z);
	}

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i16 operator -(vec3i16 v) => new() { Data = - v.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i16 operator + (vec3i16 l, vec3i16 r) => new() { Data = l.Data + r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i16 operator - (vec3i16 l, vec3i16 r) => new() { Data = l.Data - r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i16 operator * (vec3i16 l, vec3i16 r) => new() { Data = l.Data * r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i16 operator / (vec3i16 l, vec3i16 r) => new() { Data = l.Data / r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i16 operator & (vec3i16 l, vec3i16 r) => new() { Data = l.Data & r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i16 operator | (vec3i16 l, vec3i16 r) => new() { Data = l.Data | r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i16 operator ^ (vec3i16 l, vec3i16 r) => new() { Data = l.Data ^ r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i16 operator %(vec3i16 l, vec3i16 r) => new() { Data = Vector64.Create((short)(l.x % r.x), (short)(l.y % r.y), (short)(l.z % r.z), default(short)) };
} 

public partial class DMath {
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i16 vec3(short x, short y, short z) => new() { Data =  vec3i16.CreateData(x, y, z) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i16 vec3(short e) => vec3(e, e, e);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i16 vec3(short e, vec2i16 v) => vec3(e, v.x, v.y);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i16 vec3(vec2i16 v, short e) => vec3(v.x, v.y, e);
}


public partial struct vec3u16 {
	internal Vector64<ushort> Data;

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	internal static Vector64<ushort> CreateData(ushort x, ushort y, ushort z) {
		return Vector64.Create(x, y, z, default(ushort));
	}

	public ushort x {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[0];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value, Data[1], Data[2]);
		}
	}
	public ushort y {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[1];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(Data[0], value, Data[2]);
		}
	}
	public ushort z {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[2];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(Data[0], Data[1], value);
		}
	}

	public vec2u16 xx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, x);


	}
	public vec2u16 xy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, y);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.x, value.y, z);
		}

	}
	public vec2u16 xz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, z);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.x, y, value.y);
		}

	}
	public vec2u16 yx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, x);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.y, value.x, z);
		}

	}
	public vec2u16 yy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, y);


	}
	public vec2u16 yz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, z);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(x, value.x, value.y);
		}

	}
	public vec2u16 zx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, x);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.y, y, value.x);
		}

	}
	public vec2u16 zy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, y);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(x, value.y, value.x);
		}

	}
	public vec2u16 zz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, z);


	}

	public vec3u16 xxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, x);
	}
	public vec3u16 xxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, y);
	}
	public vec3u16 xxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, z);
	}
	public vec3u16 xyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, x);
	}
	public vec3u16 xyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, y);
	}
	public vec3u16 xyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, z);
	}
	public vec3u16 xzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, x);
	}
	public vec3u16 xzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, y);
	}
	public vec3u16 xzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, z);
	}
	public vec3u16 yxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, x);
	}
	public vec3u16 yxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, y);
	}
	public vec3u16 yxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, z);
	}
	public vec3u16 yyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, x);
	}
	public vec3u16 yyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, y);
	}
	public vec3u16 yyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, z);
	}
	public vec3u16 yzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, x);
	}
	public vec3u16 yzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, y);
	}
	public vec3u16 yzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, z);
	}
	public vec3u16 zxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, x);
	}
	public vec3u16 zxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, y);
	}
	public vec3u16 zxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, z);
	}
	public vec3u16 zyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, x);
	}
	public vec3u16 zyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, y);
	}
	public vec3u16 zyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, z);
	}
	public vec3u16 zzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, x);
	}
	public vec3u16 zzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, y);
	}
	public vec3u16 zzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, z);
	}

	public vec4u16 xxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, x);
	}
	public vec4u16 xxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, y);
	}
	public vec4u16 xxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, z);
	}
	public vec4u16 xxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, x);
	}
	public vec4u16 xxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, y);
	}
	public vec4u16 xxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, z);
	}
	public vec4u16 xxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, x);
	}
	public vec4u16 xxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, y);
	}
	public vec4u16 xxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, z);
	}
	public vec4u16 xyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, x);
	}
	public vec4u16 xyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, y);
	}
	public vec4u16 xyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, z);
	}
	public vec4u16 xyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, x);
	}
	public vec4u16 xyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, y);
	}
	public vec4u16 xyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, z);
	}
	public vec4u16 xyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, x);
	}
	public vec4u16 xyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, y);
	}
	public vec4u16 xyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, z);
	}
	public vec4u16 xzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, x);
	}
	public vec4u16 xzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, y);
	}
	public vec4u16 xzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, z);
	}
	public vec4u16 xzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, x);
	}
	public vec4u16 xzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, y);
	}
	public vec4u16 xzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, z);
	}
	public vec4u16 xzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, x);
	}
	public vec4u16 xzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, y);
	}
	public vec4u16 xzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, z);
	}
	public vec4u16 yxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, x);
	}
	public vec4u16 yxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, y);
	}
	public vec4u16 yxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, z);
	}
	public vec4u16 yxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, x);
	}
	public vec4u16 yxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, y);
	}
	public vec4u16 yxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, z);
	}
	public vec4u16 yxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, x);
	}
	public vec4u16 yxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, y);
	}
	public vec4u16 yxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, z);
	}
	public vec4u16 yyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, x);
	}
	public vec4u16 yyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, y);
	}
	public vec4u16 yyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, z);
	}
	public vec4u16 yyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, x);
	}
	public vec4u16 yyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, y);
	}
	public vec4u16 yyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, z);
	}
	public vec4u16 yyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, x);
	}
	public vec4u16 yyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, y);
	}
	public vec4u16 yyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, z);
	}
	public vec4u16 yzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, x);
	}
	public vec4u16 yzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, y);
	}
	public vec4u16 yzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, z);
	}
	public vec4u16 yzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, x);
	}
	public vec4u16 yzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, y);
	}
	public vec4u16 yzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, z);
	}
	public vec4u16 yzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, x);
	}
	public vec4u16 yzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, y);
	}
	public vec4u16 yzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, z);
	}
	public vec4u16 zxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, x);
	}
	public vec4u16 zxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, y);
	}
	public vec4u16 zxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, z);
	}
	public vec4u16 zxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, x);
	}
	public vec4u16 zxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, y);
	}
	public vec4u16 zxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, z);
	}
	public vec4u16 zxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, x);
	}
	public vec4u16 zxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, y);
	}
	public vec4u16 zxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, z);
	}
	public vec4u16 zyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, x);
	}
	public vec4u16 zyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, y);
	}
	public vec4u16 zyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, z);
	}
	public vec4u16 zyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, x);
	}
	public vec4u16 zyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, y);
	}
	public vec4u16 zyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, z);
	}
	public vec4u16 zyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, x);
	}
	public vec4u16 zyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, y);
	}
	public vec4u16 zyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, z);
	}
	public vec4u16 zzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, x);
	}
	public vec4u16 zzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, y);
	}
	public vec4u16 zzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, z);
	}
	public vec4u16 zzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, x);
	}
	public vec4u16 zzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, y);
	}
	public vec4u16 zzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, z);
	}
	public vec4u16 zzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, x);
	}
	public vec4u16 zzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, y);
	}
	public vec4u16 zzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, z);
	}

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u16 operator -(vec3u16 v) => new() { Data = - v.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u16 operator + (vec3u16 l, vec3u16 r) => new() { Data = l.Data + r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u16 operator - (vec3u16 l, vec3u16 r) => new() { Data = l.Data - r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u16 operator * (vec3u16 l, vec3u16 r) => new() { Data = l.Data * r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u16 operator / (vec3u16 l, vec3u16 r) => new() { Data = l.Data / r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u16 operator & (vec3u16 l, vec3u16 r) => new() { Data = l.Data & r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u16 operator | (vec3u16 l, vec3u16 r) => new() { Data = l.Data | r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u16 operator ^ (vec3u16 l, vec3u16 r) => new() { Data = l.Data ^ r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u16 operator %(vec3u16 l, vec3u16 r) => new() { Data = Vector64.Create((ushort)(l.x % r.x), (ushort)(l.y % r.y), (ushort)(l.z % r.z), default(ushort)) };
} 

public partial class DMath {
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u16 vec3(ushort x, ushort y, ushort z) => new() { Data =  vec3u16.CreateData(x, y, z) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u16 vec3(ushort e) => vec3(e, e, e);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u16 vec3(ushort e, vec2u16 v) => vec3(e, v.x, v.y);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u16 vec3(vec2u16 v, ushort e) => vec3(v.x, v.y, e);
}

// 32-bit scalar vec types

public partial struct vec3i32 {
	internal Vector128<int> Data;

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	internal static Vector128<int> CreateData(int x, int y, int z) {
		return Vector128.Create(x, y, z, default(int));
	}

	public int x {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[0];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value, Data[1], Data[2]);
		}
	}
	public int y {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[1];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(Data[0], value, Data[2]);
		}
	}
	public int z {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[2];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(Data[0], Data[1], value);
		}
	}

	public vec2i32 xx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, x);


	}
	public vec2i32 xy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, y);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.x, value.y, z);
		}

	}
	public vec2i32 xz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, z);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.x, y, value.y);
		}

	}
	public vec2i32 yx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, x);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.y, value.x, z);
		}

	}
	public vec2i32 yy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, y);


	}
	public vec2i32 yz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, z);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(x, value.x, value.y);
		}

	}
	public vec2i32 zx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, x);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.y, y, value.x);
		}

	}
	public vec2i32 zy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, y);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(x, value.y, value.x);
		}

	}
	public vec2i32 zz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, z);


	}

	public vec3i32 xxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, x);
	}
	public vec3i32 xxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, y);
	}
	public vec3i32 xxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, z);
	}
	public vec3i32 xyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, x);
	}
	public vec3i32 xyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, y);
	}
	public vec3i32 xyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, z);
	}
	public vec3i32 xzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, x);
	}
	public vec3i32 xzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, y);
	}
	public vec3i32 xzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, z);
	}
	public vec3i32 yxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, x);
	}
	public vec3i32 yxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, y);
	}
	public vec3i32 yxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, z);
	}
	public vec3i32 yyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, x);
	}
	public vec3i32 yyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, y);
	}
	public vec3i32 yyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, z);
	}
	public vec3i32 yzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, x);
	}
	public vec3i32 yzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, y);
	}
	public vec3i32 yzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, z);
	}
	public vec3i32 zxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, x);
	}
	public vec3i32 zxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, y);
	}
	public vec3i32 zxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, z);
	}
	public vec3i32 zyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, x);
	}
	public vec3i32 zyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, y);
	}
	public vec3i32 zyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, z);
	}
	public vec3i32 zzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, x);
	}
	public vec3i32 zzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, y);
	}
	public vec3i32 zzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, z);
	}

	public vec4i32 xxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, x);
	}
	public vec4i32 xxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, y);
	}
	public vec4i32 xxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, z);
	}
	public vec4i32 xxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, x);
	}
	public vec4i32 xxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, y);
	}
	public vec4i32 xxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, z);
	}
	public vec4i32 xxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, x);
	}
	public vec4i32 xxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, y);
	}
	public vec4i32 xxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, z);
	}
	public vec4i32 xyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, x);
	}
	public vec4i32 xyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, y);
	}
	public vec4i32 xyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, z);
	}
	public vec4i32 xyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, x);
	}
	public vec4i32 xyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, y);
	}
	public vec4i32 xyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, z);
	}
	public vec4i32 xyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, x);
	}
	public vec4i32 xyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, y);
	}
	public vec4i32 xyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, z);
	}
	public vec4i32 xzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, x);
	}
	public vec4i32 xzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, y);
	}
	public vec4i32 xzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, z);
	}
	public vec4i32 xzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, x);
	}
	public vec4i32 xzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, y);
	}
	public vec4i32 xzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, z);
	}
	public vec4i32 xzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, x);
	}
	public vec4i32 xzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, y);
	}
	public vec4i32 xzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, z);
	}
	public vec4i32 yxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, x);
	}
	public vec4i32 yxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, y);
	}
	public vec4i32 yxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, z);
	}
	public vec4i32 yxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, x);
	}
	public vec4i32 yxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, y);
	}
	public vec4i32 yxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, z);
	}
	public vec4i32 yxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, x);
	}
	public vec4i32 yxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, y);
	}
	public vec4i32 yxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, z);
	}
	public vec4i32 yyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, x);
	}
	public vec4i32 yyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, y);
	}
	public vec4i32 yyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, z);
	}
	public vec4i32 yyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, x);
	}
	public vec4i32 yyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, y);
	}
	public vec4i32 yyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, z);
	}
	public vec4i32 yyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, x);
	}
	public vec4i32 yyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, y);
	}
	public vec4i32 yyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, z);
	}
	public vec4i32 yzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, x);
	}
	public vec4i32 yzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, y);
	}
	public vec4i32 yzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, z);
	}
	public vec4i32 yzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, x);
	}
	public vec4i32 yzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, y);
	}
	public vec4i32 yzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, z);
	}
	public vec4i32 yzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, x);
	}
	public vec4i32 yzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, y);
	}
	public vec4i32 yzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, z);
	}
	public vec4i32 zxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, x);
	}
	public vec4i32 zxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, y);
	}
	public vec4i32 zxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, z);
	}
	public vec4i32 zxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, x);
	}
	public vec4i32 zxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, y);
	}
	public vec4i32 zxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, z);
	}
	public vec4i32 zxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, x);
	}
	public vec4i32 zxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, y);
	}
	public vec4i32 zxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, z);
	}
	public vec4i32 zyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, x);
	}
	public vec4i32 zyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, y);
	}
	public vec4i32 zyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, z);
	}
	public vec4i32 zyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, x);
	}
	public vec4i32 zyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, y);
	}
	public vec4i32 zyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, z);
	}
	public vec4i32 zyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, x);
	}
	public vec4i32 zyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, y);
	}
	public vec4i32 zyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, z);
	}
	public vec4i32 zzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, x);
	}
	public vec4i32 zzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, y);
	}
	public vec4i32 zzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, z);
	}
	public vec4i32 zzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, x);
	}
	public vec4i32 zzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, y);
	}
	public vec4i32 zzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, z);
	}
	public vec4i32 zzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, x);
	}
	public vec4i32 zzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, y);
	}
	public vec4i32 zzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, z);
	}

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i32 operator -(vec3i32 v) => new() { Data = - v.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i32 operator + (vec3i32 l, vec3i32 r) => new() { Data = l.Data + r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i32 operator - (vec3i32 l, vec3i32 r) => new() { Data = l.Data - r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i32 operator * (vec3i32 l, vec3i32 r) => new() { Data = l.Data * r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i32 operator / (vec3i32 l, vec3i32 r) => new() { Data = l.Data / r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i32 operator & (vec3i32 l, vec3i32 r) => new() { Data = l.Data & r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i32 operator | (vec3i32 l, vec3i32 r) => new() { Data = l.Data | r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i32 operator ^ (vec3i32 l, vec3i32 r) => new() { Data = l.Data ^ r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i32 operator %(vec3i32 l, vec3i32 r) => new() { Data = Vector128.Create((int)(l.x % r.x), (int)(l.y % r.y), (int)(l.z % r.z), default(int)) };
} 

public partial class DMath {
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i32 vec3(int x, int y, int z) => new() { Data =  vec3i32.CreateData(x, y, z) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i32 vec3(int e) => vec3(e, e, e);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i32 vec3(int e, vec2i32 v) => vec3(e, v.x, v.y);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i32 vec3(vec2i32 v, int e) => vec3(v.x, v.y, e);
}


public partial struct vec3u32 {
	internal Vector128<uint> Data;

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	internal static Vector128<uint> CreateData(uint x, uint y, uint z) {
		return Vector128.Create(x, y, z, default(uint));
	}

	public uint x {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[0];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value, Data[1], Data[2]);
		}
	}
	public uint y {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[1];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(Data[0], value, Data[2]);
		}
	}
	public uint z {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[2];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(Data[0], Data[1], value);
		}
	}

	public vec2u32 xx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, x);


	}
	public vec2u32 xy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, y);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.x, value.y, z);
		}

	}
	public vec2u32 xz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, z);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.x, y, value.y);
		}

	}
	public vec2u32 yx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, x);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.y, value.x, z);
		}

	}
	public vec2u32 yy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, y);


	}
	public vec2u32 yz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, z);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(x, value.x, value.y);
		}

	}
	public vec2u32 zx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, x);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.y, y, value.x);
		}

	}
	public vec2u32 zy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, y);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(x, value.y, value.x);
		}

	}
	public vec2u32 zz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, z);


	}

	public vec3u32 xxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, x);
	}
	public vec3u32 xxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, y);
	}
	public vec3u32 xxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, z);
	}
	public vec3u32 xyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, x);
	}
	public vec3u32 xyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, y);
	}
	public vec3u32 xyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, z);
	}
	public vec3u32 xzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, x);
	}
	public vec3u32 xzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, y);
	}
	public vec3u32 xzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, z);
	}
	public vec3u32 yxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, x);
	}
	public vec3u32 yxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, y);
	}
	public vec3u32 yxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, z);
	}
	public vec3u32 yyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, x);
	}
	public vec3u32 yyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, y);
	}
	public vec3u32 yyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, z);
	}
	public vec3u32 yzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, x);
	}
	public vec3u32 yzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, y);
	}
	public vec3u32 yzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, z);
	}
	public vec3u32 zxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, x);
	}
	public vec3u32 zxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, y);
	}
	public vec3u32 zxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, z);
	}
	public vec3u32 zyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, x);
	}
	public vec3u32 zyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, y);
	}
	public vec3u32 zyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, z);
	}
	public vec3u32 zzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, x);
	}
	public vec3u32 zzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, y);
	}
	public vec3u32 zzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, z);
	}

	public vec4u32 xxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, x);
	}
	public vec4u32 xxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, y);
	}
	public vec4u32 xxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, z);
	}
	public vec4u32 xxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, x);
	}
	public vec4u32 xxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, y);
	}
	public vec4u32 xxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, z);
	}
	public vec4u32 xxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, x);
	}
	public vec4u32 xxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, y);
	}
	public vec4u32 xxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, z);
	}
	public vec4u32 xyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, x);
	}
	public vec4u32 xyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, y);
	}
	public vec4u32 xyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, z);
	}
	public vec4u32 xyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, x);
	}
	public vec4u32 xyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, y);
	}
	public vec4u32 xyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, z);
	}
	public vec4u32 xyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, x);
	}
	public vec4u32 xyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, y);
	}
	public vec4u32 xyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, z);
	}
	public vec4u32 xzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, x);
	}
	public vec4u32 xzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, y);
	}
	public vec4u32 xzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, z);
	}
	public vec4u32 xzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, x);
	}
	public vec4u32 xzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, y);
	}
	public vec4u32 xzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, z);
	}
	public vec4u32 xzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, x);
	}
	public vec4u32 xzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, y);
	}
	public vec4u32 xzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, z);
	}
	public vec4u32 yxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, x);
	}
	public vec4u32 yxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, y);
	}
	public vec4u32 yxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, z);
	}
	public vec4u32 yxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, x);
	}
	public vec4u32 yxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, y);
	}
	public vec4u32 yxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, z);
	}
	public vec4u32 yxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, x);
	}
	public vec4u32 yxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, y);
	}
	public vec4u32 yxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, z);
	}
	public vec4u32 yyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, x);
	}
	public vec4u32 yyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, y);
	}
	public vec4u32 yyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, z);
	}
	public vec4u32 yyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, x);
	}
	public vec4u32 yyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, y);
	}
	public vec4u32 yyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, z);
	}
	public vec4u32 yyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, x);
	}
	public vec4u32 yyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, y);
	}
	public vec4u32 yyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, z);
	}
	public vec4u32 yzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, x);
	}
	public vec4u32 yzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, y);
	}
	public vec4u32 yzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, z);
	}
	public vec4u32 yzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, x);
	}
	public vec4u32 yzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, y);
	}
	public vec4u32 yzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, z);
	}
	public vec4u32 yzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, x);
	}
	public vec4u32 yzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, y);
	}
	public vec4u32 yzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, z);
	}
	public vec4u32 zxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, x);
	}
	public vec4u32 zxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, y);
	}
	public vec4u32 zxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, z);
	}
	public vec4u32 zxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, x);
	}
	public vec4u32 zxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, y);
	}
	public vec4u32 zxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, z);
	}
	public vec4u32 zxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, x);
	}
	public vec4u32 zxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, y);
	}
	public vec4u32 zxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, z);
	}
	public vec4u32 zyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, x);
	}
	public vec4u32 zyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, y);
	}
	public vec4u32 zyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, z);
	}
	public vec4u32 zyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, x);
	}
	public vec4u32 zyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, y);
	}
	public vec4u32 zyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, z);
	}
	public vec4u32 zyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, x);
	}
	public vec4u32 zyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, y);
	}
	public vec4u32 zyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, z);
	}
	public vec4u32 zzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, x);
	}
	public vec4u32 zzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, y);
	}
	public vec4u32 zzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, z);
	}
	public vec4u32 zzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, x);
	}
	public vec4u32 zzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, y);
	}
	public vec4u32 zzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, z);
	}
	public vec4u32 zzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, x);
	}
	public vec4u32 zzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, y);
	}
	public vec4u32 zzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, z);
	}

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u32 operator -(vec3u32 v) => new() { Data = - v.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u32 operator + (vec3u32 l, vec3u32 r) => new() { Data = l.Data + r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u32 operator - (vec3u32 l, vec3u32 r) => new() { Data = l.Data - r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u32 operator * (vec3u32 l, vec3u32 r) => new() { Data = l.Data * r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u32 operator / (vec3u32 l, vec3u32 r) => new() { Data = l.Data / r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u32 operator & (vec3u32 l, vec3u32 r) => new() { Data = l.Data & r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u32 operator | (vec3u32 l, vec3u32 r) => new() { Data = l.Data | r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u32 operator ^ (vec3u32 l, vec3u32 r) => new() { Data = l.Data ^ r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u32 operator %(vec3u32 l, vec3u32 r) => new() { Data = Vector128.Create((uint)(l.x % r.x), (uint)(l.y % r.y), (uint)(l.z % r.z), default(uint)) };
} 

public partial class DMath {
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u32 vec3(uint x, uint y, uint z) => new() { Data =  vec3u32.CreateData(x, y, z) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u32 vec3(uint e) => vec3(e, e, e);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u32 vec3(uint e, vec2u32 v) => vec3(e, v.x, v.y);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u32 vec3(vec2u32 v, uint e) => vec3(v.x, v.y, e);
}


public partial struct vec3f32 {
	internal Vector128<float> Data;

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	internal static Vector128<float> CreateData(float x, float y, float z) {
		return Vector128.Create(x, y, z, default(float));
	}

	public float x {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[0];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value, Data[1], Data[2]);
		}
	}
	public float y {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[1];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(Data[0], value, Data[2]);
		}
	}
	public float z {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[2];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(Data[0], Data[1], value);
		}
	}

	public vec2f32 xx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, x);


	}
	public vec2f32 xy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, y);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.x, value.y, z);
		}

	}
	public vec2f32 xz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, z);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.x, y, value.y);
		}

	}
	public vec2f32 yx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, x);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.y, value.x, z);
		}

	}
	public vec2f32 yy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, y);


	}
	public vec2f32 yz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, z);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(x, value.x, value.y);
		}

	}
	public vec2f32 zx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, x);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.y, y, value.x);
		}

	}
	public vec2f32 zy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, y);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(x, value.y, value.x);
		}

	}
	public vec2f32 zz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, z);


	}

	public vec3f32 xxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, x);
	}
	public vec3f32 xxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, y);
	}
	public vec3f32 xxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, z);
	}
	public vec3f32 xyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, x);
	}
	public vec3f32 xyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, y);
	}
	public vec3f32 xyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, z);
	}
	public vec3f32 xzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, x);
	}
	public vec3f32 xzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, y);
	}
	public vec3f32 xzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, z);
	}
	public vec3f32 yxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, x);
	}
	public vec3f32 yxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, y);
	}
	public vec3f32 yxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, z);
	}
	public vec3f32 yyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, x);
	}
	public vec3f32 yyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, y);
	}
	public vec3f32 yyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, z);
	}
	public vec3f32 yzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, x);
	}
	public vec3f32 yzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, y);
	}
	public vec3f32 yzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, z);
	}
	public vec3f32 zxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, x);
	}
	public vec3f32 zxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, y);
	}
	public vec3f32 zxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, z);
	}
	public vec3f32 zyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, x);
	}
	public vec3f32 zyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, y);
	}
	public vec3f32 zyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, z);
	}
	public vec3f32 zzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, x);
	}
	public vec3f32 zzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, y);
	}
	public vec3f32 zzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, z);
	}

	public vec4f32 xxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, x);
	}
	public vec4f32 xxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, y);
	}
	public vec4f32 xxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, z);
	}
	public vec4f32 xxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, x);
	}
	public vec4f32 xxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, y);
	}
	public vec4f32 xxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, z);
	}
	public vec4f32 xxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, x);
	}
	public vec4f32 xxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, y);
	}
	public vec4f32 xxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, z);
	}
	public vec4f32 xyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, x);
	}
	public vec4f32 xyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, y);
	}
	public vec4f32 xyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, z);
	}
	public vec4f32 xyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, x);
	}
	public vec4f32 xyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, y);
	}
	public vec4f32 xyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, z);
	}
	public vec4f32 xyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, x);
	}
	public vec4f32 xyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, y);
	}
	public vec4f32 xyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, z);
	}
	public vec4f32 xzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, x);
	}
	public vec4f32 xzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, y);
	}
	public vec4f32 xzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, z);
	}
	public vec4f32 xzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, x);
	}
	public vec4f32 xzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, y);
	}
	public vec4f32 xzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, z);
	}
	public vec4f32 xzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, x);
	}
	public vec4f32 xzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, y);
	}
	public vec4f32 xzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, z);
	}
	public vec4f32 yxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, x);
	}
	public vec4f32 yxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, y);
	}
	public vec4f32 yxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, z);
	}
	public vec4f32 yxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, x);
	}
	public vec4f32 yxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, y);
	}
	public vec4f32 yxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, z);
	}
	public vec4f32 yxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, x);
	}
	public vec4f32 yxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, y);
	}
	public vec4f32 yxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, z);
	}
	public vec4f32 yyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, x);
	}
	public vec4f32 yyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, y);
	}
	public vec4f32 yyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, z);
	}
	public vec4f32 yyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, x);
	}
	public vec4f32 yyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, y);
	}
	public vec4f32 yyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, z);
	}
	public vec4f32 yyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, x);
	}
	public vec4f32 yyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, y);
	}
	public vec4f32 yyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, z);
	}
	public vec4f32 yzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, x);
	}
	public vec4f32 yzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, y);
	}
	public vec4f32 yzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, z);
	}
	public vec4f32 yzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, x);
	}
	public vec4f32 yzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, y);
	}
	public vec4f32 yzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, z);
	}
	public vec4f32 yzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, x);
	}
	public vec4f32 yzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, y);
	}
	public vec4f32 yzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, z);
	}
	public vec4f32 zxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, x);
	}
	public vec4f32 zxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, y);
	}
	public vec4f32 zxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, z);
	}
	public vec4f32 zxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, x);
	}
	public vec4f32 zxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, y);
	}
	public vec4f32 zxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, z);
	}
	public vec4f32 zxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, x);
	}
	public vec4f32 zxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, y);
	}
	public vec4f32 zxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, z);
	}
	public vec4f32 zyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, x);
	}
	public vec4f32 zyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, y);
	}
	public vec4f32 zyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, z);
	}
	public vec4f32 zyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, x);
	}
	public vec4f32 zyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, y);
	}
	public vec4f32 zyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, z);
	}
	public vec4f32 zyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, x);
	}
	public vec4f32 zyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, y);
	}
	public vec4f32 zyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, z);
	}
	public vec4f32 zzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, x);
	}
	public vec4f32 zzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, y);
	}
	public vec4f32 zzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, z);
	}
	public vec4f32 zzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, x);
	}
	public vec4f32 zzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, y);
	}
	public vec4f32 zzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, z);
	}
	public vec4f32 zzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, x);
	}
	public vec4f32 zzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, y);
	}
	public vec4f32 zzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, z);
	}

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f32 operator -(vec3f32 v) => new() { Data = - v.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f32 operator + (vec3f32 l, vec3f32 r) => new() { Data = l.Data + r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f32 operator - (vec3f32 l, vec3f32 r) => new() { Data = l.Data - r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f32 operator * (vec3f32 l, vec3f32 r) => new() { Data = l.Data * r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f32 operator / (vec3f32 l, vec3f32 r) => new() { Data = l.Data / r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f32 operator & (vec3f32 l, vec3f32 r) => new() { Data = l.Data & r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f32 operator | (vec3f32 l, vec3f32 r) => new() { Data = l.Data | r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f32 operator ^ (vec3f32 l, vec3f32 r) => new() { Data = l.Data ^ r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f32 operator %(vec3f32 l, vec3f32 r) => new() { Data = Vector128.Create((float)(l.x % r.x), (float)(l.y % r.y), (float)(l.z % r.z), default(float)) };
} 

public partial class DMath {
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f32 vec3(float x, float y, float z) => new() { Data =  vec3f32.CreateData(x, y, z) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f32 vec3(float e) => vec3(e, e, e);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f32 vec3(float e, vec2f32 v) => vec3(e, v.x, v.y);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f32 vec3(vec2f32 v, float e) => vec3(v.x, v.y, e);
}

// 64-bit scalar vec types

public partial struct vec3i64 {
	internal Vector256<long> Data;

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	internal static Vector256<long> CreateData(long x, long y, long z) {
		return Vector256.Create(x, y, z, default(long));
	}

	public long x {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[0];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value, Data[1], Data[2]);
		}
	}
	public long y {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[1];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(Data[0], value, Data[2]);
		}
	}
	public long z {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[2];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(Data[0], Data[1], value);
		}
	}

	public vec2i64 xx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, x);


	}
	public vec2i64 xy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, y);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.x, value.y, z);
		}

	}
	public vec2i64 xz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, z);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.x, y, value.y);
		}

	}
	public vec2i64 yx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, x);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.y, value.x, z);
		}

	}
	public vec2i64 yy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, y);


	}
	public vec2i64 yz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, z);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(x, value.x, value.y);
		}

	}
	public vec2i64 zx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, x);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.y, y, value.x);
		}

	}
	public vec2i64 zy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, y);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(x, value.y, value.x);
		}

	}
	public vec2i64 zz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, z);


	}

	public vec3i64 xxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, x);
	}
	public vec3i64 xxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, y);
	}
	public vec3i64 xxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, z);
	}
	public vec3i64 xyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, x);
	}
	public vec3i64 xyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, y);
	}
	public vec3i64 xyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, z);
	}
	public vec3i64 xzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, x);
	}
	public vec3i64 xzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, y);
	}
	public vec3i64 xzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, z);
	}
	public vec3i64 yxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, x);
	}
	public vec3i64 yxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, y);
	}
	public vec3i64 yxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, z);
	}
	public vec3i64 yyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, x);
	}
	public vec3i64 yyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, y);
	}
	public vec3i64 yyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, z);
	}
	public vec3i64 yzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, x);
	}
	public vec3i64 yzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, y);
	}
	public vec3i64 yzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, z);
	}
	public vec3i64 zxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, x);
	}
	public vec3i64 zxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, y);
	}
	public vec3i64 zxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, z);
	}
	public vec3i64 zyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, x);
	}
	public vec3i64 zyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, y);
	}
	public vec3i64 zyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, z);
	}
	public vec3i64 zzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, x);
	}
	public vec3i64 zzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, y);
	}
	public vec3i64 zzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, z);
	}

	public vec4i64 xxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, x);
	}
	public vec4i64 xxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, y);
	}
	public vec4i64 xxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, z);
	}
	public vec4i64 xxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, x);
	}
	public vec4i64 xxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, y);
	}
	public vec4i64 xxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, z);
	}
	public vec4i64 xxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, x);
	}
	public vec4i64 xxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, y);
	}
	public vec4i64 xxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, z);
	}
	public vec4i64 xyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, x);
	}
	public vec4i64 xyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, y);
	}
	public vec4i64 xyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, z);
	}
	public vec4i64 xyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, x);
	}
	public vec4i64 xyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, y);
	}
	public vec4i64 xyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, z);
	}
	public vec4i64 xyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, x);
	}
	public vec4i64 xyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, y);
	}
	public vec4i64 xyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, z);
	}
	public vec4i64 xzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, x);
	}
	public vec4i64 xzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, y);
	}
	public vec4i64 xzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, z);
	}
	public vec4i64 xzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, x);
	}
	public vec4i64 xzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, y);
	}
	public vec4i64 xzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, z);
	}
	public vec4i64 xzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, x);
	}
	public vec4i64 xzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, y);
	}
	public vec4i64 xzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, z);
	}
	public vec4i64 yxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, x);
	}
	public vec4i64 yxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, y);
	}
	public vec4i64 yxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, z);
	}
	public vec4i64 yxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, x);
	}
	public vec4i64 yxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, y);
	}
	public vec4i64 yxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, z);
	}
	public vec4i64 yxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, x);
	}
	public vec4i64 yxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, y);
	}
	public vec4i64 yxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, z);
	}
	public vec4i64 yyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, x);
	}
	public vec4i64 yyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, y);
	}
	public vec4i64 yyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, z);
	}
	public vec4i64 yyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, x);
	}
	public vec4i64 yyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, y);
	}
	public vec4i64 yyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, z);
	}
	public vec4i64 yyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, x);
	}
	public vec4i64 yyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, y);
	}
	public vec4i64 yyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, z);
	}
	public vec4i64 yzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, x);
	}
	public vec4i64 yzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, y);
	}
	public vec4i64 yzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, z);
	}
	public vec4i64 yzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, x);
	}
	public vec4i64 yzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, y);
	}
	public vec4i64 yzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, z);
	}
	public vec4i64 yzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, x);
	}
	public vec4i64 yzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, y);
	}
	public vec4i64 yzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, z);
	}
	public vec4i64 zxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, x);
	}
	public vec4i64 zxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, y);
	}
	public vec4i64 zxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, z);
	}
	public vec4i64 zxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, x);
	}
	public vec4i64 zxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, y);
	}
	public vec4i64 zxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, z);
	}
	public vec4i64 zxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, x);
	}
	public vec4i64 zxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, y);
	}
	public vec4i64 zxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, z);
	}
	public vec4i64 zyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, x);
	}
	public vec4i64 zyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, y);
	}
	public vec4i64 zyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, z);
	}
	public vec4i64 zyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, x);
	}
	public vec4i64 zyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, y);
	}
	public vec4i64 zyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, z);
	}
	public vec4i64 zyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, x);
	}
	public vec4i64 zyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, y);
	}
	public vec4i64 zyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, z);
	}
	public vec4i64 zzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, x);
	}
	public vec4i64 zzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, y);
	}
	public vec4i64 zzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, z);
	}
	public vec4i64 zzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, x);
	}
	public vec4i64 zzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, y);
	}
	public vec4i64 zzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, z);
	}
	public vec4i64 zzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, x);
	}
	public vec4i64 zzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, y);
	}
	public vec4i64 zzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, z);
	}

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i64 operator -(vec3i64 v) => new() { Data = - v.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i64 operator + (vec3i64 l, vec3i64 r) => new() { Data = l.Data + r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i64 operator - (vec3i64 l, vec3i64 r) => new() { Data = l.Data - r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i64 operator * (vec3i64 l, vec3i64 r) => new() { Data = l.Data * r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i64 operator / (vec3i64 l, vec3i64 r) => new() { Data = l.Data / r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i64 operator & (vec3i64 l, vec3i64 r) => new() { Data = l.Data & r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i64 operator | (vec3i64 l, vec3i64 r) => new() { Data = l.Data | r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i64 operator ^ (vec3i64 l, vec3i64 r) => new() { Data = l.Data ^ r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i64 operator %(vec3i64 l, vec3i64 r) => new() { Data = Vector256.Create((long)(l.x % r.x), (long)(l.y % r.y), (long)(l.z % r.z), default(long)) };
} 

public partial class DMath {
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i64 vec3(long x, long y, long z) => new() { Data =  vec3i64.CreateData(x, y, z) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i64 vec3(long e) => vec3(e, e, e);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i64 vec3(long e, vec2i64 v) => vec3(e, v.x, v.y);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3i64 vec3(vec2i64 v, long e) => vec3(v.x, v.y, e);
}


public partial struct vec3u64 {
	internal Vector256<ulong> Data;

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	internal static Vector256<ulong> CreateData(ulong x, ulong y, ulong z) {
		return Vector256.Create(x, y, z, default(ulong));
	}

	public ulong x {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[0];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value, Data[1], Data[2]);
		}
	}
	public ulong y {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[1];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(Data[0], value, Data[2]);
		}
	}
	public ulong z {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[2];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(Data[0], Data[1], value);
		}
	}

	public vec2u64 xx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, x);


	}
	public vec2u64 xy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, y);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.x, value.y, z);
		}

	}
	public vec2u64 xz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, z);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.x, y, value.y);
		}

	}
	public vec2u64 yx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, x);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.y, value.x, z);
		}

	}
	public vec2u64 yy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, y);


	}
	public vec2u64 yz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, z);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(x, value.x, value.y);
		}

	}
	public vec2u64 zx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, x);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.y, y, value.x);
		}

	}
	public vec2u64 zy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, y);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(x, value.y, value.x);
		}

	}
	public vec2u64 zz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, z);


	}

	public vec3u64 xxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, x);
	}
	public vec3u64 xxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, y);
	}
	public vec3u64 xxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, z);
	}
	public vec3u64 xyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, x);
	}
	public vec3u64 xyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, y);
	}
	public vec3u64 xyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, z);
	}
	public vec3u64 xzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, x);
	}
	public vec3u64 xzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, y);
	}
	public vec3u64 xzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, z);
	}
	public vec3u64 yxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, x);
	}
	public vec3u64 yxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, y);
	}
	public vec3u64 yxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, z);
	}
	public vec3u64 yyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, x);
	}
	public vec3u64 yyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, y);
	}
	public vec3u64 yyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, z);
	}
	public vec3u64 yzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, x);
	}
	public vec3u64 yzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, y);
	}
	public vec3u64 yzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, z);
	}
	public vec3u64 zxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, x);
	}
	public vec3u64 zxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, y);
	}
	public vec3u64 zxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, z);
	}
	public vec3u64 zyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, x);
	}
	public vec3u64 zyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, y);
	}
	public vec3u64 zyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, z);
	}
	public vec3u64 zzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, x);
	}
	public vec3u64 zzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, y);
	}
	public vec3u64 zzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, z);
	}

	public vec4u64 xxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, x);
	}
	public vec4u64 xxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, y);
	}
	public vec4u64 xxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, z);
	}
	public vec4u64 xxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, x);
	}
	public vec4u64 xxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, y);
	}
	public vec4u64 xxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, z);
	}
	public vec4u64 xxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, x);
	}
	public vec4u64 xxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, y);
	}
	public vec4u64 xxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, z);
	}
	public vec4u64 xyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, x);
	}
	public vec4u64 xyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, y);
	}
	public vec4u64 xyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, z);
	}
	public vec4u64 xyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, x);
	}
	public vec4u64 xyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, y);
	}
	public vec4u64 xyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, z);
	}
	public vec4u64 xyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, x);
	}
	public vec4u64 xyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, y);
	}
	public vec4u64 xyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, z);
	}
	public vec4u64 xzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, x);
	}
	public vec4u64 xzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, y);
	}
	public vec4u64 xzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, z);
	}
	public vec4u64 xzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, x);
	}
	public vec4u64 xzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, y);
	}
	public vec4u64 xzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, z);
	}
	public vec4u64 xzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, x);
	}
	public vec4u64 xzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, y);
	}
	public vec4u64 xzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, z);
	}
	public vec4u64 yxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, x);
	}
	public vec4u64 yxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, y);
	}
	public vec4u64 yxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, z);
	}
	public vec4u64 yxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, x);
	}
	public vec4u64 yxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, y);
	}
	public vec4u64 yxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, z);
	}
	public vec4u64 yxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, x);
	}
	public vec4u64 yxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, y);
	}
	public vec4u64 yxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, z);
	}
	public vec4u64 yyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, x);
	}
	public vec4u64 yyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, y);
	}
	public vec4u64 yyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, z);
	}
	public vec4u64 yyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, x);
	}
	public vec4u64 yyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, y);
	}
	public vec4u64 yyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, z);
	}
	public vec4u64 yyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, x);
	}
	public vec4u64 yyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, y);
	}
	public vec4u64 yyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, z);
	}
	public vec4u64 yzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, x);
	}
	public vec4u64 yzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, y);
	}
	public vec4u64 yzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, z);
	}
	public vec4u64 yzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, x);
	}
	public vec4u64 yzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, y);
	}
	public vec4u64 yzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, z);
	}
	public vec4u64 yzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, x);
	}
	public vec4u64 yzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, y);
	}
	public vec4u64 yzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, z);
	}
	public vec4u64 zxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, x);
	}
	public vec4u64 zxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, y);
	}
	public vec4u64 zxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, z);
	}
	public vec4u64 zxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, x);
	}
	public vec4u64 zxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, y);
	}
	public vec4u64 zxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, z);
	}
	public vec4u64 zxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, x);
	}
	public vec4u64 zxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, y);
	}
	public vec4u64 zxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, z);
	}
	public vec4u64 zyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, x);
	}
	public vec4u64 zyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, y);
	}
	public vec4u64 zyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, z);
	}
	public vec4u64 zyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, x);
	}
	public vec4u64 zyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, y);
	}
	public vec4u64 zyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, z);
	}
	public vec4u64 zyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, x);
	}
	public vec4u64 zyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, y);
	}
	public vec4u64 zyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, z);
	}
	public vec4u64 zzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, x);
	}
	public vec4u64 zzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, y);
	}
	public vec4u64 zzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, z);
	}
	public vec4u64 zzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, x);
	}
	public vec4u64 zzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, y);
	}
	public vec4u64 zzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, z);
	}
	public vec4u64 zzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, x);
	}
	public vec4u64 zzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, y);
	}
	public vec4u64 zzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, z);
	}

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u64 operator -(vec3u64 v) => new() { Data = - v.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u64 operator + (vec3u64 l, vec3u64 r) => new() { Data = l.Data + r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u64 operator - (vec3u64 l, vec3u64 r) => new() { Data = l.Data - r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u64 operator * (vec3u64 l, vec3u64 r) => new() { Data = l.Data * r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u64 operator / (vec3u64 l, vec3u64 r) => new() { Data = l.Data / r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u64 operator & (vec3u64 l, vec3u64 r) => new() { Data = l.Data & r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u64 operator | (vec3u64 l, vec3u64 r) => new() { Data = l.Data | r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u64 operator ^ (vec3u64 l, vec3u64 r) => new() { Data = l.Data ^ r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u64 operator %(vec3u64 l, vec3u64 r) => new() { Data = Vector256.Create((ulong)(l.x % r.x), (ulong)(l.y % r.y), (ulong)(l.z % r.z), default(ulong)) };
} 

public partial class DMath {
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u64 vec3(ulong x, ulong y, ulong z) => new() { Data =  vec3u64.CreateData(x, y, z) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u64 vec3(ulong e) => vec3(e, e, e);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u64 vec3(ulong e, vec2u64 v) => vec3(e, v.x, v.y);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3u64 vec3(vec2u64 v, ulong e) => vec3(v.x, v.y, e);
}


public partial struct vec3f64 {
	internal Vector256<double> Data;

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	internal static Vector256<double> CreateData(double x, double y, double z) {
		return Vector256.Create(x, y, z, default(double));
	}

	public double x {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[0];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value, Data[1], Data[2]);
		}
	}
	public double y {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[1];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(Data[0], value, Data[2]);
		}
	}
	public double z {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => Data[2];

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(Data[0], Data[1], value);
		}
	}

	public vec2f64 xx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, x);


	}
	public vec2f64 xy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, y);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.x, value.y, z);
		}

	}
	public vec2f64 xz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(x, z);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.x, y, value.y);
		}

	}
	public vec2f64 yx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, x);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.y, value.x, z);
		}

	}
	public vec2f64 yy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, y);


	}
	public vec2f64 yz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(y, z);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(x, value.x, value.y);
		}

	}
	public vec2f64 zx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, x);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(value.y, y, value.x);
		}

	}
	public vec2f64 zy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, y);

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		set {
			Data = CreateData(x, value.y, value.x);
		}

	}
	public vec2f64 zz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec2(z, z);


	}

	public vec3f64 xxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, x);
	}
	public vec3f64 xxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, y);
	}
	public vec3f64 xxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, x, z);
	}
	public vec3f64 xyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, x);
	}
	public vec3f64 xyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, y);
	}
	public vec3f64 xyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, y, z);
	}
	public vec3f64 xzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, x);
	}
	public vec3f64 xzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, y);
	}
	public vec3f64 xzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(x, z, z);
	}
	public vec3f64 yxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, x);
	}
	public vec3f64 yxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, y);
	}
	public vec3f64 yxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, x, z);
	}
	public vec3f64 yyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, x);
	}
	public vec3f64 yyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, y);
	}
	public vec3f64 yyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, y, z);
	}
	public vec3f64 yzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, x);
	}
	public vec3f64 yzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, y);
	}
	public vec3f64 yzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(y, z, z);
	}
	public vec3f64 zxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, x);
	}
	public vec3f64 zxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, y);
	}
	public vec3f64 zxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, x, z);
	}
	public vec3f64 zyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, x);
	}
	public vec3f64 zyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, y);
	}
	public vec3f64 zyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, y, z);
	}
	public vec3f64 zzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, x);
	}
	public vec3f64 zzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, y);
	}
	public vec3f64 zzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec3(z, z, z);
	}

	public vec4f64 xxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, x);
	}
	public vec4f64 xxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, y);
	}
	public vec4f64 xxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, x, z);
	}
	public vec4f64 xxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, x);
	}
	public vec4f64 xxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, y);
	}
	public vec4f64 xxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, y, z);
	}
	public vec4f64 xxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, x);
	}
	public vec4f64 xxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, y);
	}
	public vec4f64 xxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, x, z, z);
	}
	public vec4f64 xyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, x);
	}
	public vec4f64 xyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, y);
	}
	public vec4f64 xyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, x, z);
	}
	public vec4f64 xyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, x);
	}
	public vec4f64 xyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, y);
	}
	public vec4f64 xyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, y, z);
	}
	public vec4f64 xyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, x);
	}
	public vec4f64 xyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, y);
	}
	public vec4f64 xyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, y, z, z);
	}
	public vec4f64 xzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, x);
	}
	public vec4f64 xzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, y);
	}
	public vec4f64 xzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, x, z);
	}
	public vec4f64 xzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, x);
	}
	public vec4f64 xzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, y);
	}
	public vec4f64 xzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, y, z);
	}
	public vec4f64 xzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, x);
	}
	public vec4f64 xzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, y);
	}
	public vec4f64 xzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(x, z, z, z);
	}
	public vec4f64 yxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, x);
	}
	public vec4f64 yxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, y);
	}
	public vec4f64 yxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, x, z);
	}
	public vec4f64 yxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, x);
	}
	public vec4f64 yxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, y);
	}
	public vec4f64 yxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, y, z);
	}
	public vec4f64 yxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, x);
	}
	public vec4f64 yxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, y);
	}
	public vec4f64 yxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, x, z, z);
	}
	public vec4f64 yyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, x);
	}
	public vec4f64 yyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, y);
	}
	public vec4f64 yyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, x, z);
	}
	public vec4f64 yyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, x);
	}
	public vec4f64 yyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, y);
	}
	public vec4f64 yyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, y, z);
	}
	public vec4f64 yyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, x);
	}
	public vec4f64 yyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, y);
	}
	public vec4f64 yyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, y, z, z);
	}
	public vec4f64 yzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, x);
	}
	public vec4f64 yzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, y);
	}
	public vec4f64 yzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, x, z);
	}
	public vec4f64 yzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, x);
	}
	public vec4f64 yzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, y);
	}
	public vec4f64 yzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, y, z);
	}
	public vec4f64 yzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, x);
	}
	public vec4f64 yzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, y);
	}
	public vec4f64 yzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(y, z, z, z);
	}
	public vec4f64 zxxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, x);
	}
	public vec4f64 zxxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, y);
	}
	public vec4f64 zxxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, x, z);
	}
	public vec4f64 zxyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, x);
	}
	public vec4f64 zxyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, y);
	}
	public vec4f64 zxyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, y, z);
	}
	public vec4f64 zxzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, x);
	}
	public vec4f64 zxzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, y);
	}
	public vec4f64 zxzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, x, z, z);
	}
	public vec4f64 zyxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, x);
	}
	public vec4f64 zyxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, y);
	}
	public vec4f64 zyxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, x, z);
	}
	public vec4f64 zyyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, x);
	}
	public vec4f64 zyyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, y);
	}
	public vec4f64 zyyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, y, z);
	}
	public vec4f64 zyzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, x);
	}
	public vec4f64 zyzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, y);
	}
	public vec4f64 zyzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, y, z, z);
	}
	public vec4f64 zzxx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, x);
	}
	public vec4f64 zzxy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, y);
	}
	public vec4f64 zzxz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, x, z);
	}
	public vec4f64 zzyx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, x);
	}
	public vec4f64 zzyy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, y);
	}
	public vec4f64 zzyz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, y, z);
	}
	public vec4f64 zzzx {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, x);
	}
	public vec4f64 zzzy {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, y);
	}
	public vec4f64 zzzz {
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get => vec4(z, z, z, z);
	}

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f64 operator -(vec3f64 v) => new() { Data = - v.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f64 operator + (vec3f64 l, vec3f64 r) => new() { Data = l.Data + r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f64 operator - (vec3f64 l, vec3f64 r) => new() { Data = l.Data - r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f64 operator * (vec3f64 l, vec3f64 r) => new() { Data = l.Data * r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f64 operator / (vec3f64 l, vec3f64 r) => new() { Data = l.Data / r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f64 operator & (vec3f64 l, vec3f64 r) => new() { Data = l.Data & r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f64 operator | (vec3f64 l, vec3f64 r) => new() { Data = l.Data | r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f64 operator ^ (vec3f64 l, vec3f64 r) => new() { Data = l.Data ^ r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f64 operator %(vec3f64 l, vec3f64 r) => new() { Data = Vector256.Create((double)(l.x % r.x), (double)(l.y % r.y), (double)(l.z % r.z), default(double)) };
} 

public partial class DMath {
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f64 vec3(double x, double y, double z) => new() { Data =  vec3f64.CreateData(x, y, z) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f64 vec3(double e) => vec3(e, e, e);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f64 vec3(double e, vec2f64 v) => vec3(e, v.x, v.y);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static vec3f64 vec3(vec2f64 v, double e) => vec3(v.x, v.y, e);
}


