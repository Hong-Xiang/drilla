//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Runtime.CompilerServices;
using System.Runtime.Intrinsics;
using System.Runtime.InteropServices;
namespace DualDrill.Mathematics;
using static DMath;

[StructLayout(LayoutKind.Sequential)]
public partial struct vec3f16{
    public System.Half x { get; set; }
    public System.Half y { get; set; }
    public System.Half z { get; set; }
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3f16 operator -(vec3f16 v)
    {
        return vec3((System.Half)(-v.x), (System.Half)(-v.y), (System.Half)(-v.z));
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3f16 operator +(vec3f16 left, vec3f16 right)
    {
        return vec3((System.Half)(left.x + right.x), (System.Half)(left.y + right.y), (System.Half)(left.z + right.z));
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3f16 operator -(vec3f16 left, vec3f16 right)
    {
        return vec3((System.Half)(left.x - right.x), (System.Half)(left.y - right.y), (System.Half)(left.z - right.z));
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3f16 operator *(vec3f16 left, vec3f16 right)
    {
        return vec3((System.Half)(left.x * right.x), (System.Half)(left.y * right.y), (System.Half)(left.z * right.z));
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3f16 operator /(vec3f16 left, vec3f16 right)
    {
        return vec3((System.Half)(left.x / right.x), (System.Half)(left.y / right.y), (System.Half)(left.z / right.z));
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3f16 operator %(vec3f16 left, vec3f16 right)
    {
        return vec3((System.Half)(left.x % right.x), (System.Half)(left.y % right.y), (System.Half)(left.z % right.z));
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3f16 operator +(System.Half left, vec3f16 right)
    {
        return vec3((System.Half)(left + right.x), (System.Half)(left + right.y), (System.Half)(left + right.z));
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3f16 operator +(vec3f16 left, System.Half right)
    {
        return vec3((System.Half)(left.x + right), (System.Half)(left.y + right), (System.Half)(left.z + right));
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3f16 operator -(System.Half left, vec3f16 right)
    {
        return vec3((System.Half)(left - right.x), (System.Half)(left - right.y), (System.Half)(left - right.z));
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3f16 operator -(vec3f16 left, System.Half right)
    {
        return vec3((System.Half)(left.x - right), (System.Half)(left.y - right), (System.Half)(left.z - right));
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3f16 operator *(System.Half left, vec3f16 right)
    {
        return vec3((System.Half)(left * right.x), (System.Half)(left * right.y), (System.Half)(left * right.z));
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3f16 operator *(vec3f16 left, System.Half right)
    {
        return vec3((System.Half)(left.x * right), (System.Half)(left.y * right), (System.Half)(left.z * right));
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3f16 operator /(System.Half left, vec3f16 right)
    {
        return vec3((System.Half)(left / right.x), (System.Half)(left / right.y), (System.Half)(left / right.z));
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3f16 operator /(vec3f16 left, System.Half right)
    {
        return vec3((System.Half)(left.x / right), (System.Half)(left.y / right), (System.Half)(left.z / right));
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3f16 operator %(System.Half left, vec3f16 right)
    {
        return vec3((System.Half)(left % right.x), (System.Half)(left % right.y), (System.Half)(left % right.z));
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3f16 operator %(vec3f16 left, System.Half right)
    {
        return vec3((System.Half)(left.x % right), (System.Half)(left.y % right), (System.Half)(left.z % right));
    }
    
    public vec2f16 xx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, x);
    }
    
    public vec2f16 yx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, x);
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set 
        {
            y = value.x;
            x = value.y;
        }
        
    }
    
    public vec2f16 zx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, x);
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set 
        {
            z = value.x;
            x = value.y;
        }
        
    }
    
    public vec2f16 xy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, y);
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set 
        {
            x = value.x;
            y = value.y;
        }
        
    }
    
    public vec2f16 yy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, y);
    }
    
    public vec2f16 zy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, y);
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set 
        {
            z = value.x;
            y = value.y;
        }
        
    }
    
    public vec2f16 xz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, z);
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set 
        {
            x = value.x;
            z = value.y;
        }
        
    }
    
    public vec2f16 yz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, z);
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set 
        {
            y = value.x;
            z = value.y;
        }
        
    }
    
    public vec2f16 zz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, z);
    }
    
    public vec3f16 xxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, x);
    }
    
    public vec3f16 yxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, x);
    }
    
    public vec3f16 zxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, x);
    }
    
    public vec3f16 xyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, x);
    }
    
    public vec3f16 yyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, x);
    }
    
    public vec3f16 zyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, x);
    }
    
    public vec3f16 xzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, x);
    }
    
    public vec3f16 yzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, x);
    }
    
    public vec3f16 zzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, x);
    }
    
    public vec3f16 xxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, y);
    }
    
    public vec3f16 yxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, y);
    }
    
    public vec3f16 zxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, y);
    }
    
    public vec3f16 xyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, y);
    }
    
    public vec3f16 yyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, y);
    }
    
    public vec3f16 zyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, y);
    }
    
    public vec3f16 xzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, y);
    }
    
    public vec3f16 yzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, y);
    }
    
    public vec3f16 zzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, y);
    }
    
    public vec3f16 xxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, z);
    }
    
    public vec3f16 yxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, z);
    }
    
    public vec3f16 zxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, z);
    }
    
    public vec3f16 xyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, z);
    }
    
    public vec3f16 yyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, z);
    }
    
    public vec3f16 zyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, z);
    }
    
    public vec3f16 xzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, z);
    }
    
    public vec3f16 yzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, z);
    }
    
    public vec3f16 zzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, z);
    }
    
    public vec4f16 xxxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, x);
    }
    
    public vec4f16 yxxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, x);
    }
    
    public vec4f16 zxxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, x);
    }
    
    public vec4f16 xyxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, x);
    }
    
    public vec4f16 yyxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, x);
    }
    
    public vec4f16 zyxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, x);
    }
    
    public vec4f16 xzxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, x);
    }
    
    public vec4f16 yzxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, x);
    }
    
    public vec4f16 zzxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, x);
    }
    
    public vec4f16 xxyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, x);
    }
    
    public vec4f16 yxyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, x);
    }
    
    public vec4f16 zxyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, x);
    }
    
    public vec4f16 xyyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, x);
    }
    
    public vec4f16 yyyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, x);
    }
    
    public vec4f16 zyyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, x);
    }
    
    public vec4f16 xzyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, x);
    }
    
    public vec4f16 yzyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, x);
    }
    
    public vec4f16 zzyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, x);
    }
    
    public vec4f16 xxzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, x);
    }
    
    public vec4f16 yxzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, x);
    }
    
    public vec4f16 zxzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, x);
    }
    
    public vec4f16 xyzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, x);
    }
    
    public vec4f16 yyzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, x);
    }
    
    public vec4f16 zyzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, x);
    }
    
    public vec4f16 xzzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, x);
    }
    
    public vec4f16 yzzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, x);
    }
    
    public vec4f16 zzzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, x);
    }
    
    public vec4f16 xxxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, y);
    }
    
    public vec4f16 yxxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, y);
    }
    
    public vec4f16 zxxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, y);
    }
    
    public vec4f16 xyxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, y);
    }
    
    public vec4f16 yyxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, y);
    }
    
    public vec4f16 zyxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, y);
    }
    
    public vec4f16 xzxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, y);
    }
    
    public vec4f16 yzxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, y);
    }
    
    public vec4f16 zzxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, y);
    }
    
    public vec4f16 xxyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, y);
    }
    
    public vec4f16 yxyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, y);
    }
    
    public vec4f16 zxyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, y);
    }
    
    public vec4f16 xyyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, y);
    }
    
    public vec4f16 yyyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, y);
    }
    
    public vec4f16 zyyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, y);
    }
    
    public vec4f16 xzyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, y);
    }
    
    public vec4f16 yzyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, y);
    }
    
    public vec4f16 zzyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, y);
    }
    
    public vec4f16 xxzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, y);
    }
    
    public vec4f16 yxzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, y);
    }
    
    public vec4f16 zxzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, y);
    }
    
    public vec4f16 xyzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, y);
    }
    
    public vec4f16 yyzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, y);
    }
    
    public vec4f16 zyzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, y);
    }
    
    public vec4f16 xzzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, y);
    }
    
    public vec4f16 yzzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, y);
    }
    
    public vec4f16 zzzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, y);
    }
    
    public vec4f16 xxxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, z);
    }
    
    public vec4f16 yxxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, z);
    }
    
    public vec4f16 zxxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, z);
    }
    
    public vec4f16 xyxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, z);
    }
    
    public vec4f16 yyxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, z);
    }
    
    public vec4f16 zyxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, z);
    }
    
    public vec4f16 xzxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, z);
    }
    
    public vec4f16 yzxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, z);
    }
    
    public vec4f16 zzxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, z);
    }
    
    public vec4f16 xxyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, z);
    }
    
    public vec4f16 yxyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, z);
    }
    
    public vec4f16 zxyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, z);
    }
    
    public vec4f16 xyyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, z);
    }
    
    public vec4f16 yyyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, z);
    }
    
    public vec4f16 zyyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, z);
    }
    
    public vec4f16 xzyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, z);
    }
    
    public vec4f16 yzyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, z);
    }
    
    public vec4f16 zzyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, z);
    }
    
    public vec4f16 xxzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, z);
    }
    
    public vec4f16 yxzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, z);
    }
    
    public vec4f16 zxzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, z);
    }
    
    public vec4f16 xyzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, z);
    }
    
    public vec4f16 yyzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, z);
    }
    
    public vec4f16 zyzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, z);
    }
    
    public vec4f16 xzzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, z);
    }
    
    public vec4f16 yzzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, z);
    }
    
    public vec4f16 zzzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, z);
    }
    
}

public static partial class DMath{
    public static vec3f16 vec3(System.Half x, System.Half y, System.Half z){
        return new vec3f16 () {
            x = x,
            y = y,
            z = z
        };
    }
    
    public static vec3f16 vec3(System.Half e) => vec3(e, e, e);
    public static vec3f16 vec3(System.Half e0, vec2f16 e1) => vec3(e0, e1.x, e1.y);
    public static vec3f16 vec3(vec2f16 e0, System.Half e1) => vec3(e0.x, e0.y, e1);
}

