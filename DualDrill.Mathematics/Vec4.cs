//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Runtime.CompilerServices;
using System.Runtime.Intrinsics;
using static DualDrill.Mathematics.DMath;

namespace DualDrill.Mathematics;

// 16-bit scalar vec types

public partial struct vec4i16
{
    internal Vector64<short> Data;

    public short x
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[0];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value, Data[1], Data[2], Data[3]);
        }
    }
    public short y
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[1];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(Data[0], value, Data[2], Data[3]);
        }
    }
    public short z
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[2];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(Data[0], Data[1], value, Data[3]);
        }
    }
    public short w
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[3];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(Data[0], Data[1], Data[2], value);
        }
    }

    public vec2i16 xx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, x);


    }
    public vec2i16 xy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.x, value.y, z, w);
        }

    }
    public vec2i16 xz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.x, y, value.y, w);
        }

    }
    public vec2i16 xw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.x, y, z, value.y);
        }

    }
    public vec2i16 yx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.y, value.x, z, w);
        }

    }
    public vec2i16 yy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, y);


    }
    public vec2i16 yz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.x, value.y, w);
        }

    }
    public vec2i16 yw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.x, z, value.y);
        }

    }
    public vec2i16 zx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.y, y, value.x, w);
        }

    }
    public vec2i16 zy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.y, value.x, w);
        }

    }
    public vec2i16 zz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, z);


    }
    public vec2i16 zw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, y, value.x, value.y);
        }

    }
    public vec2i16 wx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.y, y, z, value.x);
        }

    }
    public vec2i16 wy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.y, z, value.x);
        }

    }
    public vec2i16 wz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, y, value.y, value.x);
        }

    }
    public vec2i16 ww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, w);


    }

    public vec3i16 xxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, x);

    }

    public vec3i16 xxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, y);

    }

    public vec3i16 xxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, z);

    }

    public vec3i16 xxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, w);

    }

    public vec3i16 xyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, x);

    }

    public vec3i16 xyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, y);

    }

    public vec3i16 xyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.x, value.y, value.z, w);
        }
    }

    public vec3i16 xyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.x, value.y, z, value.z);
        }
    }

    public vec3i16 xzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, x);

    }

    public vec3i16 xzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.x, value.z, value.y, w);
        }
    }

    public vec3i16 xzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, z);

    }

    public vec3i16 xzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.x, y, value.y, value.z);
        }
    }

    public vec3i16 xwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, x);

    }

    public vec3i16 xwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.x, value.z, z, value.y);
        }
    }

    public vec3i16 xwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.x, y, value.z, value.y);
        }
    }

    public vec3i16 xww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, w);

    }

    public vec3i16 yxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, x);

    }

    public vec3i16 yxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, y);

    }

    public vec3i16 yxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.y, value.x, value.z, w);
        }
    }

    public vec3i16 yxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.y, value.x, z, value.z);
        }
    }

    public vec3i16 yyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, x);

    }

    public vec3i16 yyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, y);

    }

    public vec3i16 yyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, z);

    }

    public vec3i16 yyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, w);

    }

    public vec3i16 yzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.z, value.x, value.y, w);
        }
    }

    public vec3i16 yzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, y);

    }

    public vec3i16 yzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, z);

    }

    public vec3i16 yzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.x, value.y, value.z);
        }
    }

    public vec3i16 ywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.z, value.x, z, value.y);
        }
    }

    public vec3i16 ywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, y);

    }

    public vec3i16 ywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.x, value.z, value.y);
        }
    }

    public vec3i16 yww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, w);

    }

    public vec3i16 zxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, x);

    }

    public vec3i16 zxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.y, value.z, value.x, w);
        }
    }

    public vec3i16 zxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, z);

    }

    public vec3i16 zxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.y, y, value.x, value.z);
        }
    }

    public vec3i16 zyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.z, value.y, value.x, w);
        }
    }

    public vec3i16 zyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, y);

    }

    public vec3i16 zyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, z);

    }

    public vec3i16 zyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.y, value.x, value.z);
        }
    }

    public vec3i16 zzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, x);

    }

    public vec3i16 zzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, y);

    }

    public vec3i16 zzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, z);

    }

    public vec3i16 zzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, w);

    }

    public vec3i16 zwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.z, y, value.x, value.y);
        }
    }

    public vec3i16 zwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.z, value.x, value.y);
        }
    }

    public vec3i16 zwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, z);

    }

    public vec3i16 zww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, w);

    }

    public vec3i16 wxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, x);

    }

    public vec3i16 wxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.y, value.z, z, value.x);
        }
    }

    public vec3i16 wxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.y, y, value.z, value.x);
        }
    }

    public vec3i16 wxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, w);

    }

    public vec3i16 wyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.z, value.y, z, value.x);
        }
    }

    public vec3i16 wyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, y);

    }

    public vec3i16 wyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.y, value.z, value.x);
        }
    }

    public vec3i16 wyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, w);

    }

    public vec3i16 wzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.z, y, value.y, value.x);
        }
    }

    public vec3i16 wzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.z, value.y, value.x);
        }
    }

    public vec3i16 wzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, z);

    }

    public vec3i16 wzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, w);

    }

    public vec3i16 wwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, x);

    }

    public vec3i16 wwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, y);

    }

    public vec3i16 wwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, z);

    }

    public vec3i16 www
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, w);

    }


    public vec4i16 xxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, x);
    }
    public vec4i16 xxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, y);
    }
    public vec4i16 xxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, z);
    }
    public vec4i16 xxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, w);
    }
    public vec4i16 xxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, x);
    }
    public vec4i16 xxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, y);
    }
    public vec4i16 xxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, z);
    }
    public vec4i16 xxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, w);
    }
    public vec4i16 xxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, x);
    }
    public vec4i16 xxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, y);
    }
    public vec4i16 xxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, z);
    }
    public vec4i16 xxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, w);
    }
    public vec4i16 xxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, x);
    }
    public vec4i16 xxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, y);
    }
    public vec4i16 xxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, z);
    }
    public vec4i16 xxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, w);
    }
    public vec4i16 xyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, x);
    }
    public vec4i16 xyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, y);
    }
    public vec4i16 xyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, z);
    }
    public vec4i16 xyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, w);
    }
    public vec4i16 xyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, x);
    }
    public vec4i16 xyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, y);
    }
    public vec4i16 xyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, z);
    }
    public vec4i16 xyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, w);
    }
    public vec4i16 xyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, x);
    }
    public vec4i16 xyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, y);
    }
    public vec4i16 xyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, z);
    }
    public vec4i16 xyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, w);
    }
    public vec4i16 xywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, x);
    }
    public vec4i16 xywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, y);
    }
    public vec4i16 xywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, z);
    }
    public vec4i16 xyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, w);
    }
    public vec4i16 xzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, x);
    }
    public vec4i16 xzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, y);
    }
    public vec4i16 xzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, z);
    }
    public vec4i16 xzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, w);
    }
    public vec4i16 xzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, x);
    }
    public vec4i16 xzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, y);
    }
    public vec4i16 xzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, z);
    }
    public vec4i16 xzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, w);
    }
    public vec4i16 xzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, x);
    }
    public vec4i16 xzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, y);
    }
    public vec4i16 xzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, z);
    }
    public vec4i16 xzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, w);
    }
    public vec4i16 xzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, x);
    }
    public vec4i16 xzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, y);
    }
    public vec4i16 xzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, z);
    }
    public vec4i16 xzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, w);
    }
    public vec4i16 xwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, x);
    }
    public vec4i16 xwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, y);
    }
    public vec4i16 xwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, z);
    }
    public vec4i16 xwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, w);
    }
    public vec4i16 xwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, x);
    }
    public vec4i16 xwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, y);
    }
    public vec4i16 xwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, z);
    }
    public vec4i16 xwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, w);
    }
    public vec4i16 xwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, x);
    }
    public vec4i16 xwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, y);
    }
    public vec4i16 xwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, z);
    }
    public vec4i16 xwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, w);
    }
    public vec4i16 xwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, x);
    }
    public vec4i16 xwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, y);
    }
    public vec4i16 xwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, z);
    }
    public vec4i16 xwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, w);
    }
    public vec4i16 yxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, x);
    }
    public vec4i16 yxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, y);
    }
    public vec4i16 yxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, z);
    }
    public vec4i16 yxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, w);
    }
    public vec4i16 yxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, x);
    }
    public vec4i16 yxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, y);
    }
    public vec4i16 yxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, z);
    }
    public vec4i16 yxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, w);
    }
    public vec4i16 yxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, x);
    }
    public vec4i16 yxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, y);
    }
    public vec4i16 yxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, z);
    }
    public vec4i16 yxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, w);
    }
    public vec4i16 yxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, x);
    }
    public vec4i16 yxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, y);
    }
    public vec4i16 yxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, z);
    }
    public vec4i16 yxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, w);
    }
    public vec4i16 yyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, x);
    }
    public vec4i16 yyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, y);
    }
    public vec4i16 yyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, z);
    }
    public vec4i16 yyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, w);
    }
    public vec4i16 yyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, x);
    }
    public vec4i16 yyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, y);
    }
    public vec4i16 yyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, z);
    }
    public vec4i16 yyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, w);
    }
    public vec4i16 yyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, x);
    }
    public vec4i16 yyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, y);
    }
    public vec4i16 yyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, z);
    }
    public vec4i16 yyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, w);
    }
    public vec4i16 yywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, x);
    }
    public vec4i16 yywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, y);
    }
    public vec4i16 yywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, z);
    }
    public vec4i16 yyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, w);
    }
    public vec4i16 yzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, x);
    }
    public vec4i16 yzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, y);
    }
    public vec4i16 yzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, z);
    }
    public vec4i16 yzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, w);
    }
    public vec4i16 yzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, x);
    }
    public vec4i16 yzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, y);
    }
    public vec4i16 yzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, z);
    }
    public vec4i16 yzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, w);
    }
    public vec4i16 yzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, x);
    }
    public vec4i16 yzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, y);
    }
    public vec4i16 yzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, z);
    }
    public vec4i16 yzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, w);
    }
    public vec4i16 yzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, x);
    }
    public vec4i16 yzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, y);
    }
    public vec4i16 yzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, z);
    }
    public vec4i16 yzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, w);
    }
    public vec4i16 ywxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, x);
    }
    public vec4i16 ywxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, y);
    }
    public vec4i16 ywxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, z);
    }
    public vec4i16 ywxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, w);
    }
    public vec4i16 ywyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, x);
    }
    public vec4i16 ywyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, y);
    }
    public vec4i16 ywyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, z);
    }
    public vec4i16 ywyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, w);
    }
    public vec4i16 ywzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, x);
    }
    public vec4i16 ywzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, y);
    }
    public vec4i16 ywzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, z);
    }
    public vec4i16 ywzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, w);
    }
    public vec4i16 ywwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, x);
    }
    public vec4i16 ywwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, y);
    }
    public vec4i16 ywwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, z);
    }
    public vec4i16 ywww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, w);
    }
    public vec4i16 zxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, x);
    }
    public vec4i16 zxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, y);
    }
    public vec4i16 zxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, z);
    }
    public vec4i16 zxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, w);
    }
    public vec4i16 zxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, x);
    }
    public vec4i16 zxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, y);
    }
    public vec4i16 zxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, z);
    }
    public vec4i16 zxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, w);
    }
    public vec4i16 zxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, x);
    }
    public vec4i16 zxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, y);
    }
    public vec4i16 zxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, z);
    }
    public vec4i16 zxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, w);
    }
    public vec4i16 zxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, x);
    }
    public vec4i16 zxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, y);
    }
    public vec4i16 zxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, z);
    }
    public vec4i16 zxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, w);
    }
    public vec4i16 zyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, x);
    }
    public vec4i16 zyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, y);
    }
    public vec4i16 zyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, z);
    }
    public vec4i16 zyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, w);
    }
    public vec4i16 zyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, x);
    }
    public vec4i16 zyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, y);
    }
    public vec4i16 zyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, z);
    }
    public vec4i16 zyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, w);
    }
    public vec4i16 zyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, x);
    }
    public vec4i16 zyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, y);
    }
    public vec4i16 zyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, z);
    }
    public vec4i16 zyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, w);
    }
    public vec4i16 zywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, x);
    }
    public vec4i16 zywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, y);
    }
    public vec4i16 zywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, z);
    }
    public vec4i16 zyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, w);
    }
    public vec4i16 zzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, x);
    }
    public vec4i16 zzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, y);
    }
    public vec4i16 zzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, z);
    }
    public vec4i16 zzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, w);
    }
    public vec4i16 zzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, x);
    }
    public vec4i16 zzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, y);
    }
    public vec4i16 zzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, z);
    }
    public vec4i16 zzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, w);
    }
    public vec4i16 zzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, x);
    }
    public vec4i16 zzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, y);
    }
    public vec4i16 zzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, z);
    }
    public vec4i16 zzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, w);
    }
    public vec4i16 zzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, x);
    }
    public vec4i16 zzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, y);
    }
    public vec4i16 zzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, z);
    }
    public vec4i16 zzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, w);
    }
    public vec4i16 zwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, x);
    }
    public vec4i16 zwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, y);
    }
    public vec4i16 zwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, z);
    }
    public vec4i16 zwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, w);
    }
    public vec4i16 zwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, x);
    }
    public vec4i16 zwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, y);
    }
    public vec4i16 zwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, z);
    }
    public vec4i16 zwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, w);
    }
    public vec4i16 zwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, x);
    }
    public vec4i16 zwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, y);
    }
    public vec4i16 zwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, z);
    }
    public vec4i16 zwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, w);
    }
    public vec4i16 zwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, x);
    }
    public vec4i16 zwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, y);
    }
    public vec4i16 zwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, z);
    }
    public vec4i16 zwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, w);
    }
    public vec4i16 wxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, x);
    }
    public vec4i16 wxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, y);
    }
    public vec4i16 wxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, z);
    }
    public vec4i16 wxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, w);
    }
    public vec4i16 wxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, x);
    }
    public vec4i16 wxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, y);
    }
    public vec4i16 wxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, z);
    }
    public vec4i16 wxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, w);
    }
    public vec4i16 wxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, x);
    }
    public vec4i16 wxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, y);
    }
    public vec4i16 wxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, z);
    }
    public vec4i16 wxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, w);
    }
    public vec4i16 wxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, x);
    }
    public vec4i16 wxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, y);
    }
    public vec4i16 wxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, z);
    }
    public vec4i16 wxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, w);
    }
    public vec4i16 wyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, x);
    }
    public vec4i16 wyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, y);
    }
    public vec4i16 wyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, z);
    }
    public vec4i16 wyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, w);
    }
    public vec4i16 wyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, x);
    }
    public vec4i16 wyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, y);
    }
    public vec4i16 wyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, z);
    }
    public vec4i16 wyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, w);
    }
    public vec4i16 wyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, x);
    }
    public vec4i16 wyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, y);
    }
    public vec4i16 wyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, z);
    }
    public vec4i16 wyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, w);
    }
    public vec4i16 wywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, x);
    }
    public vec4i16 wywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, y);
    }
    public vec4i16 wywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, z);
    }
    public vec4i16 wyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, w);
    }
    public vec4i16 wzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, x);
    }
    public vec4i16 wzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, y);
    }
    public vec4i16 wzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, z);
    }
    public vec4i16 wzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, w);
    }
    public vec4i16 wzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, x);
    }
    public vec4i16 wzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, y);
    }
    public vec4i16 wzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, z);
    }
    public vec4i16 wzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, w);
    }
    public vec4i16 wzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, x);
    }
    public vec4i16 wzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, y);
    }
    public vec4i16 wzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, z);
    }
    public vec4i16 wzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, w);
    }
    public vec4i16 wzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, x);
    }
    public vec4i16 wzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, y);
    }
    public vec4i16 wzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, z);
    }
    public vec4i16 wzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, w);
    }
    public vec4i16 wwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, x);
    }
    public vec4i16 wwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, y);
    }
    public vec4i16 wwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, z);
    }
    public vec4i16 wwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, w);
    }
    public vec4i16 wwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, x);
    }
    public vec4i16 wwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, y);
    }
    public vec4i16 wwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, z);
    }
    public vec4i16 wwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, w);
    }
    public vec4i16 wwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, x);
    }
    public vec4i16 wwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, y);
    }
    public vec4i16 wwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, z);
    }
    public vec4i16 wwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, w);
    }
    public vec4i16 wwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, x);
    }
    public vec4i16 wwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, y);
    }
    public vec4i16 wwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, z);
    }
    public vec4i16 wwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, w);
    }


    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i16 operator -(vec4i16 v) => new() { Data = -v.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i16 operator +(vec4i16 l, vec4i16 r) => new() { Data = l.Data + r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i16 operator -(vec4i16 l, vec4i16 r) => new() { Data = l.Data - r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i16 operator *(vec4i16 l, vec4i16 r) => new() { Data = l.Data * r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i16 operator /(vec4i16 l, vec4i16 r) => new() { Data = l.Data / r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i16 operator &(vec4i16 l, vec4i16 r) => new() { Data = l.Data & r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i16 operator |(vec4i16 l, vec4i16 r) => new() { Data = l.Data | r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i16 operator ^(vec4i16 l, vec4i16 r) => new() { Data = l.Data ^ r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i16 operator %(vec4i16 l, vec4i16 r) => new() { Data = Vector64.Create((short)(l.x % r.x), (short)(l.y % r.y), (short)(l.z % r.z), default(short)) };
}

public partial class DMath
{
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i16 vec4(short x, short y, short z, short w) => new() { Data = Vector64.Create(x, y, z, w) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i16 vec4(short e) => new() { Data = Vector64.Create(e) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i16 vec4(short x, short y, vec2i16 v) => vec4(x, y, v.x, v.y);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i16 vec4(short x, vec2i16 v, short w) => vec4(x, v.x, v.y, w);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i16 vec4(vec2i16 v, short z, short w) => vec4(v.x, v.y, z, w);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i16 vec4(short e, vec3i16 v) => vec4(e, v.x, v.y, v.z);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i16 vec4(vec3i16 v, short e) => vec4(v.x, v.y, v.z, e);
}


public partial struct vec4u16
{
    internal Vector64<ushort> Data;

    public ushort x
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[0];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value, Data[1], Data[2], Data[3]);
        }
    }
    public ushort y
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[1];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(Data[0], value, Data[2], Data[3]);
        }
    }
    public ushort z
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[2];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(Data[0], Data[1], value, Data[3]);
        }
    }
    public ushort w
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[3];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(Data[0], Data[1], Data[2], value);
        }
    }

    public vec2u16 xx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, x);


    }
    public vec2u16 xy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.x, value.y, z, w);
        }

    }
    public vec2u16 xz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.x, y, value.y, w);
        }

    }
    public vec2u16 xw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.x, y, z, value.y);
        }

    }
    public vec2u16 yx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.y, value.x, z, w);
        }

    }
    public vec2u16 yy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, y);


    }
    public vec2u16 yz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.x, value.y, w);
        }

    }
    public vec2u16 yw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.x, z, value.y);
        }

    }
    public vec2u16 zx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.y, y, value.x, w);
        }

    }
    public vec2u16 zy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.y, value.x, w);
        }

    }
    public vec2u16 zz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, z);


    }
    public vec2u16 zw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, y, value.x, value.y);
        }

    }
    public vec2u16 wx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.y, y, z, value.x);
        }

    }
    public vec2u16 wy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.y, z, value.x);
        }

    }
    public vec2u16 wz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, y, value.y, value.x);
        }

    }
    public vec2u16 ww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, w);


    }

    public vec3u16 xxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, x);

    }

    public vec3u16 xxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, y);

    }

    public vec3u16 xxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, z);

    }

    public vec3u16 xxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, w);

    }

    public vec3u16 xyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, x);

    }

    public vec3u16 xyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, y);

    }

    public vec3u16 xyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.x, value.y, value.z, w);
        }
    }

    public vec3u16 xyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.x, value.y, z, value.z);
        }
    }

    public vec3u16 xzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, x);

    }

    public vec3u16 xzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.x, value.z, value.y, w);
        }
    }

    public vec3u16 xzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, z);

    }

    public vec3u16 xzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.x, y, value.y, value.z);
        }
    }

    public vec3u16 xwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, x);

    }

    public vec3u16 xwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.x, value.z, z, value.y);
        }
    }

    public vec3u16 xwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.x, y, value.z, value.y);
        }
    }

    public vec3u16 xww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, w);

    }

    public vec3u16 yxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, x);

    }

    public vec3u16 yxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, y);

    }

    public vec3u16 yxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.y, value.x, value.z, w);
        }
    }

    public vec3u16 yxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.y, value.x, z, value.z);
        }
    }

    public vec3u16 yyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, x);

    }

    public vec3u16 yyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, y);

    }

    public vec3u16 yyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, z);

    }

    public vec3u16 yyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, w);

    }

    public vec3u16 yzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.z, value.x, value.y, w);
        }
    }

    public vec3u16 yzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, y);

    }

    public vec3u16 yzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, z);

    }

    public vec3u16 yzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.x, value.y, value.z);
        }
    }

    public vec3u16 ywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.z, value.x, z, value.y);
        }
    }

    public vec3u16 ywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, y);

    }

    public vec3u16 ywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.x, value.z, value.y);
        }
    }

    public vec3u16 yww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, w);

    }

    public vec3u16 zxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, x);

    }

    public vec3u16 zxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.y, value.z, value.x, w);
        }
    }

    public vec3u16 zxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, z);

    }

    public vec3u16 zxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.y, y, value.x, value.z);
        }
    }

    public vec3u16 zyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.z, value.y, value.x, w);
        }
    }

    public vec3u16 zyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, y);

    }

    public vec3u16 zyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, z);

    }

    public vec3u16 zyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.y, value.x, value.z);
        }
    }

    public vec3u16 zzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, x);

    }

    public vec3u16 zzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, y);

    }

    public vec3u16 zzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, z);

    }

    public vec3u16 zzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, w);

    }

    public vec3u16 zwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.z, y, value.x, value.y);
        }
    }

    public vec3u16 zwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.z, value.x, value.y);
        }
    }

    public vec3u16 zwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, z);

    }

    public vec3u16 zww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, w);

    }

    public vec3u16 wxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, x);

    }

    public vec3u16 wxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.y, value.z, z, value.x);
        }
    }

    public vec3u16 wxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.y, y, value.z, value.x);
        }
    }

    public vec3u16 wxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, w);

    }

    public vec3u16 wyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.z, value.y, z, value.x);
        }
    }

    public vec3u16 wyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, y);

    }

    public vec3u16 wyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.y, value.z, value.x);
        }
    }

    public vec3u16 wyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, w);

    }

    public vec3u16 wzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(value.z, y, value.y, value.x);
        }
    }

    public vec3u16 wzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector64.Create(x, value.z, value.y, value.x);
        }
    }

    public vec3u16 wzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, z);

    }

    public vec3u16 wzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, w);

    }

    public vec3u16 wwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, x);

    }

    public vec3u16 wwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, y);

    }

    public vec3u16 wwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, z);

    }

    public vec3u16 www
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, w);

    }


    public vec4u16 xxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, x);
    }
    public vec4u16 xxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, y);
    }
    public vec4u16 xxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, z);
    }
    public vec4u16 xxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, w);
    }
    public vec4u16 xxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, x);
    }
    public vec4u16 xxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, y);
    }
    public vec4u16 xxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, z);
    }
    public vec4u16 xxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, w);
    }
    public vec4u16 xxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, x);
    }
    public vec4u16 xxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, y);
    }
    public vec4u16 xxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, z);
    }
    public vec4u16 xxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, w);
    }
    public vec4u16 xxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, x);
    }
    public vec4u16 xxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, y);
    }
    public vec4u16 xxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, z);
    }
    public vec4u16 xxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, w);
    }
    public vec4u16 xyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, x);
    }
    public vec4u16 xyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, y);
    }
    public vec4u16 xyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, z);
    }
    public vec4u16 xyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, w);
    }
    public vec4u16 xyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, x);
    }
    public vec4u16 xyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, y);
    }
    public vec4u16 xyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, z);
    }
    public vec4u16 xyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, w);
    }
    public vec4u16 xyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, x);
    }
    public vec4u16 xyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, y);
    }
    public vec4u16 xyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, z);
    }
    public vec4u16 xyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, w);
    }
    public vec4u16 xywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, x);
    }
    public vec4u16 xywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, y);
    }
    public vec4u16 xywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, z);
    }
    public vec4u16 xyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, w);
    }
    public vec4u16 xzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, x);
    }
    public vec4u16 xzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, y);
    }
    public vec4u16 xzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, z);
    }
    public vec4u16 xzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, w);
    }
    public vec4u16 xzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, x);
    }
    public vec4u16 xzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, y);
    }
    public vec4u16 xzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, z);
    }
    public vec4u16 xzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, w);
    }
    public vec4u16 xzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, x);
    }
    public vec4u16 xzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, y);
    }
    public vec4u16 xzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, z);
    }
    public vec4u16 xzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, w);
    }
    public vec4u16 xzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, x);
    }
    public vec4u16 xzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, y);
    }
    public vec4u16 xzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, z);
    }
    public vec4u16 xzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, w);
    }
    public vec4u16 xwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, x);
    }
    public vec4u16 xwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, y);
    }
    public vec4u16 xwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, z);
    }
    public vec4u16 xwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, w);
    }
    public vec4u16 xwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, x);
    }
    public vec4u16 xwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, y);
    }
    public vec4u16 xwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, z);
    }
    public vec4u16 xwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, w);
    }
    public vec4u16 xwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, x);
    }
    public vec4u16 xwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, y);
    }
    public vec4u16 xwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, z);
    }
    public vec4u16 xwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, w);
    }
    public vec4u16 xwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, x);
    }
    public vec4u16 xwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, y);
    }
    public vec4u16 xwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, z);
    }
    public vec4u16 xwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, w);
    }
    public vec4u16 yxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, x);
    }
    public vec4u16 yxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, y);
    }
    public vec4u16 yxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, z);
    }
    public vec4u16 yxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, w);
    }
    public vec4u16 yxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, x);
    }
    public vec4u16 yxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, y);
    }
    public vec4u16 yxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, z);
    }
    public vec4u16 yxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, w);
    }
    public vec4u16 yxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, x);
    }
    public vec4u16 yxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, y);
    }
    public vec4u16 yxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, z);
    }
    public vec4u16 yxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, w);
    }
    public vec4u16 yxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, x);
    }
    public vec4u16 yxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, y);
    }
    public vec4u16 yxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, z);
    }
    public vec4u16 yxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, w);
    }
    public vec4u16 yyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, x);
    }
    public vec4u16 yyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, y);
    }
    public vec4u16 yyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, z);
    }
    public vec4u16 yyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, w);
    }
    public vec4u16 yyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, x);
    }
    public vec4u16 yyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, y);
    }
    public vec4u16 yyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, z);
    }
    public vec4u16 yyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, w);
    }
    public vec4u16 yyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, x);
    }
    public vec4u16 yyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, y);
    }
    public vec4u16 yyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, z);
    }
    public vec4u16 yyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, w);
    }
    public vec4u16 yywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, x);
    }
    public vec4u16 yywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, y);
    }
    public vec4u16 yywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, z);
    }
    public vec4u16 yyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, w);
    }
    public vec4u16 yzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, x);
    }
    public vec4u16 yzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, y);
    }
    public vec4u16 yzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, z);
    }
    public vec4u16 yzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, w);
    }
    public vec4u16 yzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, x);
    }
    public vec4u16 yzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, y);
    }
    public vec4u16 yzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, z);
    }
    public vec4u16 yzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, w);
    }
    public vec4u16 yzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, x);
    }
    public vec4u16 yzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, y);
    }
    public vec4u16 yzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, z);
    }
    public vec4u16 yzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, w);
    }
    public vec4u16 yzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, x);
    }
    public vec4u16 yzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, y);
    }
    public vec4u16 yzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, z);
    }
    public vec4u16 yzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, w);
    }
    public vec4u16 ywxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, x);
    }
    public vec4u16 ywxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, y);
    }
    public vec4u16 ywxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, z);
    }
    public vec4u16 ywxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, w);
    }
    public vec4u16 ywyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, x);
    }
    public vec4u16 ywyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, y);
    }
    public vec4u16 ywyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, z);
    }
    public vec4u16 ywyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, w);
    }
    public vec4u16 ywzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, x);
    }
    public vec4u16 ywzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, y);
    }
    public vec4u16 ywzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, z);
    }
    public vec4u16 ywzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, w);
    }
    public vec4u16 ywwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, x);
    }
    public vec4u16 ywwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, y);
    }
    public vec4u16 ywwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, z);
    }
    public vec4u16 ywww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, w);
    }
    public vec4u16 zxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, x);
    }
    public vec4u16 zxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, y);
    }
    public vec4u16 zxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, z);
    }
    public vec4u16 zxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, w);
    }
    public vec4u16 zxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, x);
    }
    public vec4u16 zxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, y);
    }
    public vec4u16 zxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, z);
    }
    public vec4u16 zxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, w);
    }
    public vec4u16 zxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, x);
    }
    public vec4u16 zxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, y);
    }
    public vec4u16 zxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, z);
    }
    public vec4u16 zxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, w);
    }
    public vec4u16 zxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, x);
    }
    public vec4u16 zxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, y);
    }
    public vec4u16 zxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, z);
    }
    public vec4u16 zxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, w);
    }
    public vec4u16 zyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, x);
    }
    public vec4u16 zyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, y);
    }
    public vec4u16 zyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, z);
    }
    public vec4u16 zyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, w);
    }
    public vec4u16 zyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, x);
    }
    public vec4u16 zyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, y);
    }
    public vec4u16 zyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, z);
    }
    public vec4u16 zyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, w);
    }
    public vec4u16 zyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, x);
    }
    public vec4u16 zyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, y);
    }
    public vec4u16 zyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, z);
    }
    public vec4u16 zyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, w);
    }
    public vec4u16 zywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, x);
    }
    public vec4u16 zywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, y);
    }
    public vec4u16 zywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, z);
    }
    public vec4u16 zyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, w);
    }
    public vec4u16 zzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, x);
    }
    public vec4u16 zzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, y);
    }
    public vec4u16 zzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, z);
    }
    public vec4u16 zzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, w);
    }
    public vec4u16 zzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, x);
    }
    public vec4u16 zzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, y);
    }
    public vec4u16 zzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, z);
    }
    public vec4u16 zzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, w);
    }
    public vec4u16 zzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, x);
    }
    public vec4u16 zzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, y);
    }
    public vec4u16 zzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, z);
    }
    public vec4u16 zzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, w);
    }
    public vec4u16 zzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, x);
    }
    public vec4u16 zzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, y);
    }
    public vec4u16 zzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, z);
    }
    public vec4u16 zzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, w);
    }
    public vec4u16 zwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, x);
    }
    public vec4u16 zwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, y);
    }
    public vec4u16 zwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, z);
    }
    public vec4u16 zwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, w);
    }
    public vec4u16 zwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, x);
    }
    public vec4u16 zwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, y);
    }
    public vec4u16 zwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, z);
    }
    public vec4u16 zwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, w);
    }
    public vec4u16 zwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, x);
    }
    public vec4u16 zwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, y);
    }
    public vec4u16 zwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, z);
    }
    public vec4u16 zwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, w);
    }
    public vec4u16 zwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, x);
    }
    public vec4u16 zwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, y);
    }
    public vec4u16 zwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, z);
    }
    public vec4u16 zwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, w);
    }
    public vec4u16 wxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, x);
    }
    public vec4u16 wxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, y);
    }
    public vec4u16 wxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, z);
    }
    public vec4u16 wxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, w);
    }
    public vec4u16 wxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, x);
    }
    public vec4u16 wxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, y);
    }
    public vec4u16 wxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, z);
    }
    public vec4u16 wxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, w);
    }
    public vec4u16 wxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, x);
    }
    public vec4u16 wxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, y);
    }
    public vec4u16 wxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, z);
    }
    public vec4u16 wxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, w);
    }
    public vec4u16 wxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, x);
    }
    public vec4u16 wxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, y);
    }
    public vec4u16 wxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, z);
    }
    public vec4u16 wxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, w);
    }
    public vec4u16 wyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, x);
    }
    public vec4u16 wyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, y);
    }
    public vec4u16 wyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, z);
    }
    public vec4u16 wyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, w);
    }
    public vec4u16 wyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, x);
    }
    public vec4u16 wyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, y);
    }
    public vec4u16 wyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, z);
    }
    public vec4u16 wyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, w);
    }
    public vec4u16 wyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, x);
    }
    public vec4u16 wyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, y);
    }
    public vec4u16 wyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, z);
    }
    public vec4u16 wyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, w);
    }
    public vec4u16 wywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, x);
    }
    public vec4u16 wywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, y);
    }
    public vec4u16 wywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, z);
    }
    public vec4u16 wyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, w);
    }
    public vec4u16 wzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, x);
    }
    public vec4u16 wzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, y);
    }
    public vec4u16 wzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, z);
    }
    public vec4u16 wzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, w);
    }
    public vec4u16 wzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, x);
    }
    public vec4u16 wzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, y);
    }
    public vec4u16 wzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, z);
    }
    public vec4u16 wzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, w);
    }
    public vec4u16 wzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, x);
    }
    public vec4u16 wzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, y);
    }
    public vec4u16 wzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, z);
    }
    public vec4u16 wzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, w);
    }
    public vec4u16 wzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, x);
    }
    public vec4u16 wzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, y);
    }
    public vec4u16 wzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, z);
    }
    public vec4u16 wzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, w);
    }
    public vec4u16 wwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, x);
    }
    public vec4u16 wwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, y);
    }
    public vec4u16 wwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, z);
    }
    public vec4u16 wwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, w);
    }
    public vec4u16 wwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, x);
    }
    public vec4u16 wwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, y);
    }
    public vec4u16 wwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, z);
    }
    public vec4u16 wwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, w);
    }
    public vec4u16 wwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, x);
    }
    public vec4u16 wwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, y);
    }
    public vec4u16 wwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, z);
    }
    public vec4u16 wwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, w);
    }
    public vec4u16 wwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, x);
    }
    public vec4u16 wwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, y);
    }
    public vec4u16 wwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, z);
    }
    public vec4u16 wwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, w);
    }


    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u16 operator -(vec4u16 v) => new() { Data = -v.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u16 operator +(vec4u16 l, vec4u16 r) => new() { Data = l.Data + r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u16 operator -(vec4u16 l, vec4u16 r) => new() { Data = l.Data - r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u16 operator *(vec4u16 l, vec4u16 r) => new() { Data = l.Data * r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u16 operator /(vec4u16 l, vec4u16 r) => new() { Data = l.Data / r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u16 operator &(vec4u16 l, vec4u16 r) => new() { Data = l.Data & r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u16 operator |(vec4u16 l, vec4u16 r) => new() { Data = l.Data | r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u16 operator ^(vec4u16 l, vec4u16 r) => new() { Data = l.Data ^ r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u16 operator %(vec4u16 l, vec4u16 r) => new() { Data = Vector64.Create((ushort)(l.x % r.x), (ushort)(l.y % r.y), (ushort)(l.z % r.z), default(ushort)) };
}

public partial class DMath
{
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u16 vec4(ushort x, ushort y, ushort z, ushort w) => new() { Data = Vector64.Create(x, y, z, w) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u16 vec4(ushort e) => new() { Data = Vector64.Create(e) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u16 vec4(ushort x, ushort y, vec2u16 v) => vec4(x, y, v.x, v.y);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u16 vec4(ushort x, vec2u16 v, ushort w) => vec4(x, v.x, v.y, w);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u16 vec4(vec2u16 v, ushort z, ushort w) => vec4(v.x, v.y, z, w);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u16 vec4(ushort e, vec3u16 v) => vec4(e, v.x, v.y, v.z);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u16 vec4(vec3u16 v, ushort e) => vec4(v.x, v.y, v.z, e);
}

// 32-bit scalar vec types

public partial struct vec4i32
{
    internal Vector128<int> Data;

    public int x
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[0];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value, Data[1], Data[2], Data[3]);
        }
    }
    public int y
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[1];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(Data[0], value, Data[2], Data[3]);
        }
    }
    public int z
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[2];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(Data[0], Data[1], value, Data[3]);
        }
    }
    public int w
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[3];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(Data[0], Data[1], Data[2], value);
        }
    }

    public vec2i32 xx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, x);


    }
    public vec2i32 xy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, value.y, z, w);
        }

    }
    public vec2i32 xz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, y, value.y, w);
        }

    }
    public vec2i32 xw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, y, z, value.y);
        }

    }
    public vec2i32 yx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, value.x, z, w);
        }

    }
    public vec2i32 yy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, y);


    }
    public vec2i32 yz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.x, value.y, w);
        }

    }
    public vec2i32 yw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.x, z, value.y);
        }

    }
    public vec2i32 zx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, y, value.x, w);
        }

    }
    public vec2i32 zy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.y, value.x, w);
        }

    }
    public vec2i32 zz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, z);


    }
    public vec2i32 zw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, y, value.x, value.y);
        }

    }
    public vec2i32 wx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, y, z, value.x);
        }

    }
    public vec2i32 wy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.y, z, value.x);
        }

    }
    public vec2i32 wz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, y, value.y, value.x);
        }

    }
    public vec2i32 ww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, w);


    }

    public vec3i32 xxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, x);

    }

    public vec3i32 xxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, y);

    }

    public vec3i32 xxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, z);

    }

    public vec3i32 xxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, w);

    }

    public vec3i32 xyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, x);

    }

    public vec3i32 xyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, y);

    }

    public vec3i32 xyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, value.y, value.z, w);
        }
    }

    public vec3i32 xyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, value.y, z, value.z);
        }
    }

    public vec3i32 xzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, x);

    }

    public vec3i32 xzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, value.z, value.y, w);
        }
    }

    public vec3i32 xzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, z);

    }

    public vec3i32 xzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, y, value.y, value.z);
        }
    }

    public vec3i32 xwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, x);

    }

    public vec3i32 xwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, value.z, z, value.y);
        }
    }

    public vec3i32 xwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, y, value.z, value.y);
        }
    }

    public vec3i32 xww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, w);

    }

    public vec3i32 yxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, x);

    }

    public vec3i32 yxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, y);

    }

    public vec3i32 yxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, value.x, value.z, w);
        }
    }

    public vec3i32 yxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, value.x, z, value.z);
        }
    }

    public vec3i32 yyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, x);

    }

    public vec3i32 yyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, y);

    }

    public vec3i32 yyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, z);

    }

    public vec3i32 yyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, w);

    }

    public vec3i32 yzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.z, value.x, value.y, w);
        }
    }

    public vec3i32 yzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, y);

    }

    public vec3i32 yzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, z);

    }

    public vec3i32 yzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.x, value.y, value.z);
        }
    }

    public vec3i32 ywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.z, value.x, z, value.y);
        }
    }

    public vec3i32 ywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, y);

    }

    public vec3i32 ywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.x, value.z, value.y);
        }
    }

    public vec3i32 yww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, w);

    }

    public vec3i32 zxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, x);

    }

    public vec3i32 zxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, value.z, value.x, w);
        }
    }

    public vec3i32 zxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, z);

    }

    public vec3i32 zxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, y, value.x, value.z);
        }
    }

    public vec3i32 zyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.z, value.y, value.x, w);
        }
    }

    public vec3i32 zyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, y);

    }

    public vec3i32 zyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, z);

    }

    public vec3i32 zyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.y, value.x, value.z);
        }
    }

    public vec3i32 zzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, x);

    }

    public vec3i32 zzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, y);

    }

    public vec3i32 zzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, z);

    }

    public vec3i32 zzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, w);

    }

    public vec3i32 zwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.z, y, value.x, value.y);
        }
    }

    public vec3i32 zwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.z, value.x, value.y);
        }
    }

    public vec3i32 zwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, z);

    }

    public vec3i32 zww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, w);

    }

    public vec3i32 wxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, x);

    }

    public vec3i32 wxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, value.z, z, value.x);
        }
    }

    public vec3i32 wxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, y, value.z, value.x);
        }
    }

    public vec3i32 wxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, w);

    }

    public vec3i32 wyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.z, value.y, z, value.x);
        }
    }

    public vec3i32 wyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, y);

    }

    public vec3i32 wyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.y, value.z, value.x);
        }
    }

    public vec3i32 wyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, w);

    }

    public vec3i32 wzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.z, y, value.y, value.x);
        }
    }

    public vec3i32 wzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.z, value.y, value.x);
        }
    }

    public vec3i32 wzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, z);

    }

    public vec3i32 wzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, w);

    }

    public vec3i32 wwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, x);

    }

    public vec3i32 wwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, y);

    }

    public vec3i32 wwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, z);

    }

    public vec3i32 www
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, w);

    }


    public vec4i32 xxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, x);
    }
    public vec4i32 xxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, y);
    }
    public vec4i32 xxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, z);
    }
    public vec4i32 xxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, w);
    }
    public vec4i32 xxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, x);
    }
    public vec4i32 xxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, y);
    }
    public vec4i32 xxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, z);
    }
    public vec4i32 xxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, w);
    }
    public vec4i32 xxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, x);
    }
    public vec4i32 xxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, y);
    }
    public vec4i32 xxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, z);
    }
    public vec4i32 xxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, w);
    }
    public vec4i32 xxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, x);
    }
    public vec4i32 xxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, y);
    }
    public vec4i32 xxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, z);
    }
    public vec4i32 xxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, w);
    }
    public vec4i32 xyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, x);
    }
    public vec4i32 xyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, y);
    }
    public vec4i32 xyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, z);
    }
    public vec4i32 xyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, w);
    }
    public vec4i32 xyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, x);
    }
    public vec4i32 xyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, y);
    }
    public vec4i32 xyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, z);
    }
    public vec4i32 xyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, w);
    }
    public vec4i32 xyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, x);
    }
    public vec4i32 xyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, y);
    }
    public vec4i32 xyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, z);
    }
    public vec4i32 xyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, w);
    }
    public vec4i32 xywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, x);
    }
    public vec4i32 xywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, y);
    }
    public vec4i32 xywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, z);
    }
    public vec4i32 xyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, w);
    }
    public vec4i32 xzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, x);
    }
    public vec4i32 xzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, y);
    }
    public vec4i32 xzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, z);
    }
    public vec4i32 xzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, w);
    }
    public vec4i32 xzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, x);
    }
    public vec4i32 xzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, y);
    }
    public vec4i32 xzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, z);
    }
    public vec4i32 xzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, w);
    }
    public vec4i32 xzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, x);
    }
    public vec4i32 xzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, y);
    }
    public vec4i32 xzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, z);
    }
    public vec4i32 xzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, w);
    }
    public vec4i32 xzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, x);
    }
    public vec4i32 xzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, y);
    }
    public vec4i32 xzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, z);
    }
    public vec4i32 xzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, w);
    }
    public vec4i32 xwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, x);
    }
    public vec4i32 xwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, y);
    }
    public vec4i32 xwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, z);
    }
    public vec4i32 xwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, w);
    }
    public vec4i32 xwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, x);
    }
    public vec4i32 xwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, y);
    }
    public vec4i32 xwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, z);
    }
    public vec4i32 xwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, w);
    }
    public vec4i32 xwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, x);
    }
    public vec4i32 xwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, y);
    }
    public vec4i32 xwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, z);
    }
    public vec4i32 xwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, w);
    }
    public vec4i32 xwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, x);
    }
    public vec4i32 xwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, y);
    }
    public vec4i32 xwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, z);
    }
    public vec4i32 xwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, w);
    }
    public vec4i32 yxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, x);
    }
    public vec4i32 yxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, y);
    }
    public vec4i32 yxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, z);
    }
    public vec4i32 yxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, w);
    }
    public vec4i32 yxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, x);
    }
    public vec4i32 yxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, y);
    }
    public vec4i32 yxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, z);
    }
    public vec4i32 yxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, w);
    }
    public vec4i32 yxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, x);
    }
    public vec4i32 yxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, y);
    }
    public vec4i32 yxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, z);
    }
    public vec4i32 yxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, w);
    }
    public vec4i32 yxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, x);
    }
    public vec4i32 yxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, y);
    }
    public vec4i32 yxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, z);
    }
    public vec4i32 yxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, w);
    }
    public vec4i32 yyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, x);
    }
    public vec4i32 yyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, y);
    }
    public vec4i32 yyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, z);
    }
    public vec4i32 yyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, w);
    }
    public vec4i32 yyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, x);
    }
    public vec4i32 yyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, y);
    }
    public vec4i32 yyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, z);
    }
    public vec4i32 yyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, w);
    }
    public vec4i32 yyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, x);
    }
    public vec4i32 yyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, y);
    }
    public vec4i32 yyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, z);
    }
    public vec4i32 yyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, w);
    }
    public vec4i32 yywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, x);
    }
    public vec4i32 yywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, y);
    }
    public vec4i32 yywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, z);
    }
    public vec4i32 yyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, w);
    }
    public vec4i32 yzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, x);
    }
    public vec4i32 yzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, y);
    }
    public vec4i32 yzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, z);
    }
    public vec4i32 yzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, w);
    }
    public vec4i32 yzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, x);
    }
    public vec4i32 yzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, y);
    }
    public vec4i32 yzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, z);
    }
    public vec4i32 yzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, w);
    }
    public vec4i32 yzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, x);
    }
    public vec4i32 yzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, y);
    }
    public vec4i32 yzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, z);
    }
    public vec4i32 yzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, w);
    }
    public vec4i32 yzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, x);
    }
    public vec4i32 yzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, y);
    }
    public vec4i32 yzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, z);
    }
    public vec4i32 yzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, w);
    }
    public vec4i32 ywxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, x);
    }
    public vec4i32 ywxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, y);
    }
    public vec4i32 ywxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, z);
    }
    public vec4i32 ywxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, w);
    }
    public vec4i32 ywyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, x);
    }
    public vec4i32 ywyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, y);
    }
    public vec4i32 ywyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, z);
    }
    public vec4i32 ywyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, w);
    }
    public vec4i32 ywzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, x);
    }
    public vec4i32 ywzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, y);
    }
    public vec4i32 ywzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, z);
    }
    public vec4i32 ywzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, w);
    }
    public vec4i32 ywwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, x);
    }
    public vec4i32 ywwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, y);
    }
    public vec4i32 ywwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, z);
    }
    public vec4i32 ywww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, w);
    }
    public vec4i32 zxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, x);
    }
    public vec4i32 zxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, y);
    }
    public vec4i32 zxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, z);
    }
    public vec4i32 zxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, w);
    }
    public vec4i32 zxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, x);
    }
    public vec4i32 zxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, y);
    }
    public vec4i32 zxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, z);
    }
    public vec4i32 zxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, w);
    }
    public vec4i32 zxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, x);
    }
    public vec4i32 zxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, y);
    }
    public vec4i32 zxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, z);
    }
    public vec4i32 zxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, w);
    }
    public vec4i32 zxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, x);
    }
    public vec4i32 zxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, y);
    }
    public vec4i32 zxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, z);
    }
    public vec4i32 zxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, w);
    }
    public vec4i32 zyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, x);
    }
    public vec4i32 zyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, y);
    }
    public vec4i32 zyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, z);
    }
    public vec4i32 zyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, w);
    }
    public vec4i32 zyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, x);
    }
    public vec4i32 zyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, y);
    }
    public vec4i32 zyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, z);
    }
    public vec4i32 zyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, w);
    }
    public vec4i32 zyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, x);
    }
    public vec4i32 zyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, y);
    }
    public vec4i32 zyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, z);
    }
    public vec4i32 zyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, w);
    }
    public vec4i32 zywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, x);
    }
    public vec4i32 zywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, y);
    }
    public vec4i32 zywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, z);
    }
    public vec4i32 zyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, w);
    }
    public vec4i32 zzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, x);
    }
    public vec4i32 zzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, y);
    }
    public vec4i32 zzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, z);
    }
    public vec4i32 zzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, w);
    }
    public vec4i32 zzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, x);
    }
    public vec4i32 zzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, y);
    }
    public vec4i32 zzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, z);
    }
    public vec4i32 zzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, w);
    }
    public vec4i32 zzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, x);
    }
    public vec4i32 zzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, y);
    }
    public vec4i32 zzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, z);
    }
    public vec4i32 zzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, w);
    }
    public vec4i32 zzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, x);
    }
    public vec4i32 zzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, y);
    }
    public vec4i32 zzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, z);
    }
    public vec4i32 zzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, w);
    }
    public vec4i32 zwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, x);
    }
    public vec4i32 zwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, y);
    }
    public vec4i32 zwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, z);
    }
    public vec4i32 zwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, w);
    }
    public vec4i32 zwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, x);
    }
    public vec4i32 zwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, y);
    }
    public vec4i32 zwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, z);
    }
    public vec4i32 zwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, w);
    }
    public vec4i32 zwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, x);
    }
    public vec4i32 zwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, y);
    }
    public vec4i32 zwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, z);
    }
    public vec4i32 zwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, w);
    }
    public vec4i32 zwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, x);
    }
    public vec4i32 zwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, y);
    }
    public vec4i32 zwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, z);
    }
    public vec4i32 zwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, w);
    }
    public vec4i32 wxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, x);
    }
    public vec4i32 wxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, y);
    }
    public vec4i32 wxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, z);
    }
    public vec4i32 wxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, w);
    }
    public vec4i32 wxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, x);
    }
    public vec4i32 wxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, y);
    }
    public vec4i32 wxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, z);
    }
    public vec4i32 wxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, w);
    }
    public vec4i32 wxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, x);
    }
    public vec4i32 wxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, y);
    }
    public vec4i32 wxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, z);
    }
    public vec4i32 wxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, w);
    }
    public vec4i32 wxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, x);
    }
    public vec4i32 wxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, y);
    }
    public vec4i32 wxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, z);
    }
    public vec4i32 wxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, w);
    }
    public vec4i32 wyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, x);
    }
    public vec4i32 wyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, y);
    }
    public vec4i32 wyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, z);
    }
    public vec4i32 wyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, w);
    }
    public vec4i32 wyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, x);
    }
    public vec4i32 wyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, y);
    }
    public vec4i32 wyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, z);
    }
    public vec4i32 wyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, w);
    }
    public vec4i32 wyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, x);
    }
    public vec4i32 wyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, y);
    }
    public vec4i32 wyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, z);
    }
    public vec4i32 wyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, w);
    }
    public vec4i32 wywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, x);
    }
    public vec4i32 wywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, y);
    }
    public vec4i32 wywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, z);
    }
    public vec4i32 wyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, w);
    }
    public vec4i32 wzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, x);
    }
    public vec4i32 wzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, y);
    }
    public vec4i32 wzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, z);
    }
    public vec4i32 wzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, w);
    }
    public vec4i32 wzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, x);
    }
    public vec4i32 wzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, y);
    }
    public vec4i32 wzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, z);
    }
    public vec4i32 wzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, w);
    }
    public vec4i32 wzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, x);
    }
    public vec4i32 wzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, y);
    }
    public vec4i32 wzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, z);
    }
    public vec4i32 wzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, w);
    }
    public vec4i32 wzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, x);
    }
    public vec4i32 wzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, y);
    }
    public vec4i32 wzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, z);
    }
    public vec4i32 wzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, w);
    }
    public vec4i32 wwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, x);
    }
    public vec4i32 wwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, y);
    }
    public vec4i32 wwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, z);
    }
    public vec4i32 wwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, w);
    }
    public vec4i32 wwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, x);
    }
    public vec4i32 wwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, y);
    }
    public vec4i32 wwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, z);
    }
    public vec4i32 wwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, w);
    }
    public vec4i32 wwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, x);
    }
    public vec4i32 wwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, y);
    }
    public vec4i32 wwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, z);
    }
    public vec4i32 wwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, w);
    }
    public vec4i32 wwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, x);
    }
    public vec4i32 wwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, y);
    }
    public vec4i32 wwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, z);
    }
    public vec4i32 wwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, w);
    }


    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i32 operator -(vec4i32 v) => new() { Data = -v.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i32 operator +(vec4i32 l, vec4i32 r) => new() { Data = l.Data + r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i32 operator -(vec4i32 l, vec4i32 r) => new() { Data = l.Data - r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i32 operator *(vec4i32 l, vec4i32 r) => new() { Data = l.Data * r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i32 operator /(vec4i32 l, vec4i32 r) => new() { Data = l.Data / r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i32 operator &(vec4i32 l, vec4i32 r) => new() { Data = l.Data & r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i32 operator |(vec4i32 l, vec4i32 r) => new() { Data = l.Data | r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i32 operator ^(vec4i32 l, vec4i32 r) => new() { Data = l.Data ^ r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i32 operator %(vec4i32 l, vec4i32 r) => new() { Data = Vector128.Create((int)(l.x % r.x), (int)(l.y % r.y), (int)(l.z % r.z), default(int)) };
}

public partial class DMath
{
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i32 vec4(int x, int y, int z, int w) => new() { Data = Vector128.Create(x, y, z, w) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i32 vec4(int e) => new() { Data = Vector128.Create(e) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i32 vec4(int x, int y, vec2i32 v) => vec4(x, y, v.x, v.y);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i32 vec4(int x, vec2i32 v, int w) => vec4(x, v.x, v.y, w);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i32 vec4(vec2i32 v, int z, int w) => vec4(v.x, v.y, z, w);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i32 vec4(int e, vec3i32 v) => vec4(e, v.x, v.y, v.z);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i32 vec4(vec3i32 v, int e) => vec4(v.x, v.y, v.z, e);
}


public partial struct vec4u32
{
    internal Vector128<uint> Data;

    public uint x
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[0];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value, Data[1], Data[2], Data[3]);
        }
    }
    public uint y
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[1];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(Data[0], value, Data[2], Data[3]);
        }
    }
    public uint z
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[2];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(Data[0], Data[1], value, Data[3]);
        }
    }
    public uint w
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[3];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(Data[0], Data[1], Data[2], value);
        }
    }

    public vec2u32 xx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, x);


    }
    public vec2u32 xy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, value.y, z, w);
        }

    }
    public vec2u32 xz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, y, value.y, w);
        }

    }
    public vec2u32 xw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, y, z, value.y);
        }

    }
    public vec2u32 yx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, value.x, z, w);
        }

    }
    public vec2u32 yy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, y);


    }
    public vec2u32 yz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.x, value.y, w);
        }

    }
    public vec2u32 yw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.x, z, value.y);
        }

    }
    public vec2u32 zx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, y, value.x, w);
        }

    }
    public vec2u32 zy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.y, value.x, w);
        }

    }
    public vec2u32 zz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, z);


    }
    public vec2u32 zw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, y, value.x, value.y);
        }

    }
    public vec2u32 wx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, y, z, value.x);
        }

    }
    public vec2u32 wy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.y, z, value.x);
        }

    }
    public vec2u32 wz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, y, value.y, value.x);
        }

    }
    public vec2u32 ww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, w);


    }

    public vec3u32 xxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, x);

    }

    public vec3u32 xxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, y);

    }

    public vec3u32 xxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, z);

    }

    public vec3u32 xxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, w);

    }

    public vec3u32 xyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, x);

    }

    public vec3u32 xyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, y);

    }

    public vec3u32 xyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, value.y, value.z, w);
        }
    }

    public vec3u32 xyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, value.y, z, value.z);
        }
    }

    public vec3u32 xzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, x);

    }

    public vec3u32 xzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, value.z, value.y, w);
        }
    }

    public vec3u32 xzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, z);

    }

    public vec3u32 xzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, y, value.y, value.z);
        }
    }

    public vec3u32 xwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, x);

    }

    public vec3u32 xwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, value.z, z, value.y);
        }
    }

    public vec3u32 xwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, y, value.z, value.y);
        }
    }

    public vec3u32 xww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, w);

    }

    public vec3u32 yxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, x);

    }

    public vec3u32 yxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, y);

    }

    public vec3u32 yxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, value.x, value.z, w);
        }
    }

    public vec3u32 yxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, value.x, z, value.z);
        }
    }

    public vec3u32 yyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, x);

    }

    public vec3u32 yyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, y);

    }

    public vec3u32 yyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, z);

    }

    public vec3u32 yyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, w);

    }

    public vec3u32 yzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.z, value.x, value.y, w);
        }
    }

    public vec3u32 yzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, y);

    }

    public vec3u32 yzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, z);

    }

    public vec3u32 yzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.x, value.y, value.z);
        }
    }

    public vec3u32 ywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.z, value.x, z, value.y);
        }
    }

    public vec3u32 ywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, y);

    }

    public vec3u32 ywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.x, value.z, value.y);
        }
    }

    public vec3u32 yww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, w);

    }

    public vec3u32 zxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, x);

    }

    public vec3u32 zxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, value.z, value.x, w);
        }
    }

    public vec3u32 zxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, z);

    }

    public vec3u32 zxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, y, value.x, value.z);
        }
    }

    public vec3u32 zyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.z, value.y, value.x, w);
        }
    }

    public vec3u32 zyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, y);

    }

    public vec3u32 zyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, z);

    }

    public vec3u32 zyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.y, value.x, value.z);
        }
    }

    public vec3u32 zzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, x);

    }

    public vec3u32 zzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, y);

    }

    public vec3u32 zzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, z);

    }

    public vec3u32 zzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, w);

    }

    public vec3u32 zwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.z, y, value.x, value.y);
        }
    }

    public vec3u32 zwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.z, value.x, value.y);
        }
    }

    public vec3u32 zwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, z);

    }

    public vec3u32 zww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, w);

    }

    public vec3u32 wxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, x);

    }

    public vec3u32 wxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, value.z, z, value.x);
        }
    }

    public vec3u32 wxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, y, value.z, value.x);
        }
    }

    public vec3u32 wxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, w);

    }

    public vec3u32 wyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.z, value.y, z, value.x);
        }
    }

    public vec3u32 wyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, y);

    }

    public vec3u32 wyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.y, value.z, value.x);
        }
    }

    public vec3u32 wyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, w);

    }

    public vec3u32 wzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.z, y, value.y, value.x);
        }
    }

    public vec3u32 wzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.z, value.y, value.x);
        }
    }

    public vec3u32 wzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, z);

    }

    public vec3u32 wzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, w);

    }

    public vec3u32 wwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, x);

    }

    public vec3u32 wwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, y);

    }

    public vec3u32 wwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, z);

    }

    public vec3u32 www
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, w);

    }


    public vec4u32 xxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, x);
    }
    public vec4u32 xxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, y);
    }
    public vec4u32 xxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, z);
    }
    public vec4u32 xxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, w);
    }
    public vec4u32 xxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, x);
    }
    public vec4u32 xxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, y);
    }
    public vec4u32 xxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, z);
    }
    public vec4u32 xxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, w);
    }
    public vec4u32 xxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, x);
    }
    public vec4u32 xxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, y);
    }
    public vec4u32 xxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, z);
    }
    public vec4u32 xxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, w);
    }
    public vec4u32 xxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, x);
    }
    public vec4u32 xxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, y);
    }
    public vec4u32 xxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, z);
    }
    public vec4u32 xxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, w);
    }
    public vec4u32 xyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, x);
    }
    public vec4u32 xyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, y);
    }
    public vec4u32 xyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, z);
    }
    public vec4u32 xyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, w);
    }
    public vec4u32 xyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, x);
    }
    public vec4u32 xyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, y);
    }
    public vec4u32 xyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, z);
    }
    public vec4u32 xyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, w);
    }
    public vec4u32 xyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, x);
    }
    public vec4u32 xyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, y);
    }
    public vec4u32 xyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, z);
    }
    public vec4u32 xyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, w);
    }
    public vec4u32 xywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, x);
    }
    public vec4u32 xywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, y);
    }
    public vec4u32 xywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, z);
    }
    public vec4u32 xyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, w);
    }
    public vec4u32 xzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, x);
    }
    public vec4u32 xzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, y);
    }
    public vec4u32 xzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, z);
    }
    public vec4u32 xzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, w);
    }
    public vec4u32 xzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, x);
    }
    public vec4u32 xzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, y);
    }
    public vec4u32 xzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, z);
    }
    public vec4u32 xzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, w);
    }
    public vec4u32 xzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, x);
    }
    public vec4u32 xzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, y);
    }
    public vec4u32 xzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, z);
    }
    public vec4u32 xzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, w);
    }
    public vec4u32 xzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, x);
    }
    public vec4u32 xzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, y);
    }
    public vec4u32 xzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, z);
    }
    public vec4u32 xzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, w);
    }
    public vec4u32 xwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, x);
    }
    public vec4u32 xwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, y);
    }
    public vec4u32 xwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, z);
    }
    public vec4u32 xwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, w);
    }
    public vec4u32 xwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, x);
    }
    public vec4u32 xwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, y);
    }
    public vec4u32 xwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, z);
    }
    public vec4u32 xwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, w);
    }
    public vec4u32 xwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, x);
    }
    public vec4u32 xwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, y);
    }
    public vec4u32 xwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, z);
    }
    public vec4u32 xwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, w);
    }
    public vec4u32 xwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, x);
    }
    public vec4u32 xwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, y);
    }
    public vec4u32 xwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, z);
    }
    public vec4u32 xwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, w);
    }
    public vec4u32 yxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, x);
    }
    public vec4u32 yxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, y);
    }
    public vec4u32 yxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, z);
    }
    public vec4u32 yxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, w);
    }
    public vec4u32 yxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, x);
    }
    public vec4u32 yxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, y);
    }
    public vec4u32 yxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, z);
    }
    public vec4u32 yxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, w);
    }
    public vec4u32 yxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, x);
    }
    public vec4u32 yxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, y);
    }
    public vec4u32 yxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, z);
    }
    public vec4u32 yxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, w);
    }
    public vec4u32 yxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, x);
    }
    public vec4u32 yxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, y);
    }
    public vec4u32 yxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, z);
    }
    public vec4u32 yxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, w);
    }
    public vec4u32 yyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, x);
    }
    public vec4u32 yyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, y);
    }
    public vec4u32 yyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, z);
    }
    public vec4u32 yyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, w);
    }
    public vec4u32 yyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, x);
    }
    public vec4u32 yyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, y);
    }
    public vec4u32 yyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, z);
    }
    public vec4u32 yyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, w);
    }
    public vec4u32 yyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, x);
    }
    public vec4u32 yyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, y);
    }
    public vec4u32 yyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, z);
    }
    public vec4u32 yyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, w);
    }
    public vec4u32 yywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, x);
    }
    public vec4u32 yywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, y);
    }
    public vec4u32 yywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, z);
    }
    public vec4u32 yyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, w);
    }
    public vec4u32 yzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, x);
    }
    public vec4u32 yzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, y);
    }
    public vec4u32 yzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, z);
    }
    public vec4u32 yzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, w);
    }
    public vec4u32 yzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, x);
    }
    public vec4u32 yzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, y);
    }
    public vec4u32 yzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, z);
    }
    public vec4u32 yzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, w);
    }
    public vec4u32 yzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, x);
    }
    public vec4u32 yzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, y);
    }
    public vec4u32 yzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, z);
    }
    public vec4u32 yzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, w);
    }
    public vec4u32 yzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, x);
    }
    public vec4u32 yzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, y);
    }
    public vec4u32 yzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, z);
    }
    public vec4u32 yzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, w);
    }
    public vec4u32 ywxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, x);
    }
    public vec4u32 ywxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, y);
    }
    public vec4u32 ywxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, z);
    }
    public vec4u32 ywxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, w);
    }
    public vec4u32 ywyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, x);
    }
    public vec4u32 ywyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, y);
    }
    public vec4u32 ywyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, z);
    }
    public vec4u32 ywyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, w);
    }
    public vec4u32 ywzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, x);
    }
    public vec4u32 ywzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, y);
    }
    public vec4u32 ywzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, z);
    }
    public vec4u32 ywzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, w);
    }
    public vec4u32 ywwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, x);
    }
    public vec4u32 ywwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, y);
    }
    public vec4u32 ywwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, z);
    }
    public vec4u32 ywww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, w);
    }
    public vec4u32 zxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, x);
    }
    public vec4u32 zxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, y);
    }
    public vec4u32 zxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, z);
    }
    public vec4u32 zxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, w);
    }
    public vec4u32 zxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, x);
    }
    public vec4u32 zxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, y);
    }
    public vec4u32 zxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, z);
    }
    public vec4u32 zxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, w);
    }
    public vec4u32 zxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, x);
    }
    public vec4u32 zxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, y);
    }
    public vec4u32 zxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, z);
    }
    public vec4u32 zxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, w);
    }
    public vec4u32 zxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, x);
    }
    public vec4u32 zxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, y);
    }
    public vec4u32 zxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, z);
    }
    public vec4u32 zxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, w);
    }
    public vec4u32 zyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, x);
    }
    public vec4u32 zyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, y);
    }
    public vec4u32 zyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, z);
    }
    public vec4u32 zyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, w);
    }
    public vec4u32 zyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, x);
    }
    public vec4u32 zyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, y);
    }
    public vec4u32 zyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, z);
    }
    public vec4u32 zyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, w);
    }
    public vec4u32 zyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, x);
    }
    public vec4u32 zyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, y);
    }
    public vec4u32 zyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, z);
    }
    public vec4u32 zyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, w);
    }
    public vec4u32 zywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, x);
    }
    public vec4u32 zywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, y);
    }
    public vec4u32 zywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, z);
    }
    public vec4u32 zyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, w);
    }
    public vec4u32 zzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, x);
    }
    public vec4u32 zzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, y);
    }
    public vec4u32 zzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, z);
    }
    public vec4u32 zzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, w);
    }
    public vec4u32 zzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, x);
    }
    public vec4u32 zzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, y);
    }
    public vec4u32 zzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, z);
    }
    public vec4u32 zzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, w);
    }
    public vec4u32 zzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, x);
    }
    public vec4u32 zzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, y);
    }
    public vec4u32 zzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, z);
    }
    public vec4u32 zzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, w);
    }
    public vec4u32 zzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, x);
    }
    public vec4u32 zzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, y);
    }
    public vec4u32 zzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, z);
    }
    public vec4u32 zzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, w);
    }
    public vec4u32 zwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, x);
    }
    public vec4u32 zwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, y);
    }
    public vec4u32 zwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, z);
    }
    public vec4u32 zwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, w);
    }
    public vec4u32 zwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, x);
    }
    public vec4u32 zwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, y);
    }
    public vec4u32 zwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, z);
    }
    public vec4u32 zwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, w);
    }
    public vec4u32 zwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, x);
    }
    public vec4u32 zwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, y);
    }
    public vec4u32 zwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, z);
    }
    public vec4u32 zwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, w);
    }
    public vec4u32 zwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, x);
    }
    public vec4u32 zwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, y);
    }
    public vec4u32 zwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, z);
    }
    public vec4u32 zwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, w);
    }
    public vec4u32 wxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, x);
    }
    public vec4u32 wxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, y);
    }
    public vec4u32 wxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, z);
    }
    public vec4u32 wxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, w);
    }
    public vec4u32 wxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, x);
    }
    public vec4u32 wxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, y);
    }
    public vec4u32 wxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, z);
    }
    public vec4u32 wxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, w);
    }
    public vec4u32 wxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, x);
    }
    public vec4u32 wxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, y);
    }
    public vec4u32 wxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, z);
    }
    public vec4u32 wxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, w);
    }
    public vec4u32 wxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, x);
    }
    public vec4u32 wxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, y);
    }
    public vec4u32 wxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, z);
    }
    public vec4u32 wxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, w);
    }
    public vec4u32 wyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, x);
    }
    public vec4u32 wyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, y);
    }
    public vec4u32 wyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, z);
    }
    public vec4u32 wyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, w);
    }
    public vec4u32 wyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, x);
    }
    public vec4u32 wyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, y);
    }
    public vec4u32 wyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, z);
    }
    public vec4u32 wyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, w);
    }
    public vec4u32 wyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, x);
    }
    public vec4u32 wyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, y);
    }
    public vec4u32 wyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, z);
    }
    public vec4u32 wyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, w);
    }
    public vec4u32 wywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, x);
    }
    public vec4u32 wywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, y);
    }
    public vec4u32 wywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, z);
    }
    public vec4u32 wyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, w);
    }
    public vec4u32 wzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, x);
    }
    public vec4u32 wzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, y);
    }
    public vec4u32 wzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, z);
    }
    public vec4u32 wzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, w);
    }
    public vec4u32 wzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, x);
    }
    public vec4u32 wzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, y);
    }
    public vec4u32 wzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, z);
    }
    public vec4u32 wzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, w);
    }
    public vec4u32 wzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, x);
    }
    public vec4u32 wzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, y);
    }
    public vec4u32 wzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, z);
    }
    public vec4u32 wzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, w);
    }
    public vec4u32 wzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, x);
    }
    public vec4u32 wzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, y);
    }
    public vec4u32 wzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, z);
    }
    public vec4u32 wzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, w);
    }
    public vec4u32 wwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, x);
    }
    public vec4u32 wwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, y);
    }
    public vec4u32 wwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, z);
    }
    public vec4u32 wwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, w);
    }
    public vec4u32 wwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, x);
    }
    public vec4u32 wwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, y);
    }
    public vec4u32 wwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, z);
    }
    public vec4u32 wwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, w);
    }
    public vec4u32 wwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, x);
    }
    public vec4u32 wwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, y);
    }
    public vec4u32 wwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, z);
    }
    public vec4u32 wwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, w);
    }
    public vec4u32 wwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, x);
    }
    public vec4u32 wwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, y);
    }
    public vec4u32 wwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, z);
    }
    public vec4u32 wwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, w);
    }


    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u32 operator -(vec4u32 v) => new() { Data = -v.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u32 operator +(vec4u32 l, vec4u32 r) => new() { Data = l.Data + r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u32 operator -(vec4u32 l, vec4u32 r) => new() { Data = l.Data - r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u32 operator *(vec4u32 l, vec4u32 r) => new() { Data = l.Data * r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u32 operator /(vec4u32 l, vec4u32 r) => new() { Data = l.Data / r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u32 operator &(vec4u32 l, vec4u32 r) => new() { Data = l.Data & r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u32 operator |(vec4u32 l, vec4u32 r) => new() { Data = l.Data | r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u32 operator ^(vec4u32 l, vec4u32 r) => new() { Data = l.Data ^ r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u32 operator %(vec4u32 l, vec4u32 r) => new() { Data = Vector128.Create((uint)(l.x % r.x), (uint)(l.y % r.y), (uint)(l.z % r.z), default(uint)) };
}

public partial class DMath
{
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u32 vec4(uint x, uint y, uint z, uint w) => new() { Data = Vector128.Create(x, y, z, w) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u32 vec4(uint e) => new() { Data = Vector128.Create(e) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u32 vec4(uint x, uint y, vec2u32 v) => vec4(x, y, v.x, v.y);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u32 vec4(uint x, vec2u32 v, uint w) => vec4(x, v.x, v.y, w);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u32 vec4(vec2u32 v, uint z, uint w) => vec4(v.x, v.y, z, w);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u32 vec4(uint e, vec3u32 v) => vec4(e, v.x, v.y, v.z);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u32 vec4(vec3u32 v, uint e) => vec4(v.x, v.y, v.z, e);
}


public partial struct vec4f32
{
    internal Vector128<float> Data;

    public float x
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[0];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value, Data[1], Data[2], Data[3]);
        }
    }
    public float y
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[1];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(Data[0], value, Data[2], Data[3]);
        }
    }
    public float z
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[2];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(Data[0], Data[1], value, Data[3]);
        }
    }
    public float w
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[3];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(Data[0], Data[1], Data[2], value);
        }
    }

    public vec2f32 xx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, x);


    }
    public vec2f32 xy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, value.y, z, w);
        }

    }
    public vec2f32 xz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, y, value.y, w);
        }

    }
    public vec2f32 xw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, y, z, value.y);
        }

    }
    public vec2f32 yx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, value.x, z, w);
        }

    }
    public vec2f32 yy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, y);


    }
    public vec2f32 yz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.x, value.y, w);
        }

    }
    public vec2f32 yw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.x, z, value.y);
        }

    }
    public vec2f32 zx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, y, value.x, w);
        }

    }
    public vec2f32 zy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.y, value.x, w);
        }

    }
    public vec2f32 zz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, z);


    }
    public vec2f32 zw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, y, value.x, value.y);
        }

    }
    public vec2f32 wx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, y, z, value.x);
        }

    }
    public vec2f32 wy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.y, z, value.x);
        }

    }
    public vec2f32 wz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, y, value.y, value.x);
        }

    }
    public vec2f32 ww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, w);


    }

    public vec3f32 xxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, x);

    }

    public vec3f32 xxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, y);

    }

    public vec3f32 xxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, z);

    }

    public vec3f32 xxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, w);

    }

    public vec3f32 xyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, x);

    }

    public vec3f32 xyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, y);

    }

    public vec3f32 xyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, value.y, value.z, w);
        }
    }

    public vec3f32 xyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, value.y, z, value.z);
        }
    }

    public vec3f32 xzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, x);

    }

    public vec3f32 xzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, value.z, value.y, w);
        }
    }

    public vec3f32 xzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, z);

    }

    public vec3f32 xzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, y, value.y, value.z);
        }
    }

    public vec3f32 xwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, x);

    }

    public vec3f32 xwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, value.z, z, value.y);
        }
    }

    public vec3f32 xwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.x, y, value.z, value.y);
        }
    }

    public vec3f32 xww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, w);

    }

    public vec3f32 yxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, x);

    }

    public vec3f32 yxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, y);

    }

    public vec3f32 yxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, value.x, value.z, w);
        }
    }

    public vec3f32 yxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, value.x, z, value.z);
        }
    }

    public vec3f32 yyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, x);

    }

    public vec3f32 yyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, y);

    }

    public vec3f32 yyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, z);

    }

    public vec3f32 yyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, w);

    }

    public vec3f32 yzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.z, value.x, value.y, w);
        }
    }

    public vec3f32 yzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, y);

    }

    public vec3f32 yzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, z);

    }

    public vec3f32 yzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.x, value.y, value.z);
        }
    }

    public vec3f32 ywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.z, value.x, z, value.y);
        }
    }

    public vec3f32 ywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, y);

    }

    public vec3f32 ywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.x, value.z, value.y);
        }
    }

    public vec3f32 yww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, w);

    }

    public vec3f32 zxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, x);

    }

    public vec3f32 zxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, value.z, value.x, w);
        }
    }

    public vec3f32 zxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, z);

    }

    public vec3f32 zxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, y, value.x, value.z);
        }
    }

    public vec3f32 zyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.z, value.y, value.x, w);
        }
    }

    public vec3f32 zyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, y);

    }

    public vec3f32 zyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, z);

    }

    public vec3f32 zyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.y, value.x, value.z);
        }
    }

    public vec3f32 zzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, x);

    }

    public vec3f32 zzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, y);

    }

    public vec3f32 zzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, z);

    }

    public vec3f32 zzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, w);

    }

    public vec3f32 zwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.z, y, value.x, value.y);
        }
    }

    public vec3f32 zwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.z, value.x, value.y);
        }
    }

    public vec3f32 zwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, z);

    }

    public vec3f32 zww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, w);

    }

    public vec3f32 wxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, x);

    }

    public vec3f32 wxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, value.z, z, value.x);
        }
    }

    public vec3f32 wxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.y, y, value.z, value.x);
        }
    }

    public vec3f32 wxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, w);

    }

    public vec3f32 wyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.z, value.y, z, value.x);
        }
    }

    public vec3f32 wyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, y);

    }

    public vec3f32 wyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.y, value.z, value.x);
        }
    }

    public vec3f32 wyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, w);

    }

    public vec3f32 wzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(value.z, y, value.y, value.x);
        }
    }

    public vec3f32 wzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector128.Create(x, value.z, value.y, value.x);
        }
    }

    public vec3f32 wzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, z);

    }

    public vec3f32 wzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, w);

    }

    public vec3f32 wwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, x);

    }

    public vec3f32 wwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, y);

    }

    public vec3f32 wwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, z);

    }

    public vec3f32 www
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, w);

    }


    public vec4f32 xxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, x);
    }
    public vec4f32 xxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, y);
    }
    public vec4f32 xxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, z);
    }
    public vec4f32 xxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, w);
    }
    public vec4f32 xxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, x);
    }
    public vec4f32 xxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, y);
    }
    public vec4f32 xxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, z);
    }
    public vec4f32 xxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, w);
    }
    public vec4f32 xxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, x);
    }
    public vec4f32 xxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, y);
    }
    public vec4f32 xxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, z);
    }
    public vec4f32 xxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, w);
    }
    public vec4f32 xxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, x);
    }
    public vec4f32 xxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, y);
    }
    public vec4f32 xxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, z);
    }
    public vec4f32 xxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, w);
    }
    public vec4f32 xyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, x);
    }
    public vec4f32 xyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, y);
    }
    public vec4f32 xyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, z);
    }
    public vec4f32 xyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, w);
    }
    public vec4f32 xyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, x);
    }
    public vec4f32 xyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, y);
    }
    public vec4f32 xyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, z);
    }
    public vec4f32 xyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, w);
    }
    public vec4f32 xyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, x);
    }
    public vec4f32 xyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, y);
    }
    public vec4f32 xyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, z);
    }
    public vec4f32 xyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, w);
    }
    public vec4f32 xywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, x);
    }
    public vec4f32 xywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, y);
    }
    public vec4f32 xywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, z);
    }
    public vec4f32 xyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, w);
    }
    public vec4f32 xzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, x);
    }
    public vec4f32 xzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, y);
    }
    public vec4f32 xzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, z);
    }
    public vec4f32 xzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, w);
    }
    public vec4f32 xzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, x);
    }
    public vec4f32 xzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, y);
    }
    public vec4f32 xzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, z);
    }
    public vec4f32 xzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, w);
    }
    public vec4f32 xzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, x);
    }
    public vec4f32 xzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, y);
    }
    public vec4f32 xzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, z);
    }
    public vec4f32 xzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, w);
    }
    public vec4f32 xzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, x);
    }
    public vec4f32 xzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, y);
    }
    public vec4f32 xzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, z);
    }
    public vec4f32 xzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, w);
    }
    public vec4f32 xwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, x);
    }
    public vec4f32 xwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, y);
    }
    public vec4f32 xwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, z);
    }
    public vec4f32 xwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, w);
    }
    public vec4f32 xwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, x);
    }
    public vec4f32 xwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, y);
    }
    public vec4f32 xwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, z);
    }
    public vec4f32 xwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, w);
    }
    public vec4f32 xwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, x);
    }
    public vec4f32 xwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, y);
    }
    public vec4f32 xwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, z);
    }
    public vec4f32 xwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, w);
    }
    public vec4f32 xwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, x);
    }
    public vec4f32 xwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, y);
    }
    public vec4f32 xwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, z);
    }
    public vec4f32 xwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, w);
    }
    public vec4f32 yxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, x);
    }
    public vec4f32 yxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, y);
    }
    public vec4f32 yxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, z);
    }
    public vec4f32 yxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, w);
    }
    public vec4f32 yxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, x);
    }
    public vec4f32 yxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, y);
    }
    public vec4f32 yxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, z);
    }
    public vec4f32 yxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, w);
    }
    public vec4f32 yxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, x);
    }
    public vec4f32 yxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, y);
    }
    public vec4f32 yxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, z);
    }
    public vec4f32 yxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, w);
    }
    public vec4f32 yxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, x);
    }
    public vec4f32 yxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, y);
    }
    public vec4f32 yxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, z);
    }
    public vec4f32 yxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, w);
    }
    public vec4f32 yyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, x);
    }
    public vec4f32 yyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, y);
    }
    public vec4f32 yyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, z);
    }
    public vec4f32 yyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, w);
    }
    public vec4f32 yyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, x);
    }
    public vec4f32 yyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, y);
    }
    public vec4f32 yyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, z);
    }
    public vec4f32 yyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, w);
    }
    public vec4f32 yyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, x);
    }
    public vec4f32 yyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, y);
    }
    public vec4f32 yyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, z);
    }
    public vec4f32 yyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, w);
    }
    public vec4f32 yywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, x);
    }
    public vec4f32 yywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, y);
    }
    public vec4f32 yywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, z);
    }
    public vec4f32 yyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, w);
    }
    public vec4f32 yzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, x);
    }
    public vec4f32 yzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, y);
    }
    public vec4f32 yzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, z);
    }
    public vec4f32 yzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, w);
    }
    public vec4f32 yzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, x);
    }
    public vec4f32 yzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, y);
    }
    public vec4f32 yzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, z);
    }
    public vec4f32 yzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, w);
    }
    public vec4f32 yzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, x);
    }
    public vec4f32 yzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, y);
    }
    public vec4f32 yzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, z);
    }
    public vec4f32 yzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, w);
    }
    public vec4f32 yzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, x);
    }
    public vec4f32 yzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, y);
    }
    public vec4f32 yzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, z);
    }
    public vec4f32 yzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, w);
    }
    public vec4f32 ywxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, x);
    }
    public vec4f32 ywxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, y);
    }
    public vec4f32 ywxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, z);
    }
    public vec4f32 ywxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, w);
    }
    public vec4f32 ywyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, x);
    }
    public vec4f32 ywyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, y);
    }
    public vec4f32 ywyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, z);
    }
    public vec4f32 ywyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, w);
    }
    public vec4f32 ywzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, x);
    }
    public vec4f32 ywzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, y);
    }
    public vec4f32 ywzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, z);
    }
    public vec4f32 ywzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, w);
    }
    public vec4f32 ywwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, x);
    }
    public vec4f32 ywwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, y);
    }
    public vec4f32 ywwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, z);
    }
    public vec4f32 ywww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, w);
    }
    public vec4f32 zxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, x);
    }
    public vec4f32 zxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, y);
    }
    public vec4f32 zxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, z);
    }
    public vec4f32 zxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, w);
    }
    public vec4f32 zxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, x);
    }
    public vec4f32 zxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, y);
    }
    public vec4f32 zxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, z);
    }
    public vec4f32 zxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, w);
    }
    public vec4f32 zxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, x);
    }
    public vec4f32 zxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, y);
    }
    public vec4f32 zxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, z);
    }
    public vec4f32 zxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, w);
    }
    public vec4f32 zxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, x);
    }
    public vec4f32 zxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, y);
    }
    public vec4f32 zxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, z);
    }
    public vec4f32 zxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, w);
    }
    public vec4f32 zyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, x);
    }
    public vec4f32 zyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, y);
    }
    public vec4f32 zyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, z);
    }
    public vec4f32 zyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, w);
    }
    public vec4f32 zyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, x);
    }
    public vec4f32 zyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, y);
    }
    public vec4f32 zyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, z);
    }
    public vec4f32 zyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, w);
    }
    public vec4f32 zyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, x);
    }
    public vec4f32 zyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, y);
    }
    public vec4f32 zyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, z);
    }
    public vec4f32 zyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, w);
    }
    public vec4f32 zywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, x);
    }
    public vec4f32 zywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, y);
    }
    public vec4f32 zywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, z);
    }
    public vec4f32 zyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, w);
    }
    public vec4f32 zzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, x);
    }
    public vec4f32 zzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, y);
    }
    public vec4f32 zzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, z);
    }
    public vec4f32 zzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, w);
    }
    public vec4f32 zzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, x);
    }
    public vec4f32 zzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, y);
    }
    public vec4f32 zzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, z);
    }
    public vec4f32 zzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, w);
    }
    public vec4f32 zzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, x);
    }
    public vec4f32 zzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, y);
    }
    public vec4f32 zzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, z);
    }
    public vec4f32 zzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, w);
    }
    public vec4f32 zzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, x);
    }
    public vec4f32 zzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, y);
    }
    public vec4f32 zzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, z);
    }
    public vec4f32 zzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, w);
    }
    public vec4f32 zwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, x);
    }
    public vec4f32 zwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, y);
    }
    public vec4f32 zwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, z);
    }
    public vec4f32 zwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, w);
    }
    public vec4f32 zwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, x);
    }
    public vec4f32 zwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, y);
    }
    public vec4f32 zwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, z);
    }
    public vec4f32 zwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, w);
    }
    public vec4f32 zwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, x);
    }
    public vec4f32 zwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, y);
    }
    public vec4f32 zwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, z);
    }
    public vec4f32 zwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, w);
    }
    public vec4f32 zwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, x);
    }
    public vec4f32 zwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, y);
    }
    public vec4f32 zwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, z);
    }
    public vec4f32 zwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, w);
    }
    public vec4f32 wxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, x);
    }
    public vec4f32 wxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, y);
    }
    public vec4f32 wxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, z);
    }
    public vec4f32 wxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, w);
    }
    public vec4f32 wxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, x);
    }
    public vec4f32 wxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, y);
    }
    public vec4f32 wxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, z);
    }
    public vec4f32 wxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, w);
    }
    public vec4f32 wxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, x);
    }
    public vec4f32 wxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, y);
    }
    public vec4f32 wxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, z);
    }
    public vec4f32 wxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, w);
    }
    public vec4f32 wxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, x);
    }
    public vec4f32 wxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, y);
    }
    public vec4f32 wxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, z);
    }
    public vec4f32 wxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, w);
    }
    public vec4f32 wyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, x);
    }
    public vec4f32 wyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, y);
    }
    public vec4f32 wyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, z);
    }
    public vec4f32 wyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, w);
    }
    public vec4f32 wyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, x);
    }
    public vec4f32 wyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, y);
    }
    public vec4f32 wyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, z);
    }
    public vec4f32 wyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, w);
    }
    public vec4f32 wyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, x);
    }
    public vec4f32 wyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, y);
    }
    public vec4f32 wyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, z);
    }
    public vec4f32 wyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, w);
    }
    public vec4f32 wywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, x);
    }
    public vec4f32 wywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, y);
    }
    public vec4f32 wywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, z);
    }
    public vec4f32 wyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, w);
    }
    public vec4f32 wzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, x);
    }
    public vec4f32 wzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, y);
    }
    public vec4f32 wzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, z);
    }
    public vec4f32 wzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, w);
    }
    public vec4f32 wzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, x);
    }
    public vec4f32 wzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, y);
    }
    public vec4f32 wzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, z);
    }
    public vec4f32 wzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, w);
    }
    public vec4f32 wzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, x);
    }
    public vec4f32 wzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, y);
    }
    public vec4f32 wzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, z);
    }
    public vec4f32 wzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, w);
    }
    public vec4f32 wzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, x);
    }
    public vec4f32 wzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, y);
    }
    public vec4f32 wzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, z);
    }
    public vec4f32 wzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, w);
    }
    public vec4f32 wwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, x);
    }
    public vec4f32 wwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, y);
    }
    public vec4f32 wwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, z);
    }
    public vec4f32 wwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, w);
    }
    public vec4f32 wwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, x);
    }
    public vec4f32 wwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, y);
    }
    public vec4f32 wwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, z);
    }
    public vec4f32 wwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, w);
    }
    public vec4f32 wwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, x);
    }
    public vec4f32 wwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, y);
    }
    public vec4f32 wwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, z);
    }
    public vec4f32 wwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, w);
    }
    public vec4f32 wwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, x);
    }
    public vec4f32 wwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, y);
    }
    public vec4f32 wwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, z);
    }
    public vec4f32 wwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, w);
    }


    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f32 operator -(vec4f32 v) => new() { Data = -v.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f32 operator +(vec4f32 l, vec4f32 r) => new() { Data = l.Data + r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f32 operator -(vec4f32 l, vec4f32 r) => new() { Data = l.Data - r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f32 operator *(vec4f32 l, vec4f32 r) => new() { Data = l.Data * r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f32 operator /(vec4f32 l, vec4f32 r) => new() { Data = l.Data / r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f32 operator &(vec4f32 l, vec4f32 r) => new() { Data = l.Data & r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f32 operator |(vec4f32 l, vec4f32 r) => new() { Data = l.Data | r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f32 operator ^(vec4f32 l, vec4f32 r) => new() { Data = l.Data ^ r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f32 operator %(vec4f32 l, vec4f32 r) => new() { Data = Vector128.Create((float)(l.x % r.x), (float)(l.y % r.y), (float)(l.z % r.z), default(float)) };
}

public partial class DMath
{
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f32 vec4(float x, float y, float z, float w) => new() { Data = Vector128.Create(x, y, z, w) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f32 vec4(float e) => new() { Data = Vector128.Create(e) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f32 vec4(float x, float y, vec2f32 v) => vec4(x, y, v.x, v.y);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f32 vec4(float x, vec2f32 v, float w) => vec4(x, v.x, v.y, w);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f32 vec4(vec2f32 v, float z, float w) => vec4(v.x, v.y, z, w);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f32 vec4(float e, vec3f32 v) => vec4(e, v.x, v.y, v.z);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f32 vec4(vec3f32 v, float e) => vec4(v.x, v.y, v.z, e);
}

// 64-bit scalar vec types

public partial struct vec4i64
{
    internal Vector256<long> Data;

    public long x
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[0];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value, Data[1], Data[2], Data[3]);
        }
    }
    public long y
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[1];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(Data[0], value, Data[2], Data[3]);
        }
    }
    public long z
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[2];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(Data[0], Data[1], value, Data[3]);
        }
    }
    public long w
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[3];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(Data[0], Data[1], Data[2], value);
        }
    }

    public vec2i64 xx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, x);


    }
    public vec2i64 xy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, value.y, z, w);
        }

    }
    public vec2i64 xz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, y, value.y, w);
        }

    }
    public vec2i64 xw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, y, z, value.y);
        }

    }
    public vec2i64 yx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, value.x, z, w);
        }

    }
    public vec2i64 yy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, y);


    }
    public vec2i64 yz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.x, value.y, w);
        }

    }
    public vec2i64 yw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.x, z, value.y);
        }

    }
    public vec2i64 zx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, y, value.x, w);
        }

    }
    public vec2i64 zy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.y, value.x, w);
        }

    }
    public vec2i64 zz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, z);


    }
    public vec2i64 zw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, y, value.x, value.y);
        }

    }
    public vec2i64 wx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, y, z, value.x);
        }

    }
    public vec2i64 wy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.y, z, value.x);
        }

    }
    public vec2i64 wz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, y, value.y, value.x);
        }

    }
    public vec2i64 ww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, w);


    }

    public vec3i64 xxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, x);

    }

    public vec3i64 xxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, y);

    }

    public vec3i64 xxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, z);

    }

    public vec3i64 xxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, w);

    }

    public vec3i64 xyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, x);

    }

    public vec3i64 xyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, y);

    }

    public vec3i64 xyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, value.y, value.z, w);
        }
    }

    public vec3i64 xyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, value.y, z, value.z);
        }
    }

    public vec3i64 xzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, x);

    }

    public vec3i64 xzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, value.z, value.y, w);
        }
    }

    public vec3i64 xzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, z);

    }

    public vec3i64 xzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, y, value.y, value.z);
        }
    }

    public vec3i64 xwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, x);

    }

    public vec3i64 xwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, value.z, z, value.y);
        }
    }

    public vec3i64 xwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, y, value.z, value.y);
        }
    }

    public vec3i64 xww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, w);

    }

    public vec3i64 yxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, x);

    }

    public vec3i64 yxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, y);

    }

    public vec3i64 yxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, value.x, value.z, w);
        }
    }

    public vec3i64 yxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, value.x, z, value.z);
        }
    }

    public vec3i64 yyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, x);

    }

    public vec3i64 yyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, y);

    }

    public vec3i64 yyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, z);

    }

    public vec3i64 yyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, w);

    }

    public vec3i64 yzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.z, value.x, value.y, w);
        }
    }

    public vec3i64 yzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, y);

    }

    public vec3i64 yzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, z);

    }

    public vec3i64 yzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.x, value.y, value.z);
        }
    }

    public vec3i64 ywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.z, value.x, z, value.y);
        }
    }

    public vec3i64 ywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, y);

    }

    public vec3i64 ywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.x, value.z, value.y);
        }
    }

    public vec3i64 yww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, w);

    }

    public vec3i64 zxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, x);

    }

    public vec3i64 zxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, value.z, value.x, w);
        }
    }

    public vec3i64 zxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, z);

    }

    public vec3i64 zxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, y, value.x, value.z);
        }
    }

    public vec3i64 zyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.z, value.y, value.x, w);
        }
    }

    public vec3i64 zyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, y);

    }

    public vec3i64 zyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, z);

    }

    public vec3i64 zyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.y, value.x, value.z);
        }
    }

    public vec3i64 zzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, x);

    }

    public vec3i64 zzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, y);

    }

    public vec3i64 zzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, z);

    }

    public vec3i64 zzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, w);

    }

    public vec3i64 zwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.z, y, value.x, value.y);
        }
    }

    public vec3i64 zwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.z, value.x, value.y);
        }
    }

    public vec3i64 zwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, z);

    }

    public vec3i64 zww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, w);

    }

    public vec3i64 wxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, x);

    }

    public vec3i64 wxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, value.z, z, value.x);
        }
    }

    public vec3i64 wxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, y, value.z, value.x);
        }
    }

    public vec3i64 wxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, w);

    }

    public vec3i64 wyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.z, value.y, z, value.x);
        }
    }

    public vec3i64 wyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, y);

    }

    public vec3i64 wyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.y, value.z, value.x);
        }
    }

    public vec3i64 wyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, w);

    }

    public vec3i64 wzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.z, y, value.y, value.x);
        }
    }

    public vec3i64 wzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.z, value.y, value.x);
        }
    }

    public vec3i64 wzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, z);

    }

    public vec3i64 wzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, w);

    }

    public vec3i64 wwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, x);

    }

    public vec3i64 wwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, y);

    }

    public vec3i64 wwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, z);

    }

    public vec3i64 www
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, w);

    }


    public vec4i64 xxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, x);
    }
    public vec4i64 xxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, y);
    }
    public vec4i64 xxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, z);
    }
    public vec4i64 xxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, w);
    }
    public vec4i64 xxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, x);
    }
    public vec4i64 xxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, y);
    }
    public vec4i64 xxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, z);
    }
    public vec4i64 xxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, w);
    }
    public vec4i64 xxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, x);
    }
    public vec4i64 xxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, y);
    }
    public vec4i64 xxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, z);
    }
    public vec4i64 xxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, w);
    }
    public vec4i64 xxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, x);
    }
    public vec4i64 xxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, y);
    }
    public vec4i64 xxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, z);
    }
    public vec4i64 xxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, w);
    }
    public vec4i64 xyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, x);
    }
    public vec4i64 xyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, y);
    }
    public vec4i64 xyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, z);
    }
    public vec4i64 xyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, w);
    }
    public vec4i64 xyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, x);
    }
    public vec4i64 xyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, y);
    }
    public vec4i64 xyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, z);
    }
    public vec4i64 xyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, w);
    }
    public vec4i64 xyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, x);
    }
    public vec4i64 xyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, y);
    }
    public vec4i64 xyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, z);
    }
    public vec4i64 xyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, w);
    }
    public vec4i64 xywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, x);
    }
    public vec4i64 xywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, y);
    }
    public vec4i64 xywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, z);
    }
    public vec4i64 xyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, w);
    }
    public vec4i64 xzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, x);
    }
    public vec4i64 xzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, y);
    }
    public vec4i64 xzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, z);
    }
    public vec4i64 xzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, w);
    }
    public vec4i64 xzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, x);
    }
    public vec4i64 xzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, y);
    }
    public vec4i64 xzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, z);
    }
    public vec4i64 xzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, w);
    }
    public vec4i64 xzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, x);
    }
    public vec4i64 xzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, y);
    }
    public vec4i64 xzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, z);
    }
    public vec4i64 xzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, w);
    }
    public vec4i64 xzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, x);
    }
    public vec4i64 xzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, y);
    }
    public vec4i64 xzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, z);
    }
    public vec4i64 xzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, w);
    }
    public vec4i64 xwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, x);
    }
    public vec4i64 xwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, y);
    }
    public vec4i64 xwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, z);
    }
    public vec4i64 xwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, w);
    }
    public vec4i64 xwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, x);
    }
    public vec4i64 xwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, y);
    }
    public vec4i64 xwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, z);
    }
    public vec4i64 xwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, w);
    }
    public vec4i64 xwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, x);
    }
    public vec4i64 xwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, y);
    }
    public vec4i64 xwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, z);
    }
    public vec4i64 xwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, w);
    }
    public vec4i64 xwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, x);
    }
    public vec4i64 xwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, y);
    }
    public vec4i64 xwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, z);
    }
    public vec4i64 xwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, w);
    }
    public vec4i64 yxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, x);
    }
    public vec4i64 yxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, y);
    }
    public vec4i64 yxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, z);
    }
    public vec4i64 yxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, w);
    }
    public vec4i64 yxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, x);
    }
    public vec4i64 yxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, y);
    }
    public vec4i64 yxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, z);
    }
    public vec4i64 yxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, w);
    }
    public vec4i64 yxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, x);
    }
    public vec4i64 yxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, y);
    }
    public vec4i64 yxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, z);
    }
    public vec4i64 yxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, w);
    }
    public vec4i64 yxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, x);
    }
    public vec4i64 yxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, y);
    }
    public vec4i64 yxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, z);
    }
    public vec4i64 yxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, w);
    }
    public vec4i64 yyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, x);
    }
    public vec4i64 yyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, y);
    }
    public vec4i64 yyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, z);
    }
    public vec4i64 yyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, w);
    }
    public vec4i64 yyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, x);
    }
    public vec4i64 yyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, y);
    }
    public vec4i64 yyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, z);
    }
    public vec4i64 yyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, w);
    }
    public vec4i64 yyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, x);
    }
    public vec4i64 yyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, y);
    }
    public vec4i64 yyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, z);
    }
    public vec4i64 yyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, w);
    }
    public vec4i64 yywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, x);
    }
    public vec4i64 yywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, y);
    }
    public vec4i64 yywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, z);
    }
    public vec4i64 yyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, w);
    }
    public vec4i64 yzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, x);
    }
    public vec4i64 yzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, y);
    }
    public vec4i64 yzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, z);
    }
    public vec4i64 yzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, w);
    }
    public vec4i64 yzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, x);
    }
    public vec4i64 yzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, y);
    }
    public vec4i64 yzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, z);
    }
    public vec4i64 yzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, w);
    }
    public vec4i64 yzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, x);
    }
    public vec4i64 yzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, y);
    }
    public vec4i64 yzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, z);
    }
    public vec4i64 yzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, w);
    }
    public vec4i64 yzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, x);
    }
    public vec4i64 yzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, y);
    }
    public vec4i64 yzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, z);
    }
    public vec4i64 yzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, w);
    }
    public vec4i64 ywxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, x);
    }
    public vec4i64 ywxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, y);
    }
    public vec4i64 ywxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, z);
    }
    public vec4i64 ywxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, w);
    }
    public vec4i64 ywyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, x);
    }
    public vec4i64 ywyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, y);
    }
    public vec4i64 ywyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, z);
    }
    public vec4i64 ywyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, w);
    }
    public vec4i64 ywzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, x);
    }
    public vec4i64 ywzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, y);
    }
    public vec4i64 ywzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, z);
    }
    public vec4i64 ywzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, w);
    }
    public vec4i64 ywwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, x);
    }
    public vec4i64 ywwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, y);
    }
    public vec4i64 ywwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, z);
    }
    public vec4i64 ywww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, w);
    }
    public vec4i64 zxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, x);
    }
    public vec4i64 zxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, y);
    }
    public vec4i64 zxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, z);
    }
    public vec4i64 zxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, w);
    }
    public vec4i64 zxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, x);
    }
    public vec4i64 zxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, y);
    }
    public vec4i64 zxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, z);
    }
    public vec4i64 zxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, w);
    }
    public vec4i64 zxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, x);
    }
    public vec4i64 zxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, y);
    }
    public vec4i64 zxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, z);
    }
    public vec4i64 zxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, w);
    }
    public vec4i64 zxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, x);
    }
    public vec4i64 zxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, y);
    }
    public vec4i64 zxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, z);
    }
    public vec4i64 zxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, w);
    }
    public vec4i64 zyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, x);
    }
    public vec4i64 zyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, y);
    }
    public vec4i64 zyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, z);
    }
    public vec4i64 zyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, w);
    }
    public vec4i64 zyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, x);
    }
    public vec4i64 zyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, y);
    }
    public vec4i64 zyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, z);
    }
    public vec4i64 zyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, w);
    }
    public vec4i64 zyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, x);
    }
    public vec4i64 zyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, y);
    }
    public vec4i64 zyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, z);
    }
    public vec4i64 zyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, w);
    }
    public vec4i64 zywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, x);
    }
    public vec4i64 zywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, y);
    }
    public vec4i64 zywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, z);
    }
    public vec4i64 zyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, w);
    }
    public vec4i64 zzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, x);
    }
    public vec4i64 zzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, y);
    }
    public vec4i64 zzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, z);
    }
    public vec4i64 zzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, w);
    }
    public vec4i64 zzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, x);
    }
    public vec4i64 zzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, y);
    }
    public vec4i64 zzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, z);
    }
    public vec4i64 zzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, w);
    }
    public vec4i64 zzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, x);
    }
    public vec4i64 zzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, y);
    }
    public vec4i64 zzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, z);
    }
    public vec4i64 zzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, w);
    }
    public vec4i64 zzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, x);
    }
    public vec4i64 zzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, y);
    }
    public vec4i64 zzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, z);
    }
    public vec4i64 zzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, w);
    }
    public vec4i64 zwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, x);
    }
    public vec4i64 zwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, y);
    }
    public vec4i64 zwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, z);
    }
    public vec4i64 zwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, w);
    }
    public vec4i64 zwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, x);
    }
    public vec4i64 zwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, y);
    }
    public vec4i64 zwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, z);
    }
    public vec4i64 zwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, w);
    }
    public vec4i64 zwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, x);
    }
    public vec4i64 zwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, y);
    }
    public vec4i64 zwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, z);
    }
    public vec4i64 zwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, w);
    }
    public vec4i64 zwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, x);
    }
    public vec4i64 zwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, y);
    }
    public vec4i64 zwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, z);
    }
    public vec4i64 zwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, w);
    }
    public vec4i64 wxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, x);
    }
    public vec4i64 wxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, y);
    }
    public vec4i64 wxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, z);
    }
    public vec4i64 wxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, w);
    }
    public vec4i64 wxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, x);
    }
    public vec4i64 wxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, y);
    }
    public vec4i64 wxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, z);
    }
    public vec4i64 wxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, w);
    }
    public vec4i64 wxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, x);
    }
    public vec4i64 wxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, y);
    }
    public vec4i64 wxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, z);
    }
    public vec4i64 wxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, w);
    }
    public vec4i64 wxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, x);
    }
    public vec4i64 wxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, y);
    }
    public vec4i64 wxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, z);
    }
    public vec4i64 wxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, w);
    }
    public vec4i64 wyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, x);
    }
    public vec4i64 wyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, y);
    }
    public vec4i64 wyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, z);
    }
    public vec4i64 wyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, w);
    }
    public vec4i64 wyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, x);
    }
    public vec4i64 wyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, y);
    }
    public vec4i64 wyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, z);
    }
    public vec4i64 wyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, w);
    }
    public vec4i64 wyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, x);
    }
    public vec4i64 wyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, y);
    }
    public vec4i64 wyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, z);
    }
    public vec4i64 wyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, w);
    }
    public vec4i64 wywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, x);
    }
    public vec4i64 wywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, y);
    }
    public vec4i64 wywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, z);
    }
    public vec4i64 wyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, w);
    }
    public vec4i64 wzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, x);
    }
    public vec4i64 wzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, y);
    }
    public vec4i64 wzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, z);
    }
    public vec4i64 wzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, w);
    }
    public vec4i64 wzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, x);
    }
    public vec4i64 wzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, y);
    }
    public vec4i64 wzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, z);
    }
    public vec4i64 wzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, w);
    }
    public vec4i64 wzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, x);
    }
    public vec4i64 wzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, y);
    }
    public vec4i64 wzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, z);
    }
    public vec4i64 wzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, w);
    }
    public vec4i64 wzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, x);
    }
    public vec4i64 wzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, y);
    }
    public vec4i64 wzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, z);
    }
    public vec4i64 wzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, w);
    }
    public vec4i64 wwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, x);
    }
    public vec4i64 wwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, y);
    }
    public vec4i64 wwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, z);
    }
    public vec4i64 wwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, w);
    }
    public vec4i64 wwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, x);
    }
    public vec4i64 wwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, y);
    }
    public vec4i64 wwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, z);
    }
    public vec4i64 wwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, w);
    }
    public vec4i64 wwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, x);
    }
    public vec4i64 wwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, y);
    }
    public vec4i64 wwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, z);
    }
    public vec4i64 wwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, w);
    }
    public vec4i64 wwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, x);
    }
    public vec4i64 wwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, y);
    }
    public vec4i64 wwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, z);
    }
    public vec4i64 wwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, w);
    }


    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i64 operator -(vec4i64 v) => new() { Data = -v.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i64 operator +(vec4i64 l, vec4i64 r) => new() { Data = l.Data + r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i64 operator -(vec4i64 l, vec4i64 r) => new() { Data = l.Data - r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i64 operator *(vec4i64 l, vec4i64 r) => new() { Data = l.Data * r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i64 operator /(vec4i64 l, vec4i64 r) => new() { Data = l.Data / r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i64 operator &(vec4i64 l, vec4i64 r) => new() { Data = l.Data & r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i64 operator |(vec4i64 l, vec4i64 r) => new() { Data = l.Data | r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i64 operator ^(vec4i64 l, vec4i64 r) => new() { Data = l.Data ^ r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i64 operator %(vec4i64 l, vec4i64 r) => new() { Data = Vector256.Create((long)(l.x % r.x), (long)(l.y % r.y), (long)(l.z % r.z), default(long)) };
}

public partial class DMath
{
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i64 vec4(long x, long y, long z, long w) => new() { Data = Vector256.Create(x, y, z, w) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i64 vec4(long e) => new() { Data = Vector256.Create(e) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i64 vec4(long x, long y, vec2i64 v) => vec4(x, y, v.x, v.y);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i64 vec4(long x, vec2i64 v, long w) => vec4(x, v.x, v.y, w);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i64 vec4(vec2i64 v, long z, long w) => vec4(v.x, v.y, z, w);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i64 vec4(long e, vec3i64 v) => vec4(e, v.x, v.y, v.z);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4i64 vec4(vec3i64 v, long e) => vec4(v.x, v.y, v.z, e);
}


public partial struct vec4u64
{
    internal Vector256<ulong> Data;

    public ulong x
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[0];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value, Data[1], Data[2], Data[3]);
        }
    }
    public ulong y
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[1];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(Data[0], value, Data[2], Data[3]);
        }
    }
    public ulong z
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[2];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(Data[0], Data[1], value, Data[3]);
        }
    }
    public ulong w
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[3];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(Data[0], Data[1], Data[2], value);
        }
    }

    public vec2u64 xx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, x);


    }
    public vec2u64 xy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, value.y, z, w);
        }

    }
    public vec2u64 xz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, y, value.y, w);
        }

    }
    public vec2u64 xw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, y, z, value.y);
        }

    }
    public vec2u64 yx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, value.x, z, w);
        }

    }
    public vec2u64 yy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, y);


    }
    public vec2u64 yz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.x, value.y, w);
        }

    }
    public vec2u64 yw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.x, z, value.y);
        }

    }
    public vec2u64 zx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, y, value.x, w);
        }

    }
    public vec2u64 zy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.y, value.x, w);
        }

    }
    public vec2u64 zz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, z);


    }
    public vec2u64 zw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, y, value.x, value.y);
        }

    }
    public vec2u64 wx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, y, z, value.x);
        }

    }
    public vec2u64 wy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.y, z, value.x);
        }

    }
    public vec2u64 wz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, y, value.y, value.x);
        }

    }
    public vec2u64 ww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, w);


    }

    public vec3u64 xxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, x);

    }

    public vec3u64 xxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, y);

    }

    public vec3u64 xxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, z);

    }

    public vec3u64 xxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, w);

    }

    public vec3u64 xyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, x);

    }

    public vec3u64 xyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, y);

    }

    public vec3u64 xyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, value.y, value.z, w);
        }
    }

    public vec3u64 xyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, value.y, z, value.z);
        }
    }

    public vec3u64 xzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, x);

    }

    public vec3u64 xzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, value.z, value.y, w);
        }
    }

    public vec3u64 xzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, z);

    }

    public vec3u64 xzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, y, value.y, value.z);
        }
    }

    public vec3u64 xwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, x);

    }

    public vec3u64 xwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, value.z, z, value.y);
        }
    }

    public vec3u64 xwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, y, value.z, value.y);
        }
    }

    public vec3u64 xww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, w);

    }

    public vec3u64 yxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, x);

    }

    public vec3u64 yxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, y);

    }

    public vec3u64 yxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, value.x, value.z, w);
        }
    }

    public vec3u64 yxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, value.x, z, value.z);
        }
    }

    public vec3u64 yyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, x);

    }

    public vec3u64 yyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, y);

    }

    public vec3u64 yyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, z);

    }

    public vec3u64 yyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, w);

    }

    public vec3u64 yzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.z, value.x, value.y, w);
        }
    }

    public vec3u64 yzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, y);

    }

    public vec3u64 yzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, z);

    }

    public vec3u64 yzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.x, value.y, value.z);
        }
    }

    public vec3u64 ywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.z, value.x, z, value.y);
        }
    }

    public vec3u64 ywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, y);

    }

    public vec3u64 ywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.x, value.z, value.y);
        }
    }

    public vec3u64 yww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, w);

    }

    public vec3u64 zxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, x);

    }

    public vec3u64 zxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, value.z, value.x, w);
        }
    }

    public vec3u64 zxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, z);

    }

    public vec3u64 zxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, y, value.x, value.z);
        }
    }

    public vec3u64 zyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.z, value.y, value.x, w);
        }
    }

    public vec3u64 zyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, y);

    }

    public vec3u64 zyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, z);

    }

    public vec3u64 zyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.y, value.x, value.z);
        }
    }

    public vec3u64 zzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, x);

    }

    public vec3u64 zzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, y);

    }

    public vec3u64 zzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, z);

    }

    public vec3u64 zzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, w);

    }

    public vec3u64 zwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.z, y, value.x, value.y);
        }
    }

    public vec3u64 zwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.z, value.x, value.y);
        }
    }

    public vec3u64 zwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, z);

    }

    public vec3u64 zww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, w);

    }

    public vec3u64 wxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, x);

    }

    public vec3u64 wxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, value.z, z, value.x);
        }
    }

    public vec3u64 wxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, y, value.z, value.x);
        }
    }

    public vec3u64 wxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, w);

    }

    public vec3u64 wyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.z, value.y, z, value.x);
        }
    }

    public vec3u64 wyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, y);

    }

    public vec3u64 wyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.y, value.z, value.x);
        }
    }

    public vec3u64 wyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, w);

    }

    public vec3u64 wzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.z, y, value.y, value.x);
        }
    }

    public vec3u64 wzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.z, value.y, value.x);
        }
    }

    public vec3u64 wzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, z);

    }

    public vec3u64 wzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, w);

    }

    public vec3u64 wwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, x);

    }

    public vec3u64 wwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, y);

    }

    public vec3u64 wwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, z);

    }

    public vec3u64 www
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, w);

    }


    public vec4u64 xxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, x);
    }
    public vec4u64 xxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, y);
    }
    public vec4u64 xxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, z);
    }
    public vec4u64 xxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, w);
    }
    public vec4u64 xxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, x);
    }
    public vec4u64 xxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, y);
    }
    public vec4u64 xxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, z);
    }
    public vec4u64 xxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, w);
    }
    public vec4u64 xxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, x);
    }
    public vec4u64 xxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, y);
    }
    public vec4u64 xxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, z);
    }
    public vec4u64 xxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, w);
    }
    public vec4u64 xxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, x);
    }
    public vec4u64 xxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, y);
    }
    public vec4u64 xxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, z);
    }
    public vec4u64 xxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, w);
    }
    public vec4u64 xyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, x);
    }
    public vec4u64 xyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, y);
    }
    public vec4u64 xyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, z);
    }
    public vec4u64 xyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, w);
    }
    public vec4u64 xyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, x);
    }
    public vec4u64 xyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, y);
    }
    public vec4u64 xyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, z);
    }
    public vec4u64 xyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, w);
    }
    public vec4u64 xyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, x);
    }
    public vec4u64 xyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, y);
    }
    public vec4u64 xyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, z);
    }
    public vec4u64 xyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, w);
    }
    public vec4u64 xywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, x);
    }
    public vec4u64 xywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, y);
    }
    public vec4u64 xywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, z);
    }
    public vec4u64 xyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, w);
    }
    public vec4u64 xzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, x);
    }
    public vec4u64 xzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, y);
    }
    public vec4u64 xzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, z);
    }
    public vec4u64 xzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, w);
    }
    public vec4u64 xzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, x);
    }
    public vec4u64 xzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, y);
    }
    public vec4u64 xzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, z);
    }
    public vec4u64 xzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, w);
    }
    public vec4u64 xzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, x);
    }
    public vec4u64 xzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, y);
    }
    public vec4u64 xzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, z);
    }
    public vec4u64 xzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, w);
    }
    public vec4u64 xzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, x);
    }
    public vec4u64 xzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, y);
    }
    public vec4u64 xzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, z);
    }
    public vec4u64 xzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, w);
    }
    public vec4u64 xwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, x);
    }
    public vec4u64 xwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, y);
    }
    public vec4u64 xwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, z);
    }
    public vec4u64 xwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, w);
    }
    public vec4u64 xwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, x);
    }
    public vec4u64 xwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, y);
    }
    public vec4u64 xwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, z);
    }
    public vec4u64 xwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, w);
    }
    public vec4u64 xwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, x);
    }
    public vec4u64 xwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, y);
    }
    public vec4u64 xwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, z);
    }
    public vec4u64 xwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, w);
    }
    public vec4u64 xwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, x);
    }
    public vec4u64 xwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, y);
    }
    public vec4u64 xwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, z);
    }
    public vec4u64 xwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, w);
    }
    public vec4u64 yxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, x);
    }
    public vec4u64 yxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, y);
    }
    public vec4u64 yxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, z);
    }
    public vec4u64 yxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, w);
    }
    public vec4u64 yxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, x);
    }
    public vec4u64 yxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, y);
    }
    public vec4u64 yxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, z);
    }
    public vec4u64 yxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, w);
    }
    public vec4u64 yxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, x);
    }
    public vec4u64 yxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, y);
    }
    public vec4u64 yxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, z);
    }
    public vec4u64 yxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, w);
    }
    public vec4u64 yxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, x);
    }
    public vec4u64 yxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, y);
    }
    public vec4u64 yxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, z);
    }
    public vec4u64 yxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, w);
    }
    public vec4u64 yyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, x);
    }
    public vec4u64 yyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, y);
    }
    public vec4u64 yyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, z);
    }
    public vec4u64 yyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, w);
    }
    public vec4u64 yyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, x);
    }
    public vec4u64 yyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, y);
    }
    public vec4u64 yyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, z);
    }
    public vec4u64 yyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, w);
    }
    public vec4u64 yyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, x);
    }
    public vec4u64 yyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, y);
    }
    public vec4u64 yyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, z);
    }
    public vec4u64 yyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, w);
    }
    public vec4u64 yywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, x);
    }
    public vec4u64 yywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, y);
    }
    public vec4u64 yywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, z);
    }
    public vec4u64 yyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, w);
    }
    public vec4u64 yzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, x);
    }
    public vec4u64 yzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, y);
    }
    public vec4u64 yzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, z);
    }
    public vec4u64 yzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, w);
    }
    public vec4u64 yzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, x);
    }
    public vec4u64 yzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, y);
    }
    public vec4u64 yzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, z);
    }
    public vec4u64 yzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, w);
    }
    public vec4u64 yzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, x);
    }
    public vec4u64 yzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, y);
    }
    public vec4u64 yzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, z);
    }
    public vec4u64 yzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, w);
    }
    public vec4u64 yzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, x);
    }
    public vec4u64 yzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, y);
    }
    public vec4u64 yzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, z);
    }
    public vec4u64 yzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, w);
    }
    public vec4u64 ywxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, x);
    }
    public vec4u64 ywxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, y);
    }
    public vec4u64 ywxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, z);
    }
    public vec4u64 ywxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, w);
    }
    public vec4u64 ywyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, x);
    }
    public vec4u64 ywyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, y);
    }
    public vec4u64 ywyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, z);
    }
    public vec4u64 ywyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, w);
    }
    public vec4u64 ywzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, x);
    }
    public vec4u64 ywzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, y);
    }
    public vec4u64 ywzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, z);
    }
    public vec4u64 ywzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, w);
    }
    public vec4u64 ywwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, x);
    }
    public vec4u64 ywwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, y);
    }
    public vec4u64 ywwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, z);
    }
    public vec4u64 ywww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, w);
    }
    public vec4u64 zxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, x);
    }
    public vec4u64 zxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, y);
    }
    public vec4u64 zxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, z);
    }
    public vec4u64 zxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, w);
    }
    public vec4u64 zxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, x);
    }
    public vec4u64 zxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, y);
    }
    public vec4u64 zxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, z);
    }
    public vec4u64 zxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, w);
    }
    public vec4u64 zxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, x);
    }
    public vec4u64 zxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, y);
    }
    public vec4u64 zxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, z);
    }
    public vec4u64 zxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, w);
    }
    public vec4u64 zxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, x);
    }
    public vec4u64 zxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, y);
    }
    public vec4u64 zxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, z);
    }
    public vec4u64 zxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, w);
    }
    public vec4u64 zyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, x);
    }
    public vec4u64 zyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, y);
    }
    public vec4u64 zyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, z);
    }
    public vec4u64 zyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, w);
    }
    public vec4u64 zyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, x);
    }
    public vec4u64 zyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, y);
    }
    public vec4u64 zyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, z);
    }
    public vec4u64 zyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, w);
    }
    public vec4u64 zyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, x);
    }
    public vec4u64 zyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, y);
    }
    public vec4u64 zyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, z);
    }
    public vec4u64 zyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, w);
    }
    public vec4u64 zywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, x);
    }
    public vec4u64 zywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, y);
    }
    public vec4u64 zywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, z);
    }
    public vec4u64 zyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, w);
    }
    public vec4u64 zzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, x);
    }
    public vec4u64 zzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, y);
    }
    public vec4u64 zzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, z);
    }
    public vec4u64 zzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, w);
    }
    public vec4u64 zzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, x);
    }
    public vec4u64 zzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, y);
    }
    public vec4u64 zzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, z);
    }
    public vec4u64 zzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, w);
    }
    public vec4u64 zzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, x);
    }
    public vec4u64 zzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, y);
    }
    public vec4u64 zzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, z);
    }
    public vec4u64 zzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, w);
    }
    public vec4u64 zzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, x);
    }
    public vec4u64 zzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, y);
    }
    public vec4u64 zzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, z);
    }
    public vec4u64 zzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, w);
    }
    public vec4u64 zwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, x);
    }
    public vec4u64 zwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, y);
    }
    public vec4u64 zwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, z);
    }
    public vec4u64 zwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, w);
    }
    public vec4u64 zwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, x);
    }
    public vec4u64 zwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, y);
    }
    public vec4u64 zwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, z);
    }
    public vec4u64 zwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, w);
    }
    public vec4u64 zwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, x);
    }
    public vec4u64 zwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, y);
    }
    public vec4u64 zwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, z);
    }
    public vec4u64 zwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, w);
    }
    public vec4u64 zwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, x);
    }
    public vec4u64 zwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, y);
    }
    public vec4u64 zwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, z);
    }
    public vec4u64 zwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, w);
    }
    public vec4u64 wxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, x);
    }
    public vec4u64 wxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, y);
    }
    public vec4u64 wxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, z);
    }
    public vec4u64 wxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, w);
    }
    public vec4u64 wxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, x);
    }
    public vec4u64 wxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, y);
    }
    public vec4u64 wxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, z);
    }
    public vec4u64 wxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, w);
    }
    public vec4u64 wxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, x);
    }
    public vec4u64 wxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, y);
    }
    public vec4u64 wxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, z);
    }
    public vec4u64 wxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, w);
    }
    public vec4u64 wxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, x);
    }
    public vec4u64 wxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, y);
    }
    public vec4u64 wxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, z);
    }
    public vec4u64 wxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, w);
    }
    public vec4u64 wyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, x);
    }
    public vec4u64 wyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, y);
    }
    public vec4u64 wyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, z);
    }
    public vec4u64 wyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, w);
    }
    public vec4u64 wyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, x);
    }
    public vec4u64 wyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, y);
    }
    public vec4u64 wyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, z);
    }
    public vec4u64 wyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, w);
    }
    public vec4u64 wyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, x);
    }
    public vec4u64 wyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, y);
    }
    public vec4u64 wyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, z);
    }
    public vec4u64 wyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, w);
    }
    public vec4u64 wywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, x);
    }
    public vec4u64 wywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, y);
    }
    public vec4u64 wywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, z);
    }
    public vec4u64 wyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, w);
    }
    public vec4u64 wzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, x);
    }
    public vec4u64 wzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, y);
    }
    public vec4u64 wzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, z);
    }
    public vec4u64 wzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, w);
    }
    public vec4u64 wzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, x);
    }
    public vec4u64 wzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, y);
    }
    public vec4u64 wzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, z);
    }
    public vec4u64 wzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, w);
    }
    public vec4u64 wzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, x);
    }
    public vec4u64 wzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, y);
    }
    public vec4u64 wzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, z);
    }
    public vec4u64 wzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, w);
    }
    public vec4u64 wzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, x);
    }
    public vec4u64 wzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, y);
    }
    public vec4u64 wzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, z);
    }
    public vec4u64 wzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, w);
    }
    public vec4u64 wwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, x);
    }
    public vec4u64 wwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, y);
    }
    public vec4u64 wwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, z);
    }
    public vec4u64 wwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, w);
    }
    public vec4u64 wwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, x);
    }
    public vec4u64 wwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, y);
    }
    public vec4u64 wwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, z);
    }
    public vec4u64 wwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, w);
    }
    public vec4u64 wwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, x);
    }
    public vec4u64 wwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, y);
    }
    public vec4u64 wwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, z);
    }
    public vec4u64 wwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, w);
    }
    public vec4u64 wwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, x);
    }
    public vec4u64 wwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, y);
    }
    public vec4u64 wwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, z);
    }
    public vec4u64 wwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, w);
    }


    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u64 operator -(vec4u64 v) => new() { Data = -v.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u64 operator +(vec4u64 l, vec4u64 r) => new() { Data = l.Data + r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u64 operator -(vec4u64 l, vec4u64 r) => new() { Data = l.Data - r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u64 operator *(vec4u64 l, vec4u64 r) => new() { Data = l.Data * r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u64 operator /(vec4u64 l, vec4u64 r) => new() { Data = l.Data / r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u64 operator &(vec4u64 l, vec4u64 r) => new() { Data = l.Data & r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u64 operator |(vec4u64 l, vec4u64 r) => new() { Data = l.Data | r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u64 operator ^(vec4u64 l, vec4u64 r) => new() { Data = l.Data ^ r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u64 operator %(vec4u64 l, vec4u64 r) => new() { Data = Vector256.Create((ulong)(l.x % r.x), (ulong)(l.y % r.y), (ulong)(l.z % r.z), default(ulong)) };
}

public partial class DMath
{
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u64 vec4(ulong x, ulong y, ulong z, ulong w) => new() { Data = Vector256.Create(x, y, z, w) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u64 vec4(ulong e) => new() { Data = Vector256.Create(e) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u64 vec4(ulong x, ulong y, vec2u64 v) => vec4(x, y, v.x, v.y);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u64 vec4(ulong x, vec2u64 v, ulong w) => vec4(x, v.x, v.y, w);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u64 vec4(vec2u64 v, ulong z, ulong w) => vec4(v.x, v.y, z, w);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u64 vec4(ulong e, vec3u64 v) => vec4(e, v.x, v.y, v.z);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4u64 vec4(vec3u64 v, ulong e) => vec4(v.x, v.y, v.z, e);
}


public partial struct vec4f64
{
    internal Vector256<double> Data;

    public double x
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[0];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value, Data[1], Data[2], Data[3]);
        }
    }
    public double y
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[1];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(Data[0], value, Data[2], Data[3]);
        }
    }
    public double z
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[2];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(Data[0], Data[1], value, Data[3]);
        }
    }
    public double w
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[3];

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(Data[0], Data[1], Data[2], value);
        }
    }

    public vec2f64 xx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, x);


    }
    public vec2f64 xy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, value.y, z, w);
        }

    }
    public vec2f64 xz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, y, value.y, w);
        }

    }
    public vec2f64 xw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, y, z, value.y);
        }

    }
    public vec2f64 yx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, value.x, z, w);
        }

    }
    public vec2f64 yy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, y);


    }
    public vec2f64 yz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.x, value.y, w);
        }

    }
    public vec2f64 yw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.x, z, value.y);
        }

    }
    public vec2f64 zx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, y, value.x, w);
        }

    }
    public vec2f64 zy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.y, value.x, w);
        }

    }
    public vec2f64 zz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, z);


    }
    public vec2f64 zw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, y, value.x, value.y);
        }

    }
    public vec2f64 wx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, y, z, value.x);
        }

    }
    public vec2f64 wy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.y, z, value.x);
        }

    }
    public vec2f64 wz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, y, value.y, value.x);
        }

    }
    public vec2f64 ww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(w, w);


    }

    public vec3f64 xxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, x);

    }

    public vec3f64 xxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, y);

    }

    public vec3f64 xxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, z);

    }

    public vec3f64 xxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, w);

    }

    public vec3f64 xyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, x);

    }

    public vec3f64 xyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, y);

    }

    public vec3f64 xyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, value.y, value.z, w);
        }
    }

    public vec3f64 xyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, value.y, z, value.z);
        }
    }

    public vec3f64 xzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, x);

    }

    public vec3f64 xzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, value.z, value.y, w);
        }
    }

    public vec3f64 xzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, z);

    }

    public vec3f64 xzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, y, value.y, value.z);
        }
    }

    public vec3f64 xwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, x);

    }

    public vec3f64 xwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, value.z, z, value.y);
        }
    }

    public vec3f64 xwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.x, y, value.z, value.y);
        }
    }

    public vec3f64 xww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, w, w);

    }

    public vec3f64 yxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, x);

    }

    public vec3f64 yxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, y);

    }

    public vec3f64 yxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, value.x, value.z, w);
        }
    }

    public vec3f64 yxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, value.x, z, value.z);
        }
    }

    public vec3f64 yyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, x);

    }

    public vec3f64 yyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, y);

    }

    public vec3f64 yyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, z);

    }

    public vec3f64 yyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, w);

    }

    public vec3f64 yzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.z, value.x, value.y, w);
        }
    }

    public vec3f64 yzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, y);

    }

    public vec3f64 yzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, z);

    }

    public vec3f64 yzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.x, value.y, value.z);
        }
    }

    public vec3f64 ywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.z, value.x, z, value.y);
        }
    }

    public vec3f64 ywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, y);

    }

    public vec3f64 ywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.x, value.z, value.y);
        }
    }

    public vec3f64 yww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, w, w);

    }

    public vec3f64 zxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, x);

    }

    public vec3f64 zxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, value.z, value.x, w);
        }
    }

    public vec3f64 zxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, z);

    }

    public vec3f64 zxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, y, value.x, value.z);
        }
    }

    public vec3f64 zyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.z, value.y, value.x, w);
        }
    }

    public vec3f64 zyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, y);

    }

    public vec3f64 zyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, z);

    }

    public vec3f64 zyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, w);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.y, value.x, value.z);
        }
    }

    public vec3f64 zzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, x);

    }

    public vec3f64 zzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, y);

    }

    public vec3f64 zzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, z);

    }

    public vec3f64 zzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, w);

    }

    public vec3f64 zwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.z, y, value.x, value.y);
        }
    }

    public vec3f64 zwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.z, value.x, value.y);
        }
    }

    public vec3f64 zwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, z);

    }

    public vec3f64 zww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, w, w);

    }

    public vec3f64 wxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, x);

    }

    public vec3f64 wxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, value.z, z, value.x);
        }
    }

    public vec3f64 wxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.y, y, value.z, value.x);
        }
    }

    public vec3f64 wxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, x, w);

    }

    public vec3f64 wyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.z, value.y, z, value.x);
        }
    }

    public vec3f64 wyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, y);

    }

    public vec3f64 wyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, z);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.y, value.z, value.x);
        }
    }

    public vec3f64 wyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, y, w);

    }

    public vec3f64 wzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, x);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(value.z, y, value.y, value.x);
        }
    }

    public vec3f64 wzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, y);

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set
        {
            Data = Vector256.Create(x, value.z, value.y, value.x);
        }
    }

    public vec3f64 wzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, z);

    }

    public vec3f64 wzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, z, w);

    }

    public vec3f64 wwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, x);

    }

    public vec3f64 wwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, y);

    }

    public vec3f64 wwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, z);

    }

    public vec3f64 www
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(w, w, w);

    }


    public vec4f64 xxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, x);
    }
    public vec4f64 xxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, y);
    }
    public vec4f64 xxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, z);
    }
    public vec4f64 xxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, w);
    }
    public vec4f64 xxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, x);
    }
    public vec4f64 xxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, y);
    }
    public vec4f64 xxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, z);
    }
    public vec4f64 xxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, w);
    }
    public vec4f64 xxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, x);
    }
    public vec4f64 xxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, y);
    }
    public vec4f64 xxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, z);
    }
    public vec4f64 xxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, w);
    }
    public vec4f64 xxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, x);
    }
    public vec4f64 xxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, y);
    }
    public vec4f64 xxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, z);
    }
    public vec4f64 xxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, w, w);
    }
    public vec4f64 xyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, x);
    }
    public vec4f64 xyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, y);
    }
    public vec4f64 xyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, z);
    }
    public vec4f64 xyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, w);
    }
    public vec4f64 xyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, x);
    }
    public vec4f64 xyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, y);
    }
    public vec4f64 xyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, z);
    }
    public vec4f64 xyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, w);
    }
    public vec4f64 xyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, x);
    }
    public vec4f64 xyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, y);
    }
    public vec4f64 xyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, z);
    }
    public vec4f64 xyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, w);
    }
    public vec4f64 xywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, x);
    }
    public vec4f64 xywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, y);
    }
    public vec4f64 xywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, z);
    }
    public vec4f64 xyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, w, w);
    }
    public vec4f64 xzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, x);
    }
    public vec4f64 xzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, y);
    }
    public vec4f64 xzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, z);
    }
    public vec4f64 xzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, w);
    }
    public vec4f64 xzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, x);
    }
    public vec4f64 xzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, y);
    }
    public vec4f64 xzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, z);
    }
    public vec4f64 xzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, w);
    }
    public vec4f64 xzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, x);
    }
    public vec4f64 xzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, y);
    }
    public vec4f64 xzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, z);
    }
    public vec4f64 xzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, w);
    }
    public vec4f64 xzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, x);
    }
    public vec4f64 xzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, y);
    }
    public vec4f64 xzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, z);
    }
    public vec4f64 xzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, w, w);
    }
    public vec4f64 xwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, x);
    }
    public vec4f64 xwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, y);
    }
    public vec4f64 xwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, z);
    }
    public vec4f64 xwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, x, w);
    }
    public vec4f64 xwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, x);
    }
    public vec4f64 xwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, y);
    }
    public vec4f64 xwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, z);
    }
    public vec4f64 xwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, y, w);
    }
    public vec4f64 xwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, x);
    }
    public vec4f64 xwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, y);
    }
    public vec4f64 xwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, z);
    }
    public vec4f64 xwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, z, w);
    }
    public vec4f64 xwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, x);
    }
    public vec4f64 xwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, y);
    }
    public vec4f64 xwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, z);
    }
    public vec4f64 xwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, w, w, w);
    }
    public vec4f64 yxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, x);
    }
    public vec4f64 yxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, y);
    }
    public vec4f64 yxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, z);
    }
    public vec4f64 yxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, w);
    }
    public vec4f64 yxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, x);
    }
    public vec4f64 yxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, y);
    }
    public vec4f64 yxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, z);
    }
    public vec4f64 yxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, w);
    }
    public vec4f64 yxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, x);
    }
    public vec4f64 yxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, y);
    }
    public vec4f64 yxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, z);
    }
    public vec4f64 yxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, w);
    }
    public vec4f64 yxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, x);
    }
    public vec4f64 yxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, y);
    }
    public vec4f64 yxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, z);
    }
    public vec4f64 yxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, w, w);
    }
    public vec4f64 yyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, x);
    }
    public vec4f64 yyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, y);
    }
    public vec4f64 yyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, z);
    }
    public vec4f64 yyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, w);
    }
    public vec4f64 yyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, x);
    }
    public vec4f64 yyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, y);
    }
    public vec4f64 yyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, z);
    }
    public vec4f64 yyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, w);
    }
    public vec4f64 yyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, x);
    }
    public vec4f64 yyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, y);
    }
    public vec4f64 yyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, z);
    }
    public vec4f64 yyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, w);
    }
    public vec4f64 yywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, x);
    }
    public vec4f64 yywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, y);
    }
    public vec4f64 yywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, z);
    }
    public vec4f64 yyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, w, w);
    }
    public vec4f64 yzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, x);
    }
    public vec4f64 yzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, y);
    }
    public vec4f64 yzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, z);
    }
    public vec4f64 yzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, w);
    }
    public vec4f64 yzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, x);
    }
    public vec4f64 yzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, y);
    }
    public vec4f64 yzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, z);
    }
    public vec4f64 yzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, w);
    }
    public vec4f64 yzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, x);
    }
    public vec4f64 yzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, y);
    }
    public vec4f64 yzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, z);
    }
    public vec4f64 yzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, w);
    }
    public vec4f64 yzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, x);
    }
    public vec4f64 yzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, y);
    }
    public vec4f64 yzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, z);
    }
    public vec4f64 yzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, w, w);
    }
    public vec4f64 ywxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, x);
    }
    public vec4f64 ywxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, y);
    }
    public vec4f64 ywxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, z);
    }
    public vec4f64 ywxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, x, w);
    }
    public vec4f64 ywyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, x);
    }
    public vec4f64 ywyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, y);
    }
    public vec4f64 ywyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, z);
    }
    public vec4f64 ywyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, y, w);
    }
    public vec4f64 ywzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, x);
    }
    public vec4f64 ywzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, y);
    }
    public vec4f64 ywzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, z);
    }
    public vec4f64 ywzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, z, w);
    }
    public vec4f64 ywwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, x);
    }
    public vec4f64 ywwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, y);
    }
    public vec4f64 ywwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, z);
    }
    public vec4f64 ywww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, w, w, w);
    }
    public vec4f64 zxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, x);
    }
    public vec4f64 zxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, y);
    }
    public vec4f64 zxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, z);
    }
    public vec4f64 zxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, w);
    }
    public vec4f64 zxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, x);
    }
    public vec4f64 zxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, y);
    }
    public vec4f64 zxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, z);
    }
    public vec4f64 zxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, w);
    }
    public vec4f64 zxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, x);
    }
    public vec4f64 zxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, y);
    }
    public vec4f64 zxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, z);
    }
    public vec4f64 zxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, w);
    }
    public vec4f64 zxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, x);
    }
    public vec4f64 zxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, y);
    }
    public vec4f64 zxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, z);
    }
    public vec4f64 zxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, w, w);
    }
    public vec4f64 zyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, x);
    }
    public vec4f64 zyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, y);
    }
    public vec4f64 zyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, z);
    }
    public vec4f64 zyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, w);
    }
    public vec4f64 zyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, x);
    }
    public vec4f64 zyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, y);
    }
    public vec4f64 zyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, z);
    }
    public vec4f64 zyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, w);
    }
    public vec4f64 zyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, x);
    }
    public vec4f64 zyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, y);
    }
    public vec4f64 zyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, z);
    }
    public vec4f64 zyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, w);
    }
    public vec4f64 zywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, x);
    }
    public vec4f64 zywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, y);
    }
    public vec4f64 zywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, z);
    }
    public vec4f64 zyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, w, w);
    }
    public vec4f64 zzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, x);
    }
    public vec4f64 zzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, y);
    }
    public vec4f64 zzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, z);
    }
    public vec4f64 zzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, w);
    }
    public vec4f64 zzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, x);
    }
    public vec4f64 zzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, y);
    }
    public vec4f64 zzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, z);
    }
    public vec4f64 zzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, w);
    }
    public vec4f64 zzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, x);
    }
    public vec4f64 zzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, y);
    }
    public vec4f64 zzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, z);
    }
    public vec4f64 zzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, w);
    }
    public vec4f64 zzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, x);
    }
    public vec4f64 zzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, y);
    }
    public vec4f64 zzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, z);
    }
    public vec4f64 zzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, w, w);
    }
    public vec4f64 zwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, x);
    }
    public vec4f64 zwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, y);
    }
    public vec4f64 zwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, z);
    }
    public vec4f64 zwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, x, w);
    }
    public vec4f64 zwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, x);
    }
    public vec4f64 zwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, y);
    }
    public vec4f64 zwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, z);
    }
    public vec4f64 zwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, y, w);
    }
    public vec4f64 zwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, x);
    }
    public vec4f64 zwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, y);
    }
    public vec4f64 zwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, z);
    }
    public vec4f64 zwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, z, w);
    }
    public vec4f64 zwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, x);
    }
    public vec4f64 zwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, y);
    }
    public vec4f64 zwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, z);
    }
    public vec4f64 zwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, w, w, w);
    }
    public vec4f64 wxxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, x);
    }
    public vec4f64 wxxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, y);
    }
    public vec4f64 wxxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, z);
    }
    public vec4f64 wxxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, x, w);
    }
    public vec4f64 wxyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, x);
    }
    public vec4f64 wxyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, y);
    }
    public vec4f64 wxyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, z);
    }
    public vec4f64 wxyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, y, w);
    }
    public vec4f64 wxzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, x);
    }
    public vec4f64 wxzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, y);
    }
    public vec4f64 wxzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, z);
    }
    public vec4f64 wxzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, z, w);
    }
    public vec4f64 wxwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, x);
    }
    public vec4f64 wxwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, y);
    }
    public vec4f64 wxwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, z);
    }
    public vec4f64 wxww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, x, w, w);
    }
    public vec4f64 wyxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, x);
    }
    public vec4f64 wyxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, y);
    }
    public vec4f64 wyxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, z);
    }
    public vec4f64 wyxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, x, w);
    }
    public vec4f64 wyyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, x);
    }
    public vec4f64 wyyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, y);
    }
    public vec4f64 wyyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, z);
    }
    public vec4f64 wyyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, y, w);
    }
    public vec4f64 wyzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, x);
    }
    public vec4f64 wyzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, y);
    }
    public vec4f64 wyzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, z);
    }
    public vec4f64 wyzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, z, w);
    }
    public vec4f64 wywx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, x);
    }
    public vec4f64 wywy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, y);
    }
    public vec4f64 wywz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, z);
    }
    public vec4f64 wyww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, y, w, w);
    }
    public vec4f64 wzxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, x);
    }
    public vec4f64 wzxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, y);
    }
    public vec4f64 wzxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, z);
    }
    public vec4f64 wzxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, x, w);
    }
    public vec4f64 wzyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, x);
    }
    public vec4f64 wzyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, y);
    }
    public vec4f64 wzyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, z);
    }
    public vec4f64 wzyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, y, w);
    }
    public vec4f64 wzzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, x);
    }
    public vec4f64 wzzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, y);
    }
    public vec4f64 wzzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, z);
    }
    public vec4f64 wzzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, z, w);
    }
    public vec4f64 wzwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, x);
    }
    public vec4f64 wzwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, y);
    }
    public vec4f64 wzwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, z);
    }
    public vec4f64 wzww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, z, w, w);
    }
    public vec4f64 wwxx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, x);
    }
    public vec4f64 wwxy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, y);
    }
    public vec4f64 wwxz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, z);
    }
    public vec4f64 wwxw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, x, w);
    }
    public vec4f64 wwyx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, x);
    }
    public vec4f64 wwyy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, y);
    }
    public vec4f64 wwyz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, z);
    }
    public vec4f64 wwyw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, y, w);
    }
    public vec4f64 wwzx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, x);
    }
    public vec4f64 wwzy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, y);
    }
    public vec4f64 wwzz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, z);
    }
    public vec4f64 wwzw
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, z, w);
    }
    public vec4f64 wwwx
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, x);
    }
    public vec4f64 wwwy
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, y);
    }
    public vec4f64 wwwz
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, z);
    }
    public vec4f64 wwww
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(w, w, w, w);
    }


    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f64 operator -(vec4f64 v) => new() { Data = -v.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f64 operator +(vec4f64 l, vec4f64 r) => new() { Data = l.Data + r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f64 operator -(vec4f64 l, vec4f64 r) => new() { Data = l.Data - r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f64 operator *(vec4f64 l, vec4f64 r) => new() { Data = l.Data * r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f64 operator /(vec4f64 l, vec4f64 r) => new() { Data = l.Data / r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f64 operator &(vec4f64 l, vec4f64 r) => new() { Data = l.Data & r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f64 operator |(vec4f64 l, vec4f64 r) => new() { Data = l.Data | r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f64 operator ^(vec4f64 l, vec4f64 r) => new() { Data = l.Data ^ r.Data };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f64 operator %(vec4f64 l, vec4f64 r) => new() { Data = Vector256.Create((double)(l.x % r.x), (double)(l.y % r.y), (double)(l.z % r.z), default(double)) };
}

public partial class DMath
{
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f64 vec4(double x, double y, double z, double w) => new() { Data = Vector256.Create(x, y, z, w) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f64 vec4(double e) => new() { Data = Vector256.Create(e) };

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f64 vec4(double x, double y, vec2f64 v) => vec4(x, y, v.x, v.y);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f64 vec4(double x, vec2f64 v, double w) => vec4(x, v.x, v.y, w);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f64 vec4(vec2f64 v, double z, double w) => vec4(v.x, v.y, z, w);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f64 vec4(double e, vec3f64 v) => vec4(e, v.x, v.y, v.z);

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec4f64 vec4(vec3f64 v, double e) => vec4(v.x, v.y, v.z, e);
}


