//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Runtime.CompilerServices;
using System.Runtime.Intrinsics;
using System.Runtime.InteropServices;
namespace DualDrill.Mathematics;
using static DMath;

[StructLayout(LayoutKind.Sequential)]
public partial struct vec3u16{
    internal Vector64<System.UInt16> Data;
    
    public System.UInt16 x {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[0];
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set {
            Data = Vector64.Create(value, Data[1], Data[2], Data[3]);
        }
        
    }
    
    public System.UInt16 y {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[1];
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set {
            Data = Vector64.Create(Data[0], value, Data[2], Data[3]);
        }
        
    }
    
    public System.UInt16 z {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => Data[2];
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set {
            Data = Vector64.Create(Data[0], Data[1], value, Data[3]);
        }
        
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3u16 operator -(vec3u16 v)
    {
        return new() { Data = - v.Data };
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3u16 operator +(vec3u16 left, vec3u16 right)
    {
        return new() { Data = left.Data + right.Data };
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3u16 operator -(vec3u16 left, vec3u16 right)
    {
        return new() { Data = left.Data - right.Data };
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3u16 operator *(vec3u16 left, vec3u16 right)
    {
        return new() { Data = left.Data * right.Data };
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3u16 operator /(vec3u16 left, vec3u16 right)
    {
        return new() { Data = left.Data / right.Data };
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3u16 operator %(vec3u16 left, vec3u16 right)
    {
        return vec3((System.UInt16)(left.x % right.x), (System.UInt16)(left.y % right.y), (System.UInt16)(left.z % right.z));
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3u16 operator +(System.UInt16 left, vec3u16 right)
    {
        return new() { Data = Vector64.Create(left) + right.Data };
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3u16 operator +(vec3u16 left, System.UInt16 right)
    {
        return new() { Data = left.Data + Vector64.Create(right) };
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3u16 operator -(System.UInt16 left, vec3u16 right)
    {
        return new() { Data = Vector64.Create(left) - right.Data };
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3u16 operator -(vec3u16 left, System.UInt16 right)
    {
        return new() { Data = left.Data - Vector64.Create(right) };
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3u16 operator *(System.UInt16 left, vec3u16 right)
    {
        return new() { Data = Vector64.Create(left) * right.Data };
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3u16 operator *(vec3u16 left, System.UInt16 right)
    {
        return new() { Data = left.Data * Vector64.Create(right) };
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3u16 operator /(System.UInt16 left, vec3u16 right)
    {
        return new() { Data = Vector64.Create(left) / right.Data };
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3u16 operator /(vec3u16 left, System.UInt16 right)
    {
        return new() { Data = left.Data / Vector64.Create(right) };
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3u16 operator %(System.UInt16 left, vec3u16 right)
    {
        return vec3((System.UInt16)(left % right.x), (System.UInt16)(left % right.y), (System.UInt16)(left % right.z));
    }
    
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static vec3u16 operator %(vec3u16 left, System.UInt16 right)
    {
        return vec3((System.UInt16)(left.x % right), (System.UInt16)(left.y % right), (System.UInt16)(left.z % right));
    }
    
    public vec2u16 xx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, x);
    }
    
    public vec2u16 yx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, x);
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set 
        {
            y = value.x;
            x = value.y;
        }
        
    }
    
    public vec2u16 zx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, x);
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set 
        {
            z = value.x;
            x = value.y;
        }
        
    }
    
    public vec2u16 xy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, y);
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set 
        {
            x = value.x;
            y = value.y;
        }
        
    }
    
    public vec2u16 yy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, y);
    }
    
    public vec2u16 zy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, y);
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set 
        {
            z = value.x;
            y = value.y;
        }
        
    }
    
    public vec2u16 xz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(x, z);
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set 
        {
            x = value.x;
            z = value.y;
        }
        
    }
    
    public vec2u16 yz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(y, z);
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        set 
        {
            y = value.x;
            z = value.y;
        }
        
    }
    
    public vec2u16 zz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec2(z, z);
    }
    
    public vec3u16 xxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, x);
    }
    
    public vec3u16 yxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, x);
    }
    
    public vec3u16 zxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, x);
    }
    
    public vec3u16 xyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, x);
    }
    
    public vec3u16 yyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, x);
    }
    
    public vec3u16 zyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, x);
    }
    
    public vec3u16 xzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, x);
    }
    
    public vec3u16 yzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, x);
    }
    
    public vec3u16 zzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, x);
    }
    
    public vec3u16 xxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, y);
    }
    
    public vec3u16 yxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, y);
    }
    
    public vec3u16 zxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, y);
    }
    
    public vec3u16 xyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, y);
    }
    
    public vec3u16 yyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, y);
    }
    
    public vec3u16 zyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, y);
    }
    
    public vec3u16 xzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, y);
    }
    
    public vec3u16 yzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, y);
    }
    
    public vec3u16 zzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, y);
    }
    
    public vec3u16 xxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, x, z);
    }
    
    public vec3u16 yxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, x, z);
    }
    
    public vec3u16 zxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, x, z);
    }
    
    public vec3u16 xyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, y, z);
    }
    
    public vec3u16 yyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, y, z);
    }
    
    public vec3u16 zyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, y, z);
    }
    
    public vec3u16 xzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(x, z, z);
    }
    
    public vec3u16 yzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(y, z, z);
    }
    
    public vec3u16 zzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec3(z, z, z);
    }
    
    public vec4u16 xxxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, x);
    }
    
    public vec4u16 yxxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, x);
    }
    
    public vec4u16 zxxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, x);
    }
    
    public vec4u16 xyxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, x);
    }
    
    public vec4u16 yyxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, x);
    }
    
    public vec4u16 zyxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, x);
    }
    
    public vec4u16 xzxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, x);
    }
    
    public vec4u16 yzxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, x);
    }
    
    public vec4u16 zzxx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, x);
    }
    
    public vec4u16 xxyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, x);
    }
    
    public vec4u16 yxyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, x);
    }
    
    public vec4u16 zxyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, x);
    }
    
    public vec4u16 xyyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, x);
    }
    
    public vec4u16 yyyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, x);
    }
    
    public vec4u16 zyyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, x);
    }
    
    public vec4u16 xzyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, x);
    }
    
    public vec4u16 yzyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, x);
    }
    
    public vec4u16 zzyx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, x);
    }
    
    public vec4u16 xxzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, x);
    }
    
    public vec4u16 yxzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, x);
    }
    
    public vec4u16 zxzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, x);
    }
    
    public vec4u16 xyzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, x);
    }
    
    public vec4u16 yyzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, x);
    }
    
    public vec4u16 zyzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, x);
    }
    
    public vec4u16 xzzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, x);
    }
    
    public vec4u16 yzzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, x);
    }
    
    public vec4u16 zzzx {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, x);
    }
    
    public vec4u16 xxxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, y);
    }
    
    public vec4u16 yxxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, y);
    }
    
    public vec4u16 zxxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, y);
    }
    
    public vec4u16 xyxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, y);
    }
    
    public vec4u16 yyxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, y);
    }
    
    public vec4u16 zyxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, y);
    }
    
    public vec4u16 xzxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, y);
    }
    
    public vec4u16 yzxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, y);
    }
    
    public vec4u16 zzxy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, y);
    }
    
    public vec4u16 xxyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, y);
    }
    
    public vec4u16 yxyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, y);
    }
    
    public vec4u16 zxyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, y);
    }
    
    public vec4u16 xyyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, y);
    }
    
    public vec4u16 yyyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, y);
    }
    
    public vec4u16 zyyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, y);
    }
    
    public vec4u16 xzyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, y);
    }
    
    public vec4u16 yzyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, y);
    }
    
    public vec4u16 zzyy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, y);
    }
    
    public vec4u16 xxzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, y);
    }
    
    public vec4u16 yxzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, y);
    }
    
    public vec4u16 zxzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, y);
    }
    
    public vec4u16 xyzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, y);
    }
    
    public vec4u16 yyzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, y);
    }
    
    public vec4u16 zyzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, y);
    }
    
    public vec4u16 xzzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, y);
    }
    
    public vec4u16 yzzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, y);
    }
    
    public vec4u16 zzzy {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, y);
    }
    
    public vec4u16 xxxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, x, z);
    }
    
    public vec4u16 yxxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, x, z);
    }
    
    public vec4u16 zxxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, x, z);
    }
    
    public vec4u16 xyxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, x, z);
    }
    
    public vec4u16 yyxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, x, z);
    }
    
    public vec4u16 zyxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, x, z);
    }
    
    public vec4u16 xzxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, x, z);
    }
    
    public vec4u16 yzxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, x, z);
    }
    
    public vec4u16 zzxz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, x, z);
    }
    
    public vec4u16 xxyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, y, z);
    }
    
    public vec4u16 yxyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, y, z);
    }
    
    public vec4u16 zxyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, y, z);
    }
    
    public vec4u16 xyyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, y, z);
    }
    
    public vec4u16 yyyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, y, z);
    }
    
    public vec4u16 zyyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, y, z);
    }
    
    public vec4u16 xzyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, y, z);
    }
    
    public vec4u16 yzyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, y, z);
    }
    
    public vec4u16 zzyz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, y, z);
    }
    
    public vec4u16 xxzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, x, z, z);
    }
    
    public vec4u16 yxzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, x, z, z);
    }
    
    public vec4u16 zxzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, x, z, z);
    }
    
    public vec4u16 xyzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, y, z, z);
    }
    
    public vec4u16 yyzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, y, z, z);
    }
    
    public vec4u16 zyzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, y, z, z);
    }
    
    public vec4u16 xzzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(x, z, z, z);
    }
    
    public vec4u16 yzzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(y, z, z, z);
    }
    
    public vec4u16 zzzz {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => vec4(z, z, z, z);
    }
    
}

public static partial class DMath{
    public static vec3u16 vec3(System.UInt16 x, System.UInt16 y, System.UInt16 z){
        return new vec3u16() { Data = Vector64.Create(x, y, z, default) };
    }
    
    public static vec3u16 vec3(System.UInt16 e) => vec3(e, e, e);
    public static vec3u16 vec3(System.UInt16 e0, vec2u16 e1) => vec3(e0, e1.x, e1.y);
    public static vec3u16 vec3(vec2u16 e0, System.UInt16 e1) => vec3(e0.x, e0.y, e1);
}

