@page "/webview2"
@using Shared
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<h3>WebView2Client</h3>
@if (Module is null)
{
    <div>Initializing Client ...</div>
}
else
{
    <CascadingValue Value="Module">
        <DualDrill.Server.Components.Shared.InitializedClient Client="Client"
                                                              RenderService="RenderService">
        </DualDrill.Server.Components.Shared.InitializedClient>
    </CascadingValue>
}
<button @onclick="TriggerPushSharedBuffer">Trigger Post Shared Buffer</button>
@*
<div>
    <div>
        <span>Render Service</span>
        @if (RenderService is null)
        {
            <button @onclick="CreateRenderContext">Create Render Context</button>
        }
        <button @onclick="StartRender" disabled="@(RenderService is null)">Start Render</button>
        <button @onclick="StopRender" disabled="@(RenderService is null)">Stop Render</button>
    </div>
</div>
<div>
</div>

<p>
    id = @Client?.Uri
</p>
<p>
    peer id = @PeerClient?.Uri
</p>

@if (!Connected)
{
    <p>
        <h4>Peer Ids</h4>
        <button @onclick=RefreshPeerIds>refresh</button>

        <ul>
            @foreach (var pid in PeerUris)
            {
                <li>@pid</li>
                <button @onclick=@(() => Connect(pid))>connect</button>
            }
        </ul>
    </p>
}
else
{
    <button @onclick="SendVideo">Send Video</button>
    <button @onclick=@(Disconnect)>disconnect</button>
}
<video id="selfVideo" @ref="SelfVideoElement" autoplay playsinline></video> *@
